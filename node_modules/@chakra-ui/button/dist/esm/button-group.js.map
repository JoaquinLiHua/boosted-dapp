{"version":3,"sources":["../../src/button-group.tsx"],"names":["chakra","forwardRef","createContext","cx","__DEV__","React","useMemo","ButtonGroupProvider","useButtonGroup","strict","name","ButtonGroup","props","ref","size","colorScheme","variant","className","spacing","isAttached","isDisabled","rest","_className","context","groupStyles","display","borderRightRadius","borderRadius","borderLeftRadius","marginLeft","displayName"],"mappings":";;;;AAAA,SACEA,MADF,EAKEC,UALF,QAOO,mBAPP;AAQA,SAASC,aAAT,EAAwBC,EAAxB,EAA4BC,OAA5B,QAA2C,kBAA3C;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAyBA,IAAM,CAACC,mBAAD,EAAsBC,cAAtB,IAAwCN,aAAa,CACzD;AACEO,EAAAA,MAAM,EAAE,KADV;AAEEC,EAAAA,IAAI,EAAE;AAFR,CADyD,CAA3D;AAOA,SAASF,cAAT;AAEA,OAAO,IAAMG,WAAW,gBAAGV,UAAU,CACnC,SAASU,WAAT,CAAqBC,KAArB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,OAAO,GAAG,QALN;AAMJC,IAAAA,UANI;AAOJC,IAAAA;AAPI,MASFR,KATJ;AAAA,MAQKS,IARL,iCASIT,KATJ;;AAWA,MAAMU,UAAU,GAAGnB,EAAE,CAAC,sBAAD,EAAyBc,SAAzB,CAArB;;AAEA,MAAMM,OAAO,GAAGjB,OAAO,CACrB,OAAO;AAAEQ,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA,OAArB;AAA8BI,IAAAA;AAA9B,GAAP,CADqB,EAErB,CAACN,IAAD,EAAOC,WAAP,EAAoBC,OAApB,EAA6BI,UAA7B,CAFqB,CAAvB;AAKA,MAAII,WAA8B,GAAG;AACnCC,IAAAA,OAAO,EAAE;AAD0B,GAArC;;AAIA,MAAIN,UAAJ,EAAgB;AACdK,IAAAA,WAAW,gBACNA,WADM;AAET,8CAAwC;AAAEE,QAAAA,iBAAiB,EAAE;AAArB,OAF/B;AAGT,oDAA8C;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAHrC;AAIT,8CAAwC;AAAEC,QAAAA,gBAAgB,EAAE;AAApB;AAJ/B,MAAX;AAMD,GAPD,MAOO;AACLJ,IAAAA,WAAW,gBACNA,WADM;AAET,yCAAmC;AAAEK,QAAAA,UAAU,EAAEX;AAAd;AAF1B,MAAX;AAID;;AAED,sBACE,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAEK;AAA5B,kBACE,oBAAC,MAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAEV,GADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEW,WAHT;AAIE,IAAA,SAAS,EAAEF;AAJb,KAKMD,IALN,EADF,CADF;AAWD,CAjDkC,CAA9B;;AAoDP,IAAIjB,OAAJ,EAAa;AACXO,EAAAA,WAAW,CAACmB,WAAZ,GAA0B,aAA1B;AACD","sourcesContent":["import {\n  chakra,\n  SystemProps,\n  SystemStyleObject,\n  ThemingProps,\n  forwardRef,\n  PropsOf,\n} from \"@chakra-ui/system\"\nimport { createContext, cx, __DEV__ } from \"@chakra-ui/utils\"\nimport React, { useMemo } from \"react\"\n\nexport interface ButtonGroupProps\n  extends PropsOf<typeof chakra.div>,\n    ThemingProps {\n  /**\n   * If `true`, the borderRadius of button that are direct children will be altered\n   * to look flushed together\n   */\n  isAttached?: boolean\n  /**\n   * If `true`, all wrapped button will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * The spacing between the buttons\n   * @default '0.5rem'\n   */\n  spacing?: SystemProps[\"marginRight\"]\n}\n\ninterface ButtonGroupContext extends ThemingProps {\n  isDisabled?: boolean\n}\n\nconst [ButtonGroupProvider, useButtonGroup] = createContext<ButtonGroupContext>(\n  {\n    strict: false,\n    name: \"ButtonGroupContext\",\n  },\n)\n\nexport { useButtonGroup }\n\nexport const ButtonGroup = forwardRef<ButtonGroupProps, \"div\">(\n  function ButtonGroup(props, ref) {\n    const {\n      size,\n      colorScheme,\n      variant,\n      className,\n      spacing = \"0.5rem\",\n      isAttached,\n      isDisabled,\n      ...rest\n    } = props\n\n    const _className = cx(\"chakra-button__group\", className)\n\n    const context = useMemo(\n      () => ({ size, colorScheme, variant, isDisabled }),\n      [size, colorScheme, variant, isDisabled],\n    )\n\n    let groupStyles: SystemStyleObject = {\n      display: \"inline-flex\",\n    }\n\n    if (isAttached) {\n      groupStyles = {\n        ...groupStyles,\n        \"> *:first-of-type:not(:last-of-type)\": { borderRightRadius: 0 },\n        \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n        \"> *:not(:first-of-type):last-of-type\": { borderLeftRadius: 0 },\n      }\n    } else {\n      groupStyles = {\n        ...groupStyles,\n        \"& > *:not(style) ~ *:not(style)\": { marginLeft: spacing },\n      }\n    }\n\n    return (\n      <ButtonGroupProvider value={context}>\n        <chakra.div\n          ref={ref}\n          role=\"group\"\n          __css={groupStyles}\n          className={_className}\n          {...rest}\n        />\n      </ButtonGroupProvider>\n    )\n  },\n)\n\nif (__DEV__) {\n  ButtonGroup.displayName = \"ButtonGroup\"\n}\n"],"file":"button-group.js"}