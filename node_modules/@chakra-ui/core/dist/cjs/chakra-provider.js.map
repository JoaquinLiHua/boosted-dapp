{"version":3,"sources":["../../src/chakra-provider.tsx"],"names":["ChakraProvider","props","theme","children","storageManager","resetCSS","portalConfig","Error","config","initialColorMode","useInitialColorMode","zIndex"],"mappings":";;;;;AAAA;;AACA;;AACA;;AAOA;;;;;;;;AAoBA;;;;AAIO,IAAMA,cAA6C,GAAG,SAAhDA,cAAgD,CAACC,KAAD,EAAW;AAAA;;AAAA,MAC9DC,KAD8D,GACFD,KADE,CAC9DC,KAD8D;AAAA,MACvDC,QADuD,GACFF,KADE,CACvDE,QADuD;AAAA,MAC7CC,cAD6C,GACFH,KADE,CAC7CG,cAD6C;AAAA,MAC7BC,QAD6B,GACFJ,KADE,CAC7BI,QAD6B;AAAA,MACnBC,YADmB,GACFL,KADE,CACnBK,YADmB;;AAGtE,MAAI,CAACJ,KAAL,EAAY;AACV,UAAMK,KAAK,CAAC,8CAAD,CAAX;AACD;;AAED,sBACE,oBAAC,qBAAD;AAAe,IAAA,KAAK,EAAEL;AAAtB,kBACE,oBAAC,yBAAD;AACE,IAAA,YAAY,EAAEA,KAAF,qCAAEA,KAAK,CAAEM,MAAT,qBAAE,cAAeC,gBAD/B;AAEE,IAAA,kBAAkB,EAAEP,KAAF,sCAAEA,KAAK,CAAEM,MAAT,qBAAE,eAAeE,mBAFrC;AAGE,IAAA,cAAc,EAAEN;AAHlB,kBAKE,oBAAC,mBAAD,OALF,EAMGC,QAAQ,iBAAI,oBAAC,oBAAD,OANf,EAOGC,YAAY,gBACX,oBAAC,qBAAD;AAAe,IAAA,MAAM,EAAEA,YAAF,oBAAEA,YAAY,CAAEK;AAArC,KACGR,QADH,CADW,GAKXA,QAZJ,CADF,CADF;AAmBD,CA1BM","sourcesContent":["import CSSReset from \"@chakra-ui/css-reset\"\nimport { PortalManager, PortalManagerProps } from \"@chakra-ui/portal\"\nimport {\n  ColorModeProvider,\n  StorageManager,\n  ThemeProviderProps,\n  ThemeProvider,\n  GlobalStyle,\n} from \"@chakra-ui/system\"\nimport * as React from \"react\"\n\nexport interface ChakraProviderProps extends ThemeProviderProps {\n  /**\n   * The storage mechanism for the color mode value.\n   * - CSR: We recommend using `localStorage`\n   * - SSR: We recommend using `cookieStorage`\n   */\n  storageManager?: StorageManager\n  /**\n   * Configuration for the `PortalManager`\n   */\n  portalConfig?: Omit<PortalManagerProps, \"children\">\n  /**\n   * If `true`, `CSSReset` component will be mounted to help\n   * you reset browser styles\n   */\n  resetCSS?: boolean\n}\n\n/**\n * The global provider that must be added to make all Chakra components\n * work correctly\n */\nexport const ChakraProvider: React.FC<ChakraProviderProps> = (props) => {\n  const { theme, children, storageManager, resetCSS, portalConfig } = props\n\n  if (!theme) {\n    throw Error(\"ChakraProvider: the `theme` prop is required\")\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ColorModeProvider\n        defaultValue={theme?.config?.initialColorMode}\n        useSystemColorMode={theme?.config?.useInitialColorMode}\n        storageManager={storageManager}\n      >\n        <GlobalStyle />\n        {resetCSS && <CSSReset />}\n        {portalConfig ? (\n          <PortalManager zIndex={portalConfig?.zIndex}>\n            {children}\n          </PortalManager>\n        ) : (\n          children\n        )}\n      </ColorModeProvider>\n    </ThemeProvider>\n  )\n}\n"],"file":"chakra-provider.js"}