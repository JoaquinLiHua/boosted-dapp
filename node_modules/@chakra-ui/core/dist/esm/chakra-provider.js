import CSSReset from "@chakra-ui/css-reset";
import { PortalManager } from "@chakra-ui/portal";
import { ColorModeProvider, ThemeProvider, GlobalStyle } from "@chakra-ui/system";
import * as React from "react";

/**
 * The global provider that must be added to make all Chakra components
 * work correctly
 */
export var ChakraProvider = props => {
  var _theme$config, _theme$config2;

  var {
    theme,
    children,
    storageManager,
    resetCSS,
    portalConfig
  } = props;

  if (!theme) {
    throw Error("ChakraProvider: the `theme` prop is required");
  }

  return /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: theme
  }, /*#__PURE__*/React.createElement(ColorModeProvider, {
    defaultValue: theme == null ? void 0 : (_theme$config = theme.config) == null ? void 0 : _theme$config.initialColorMode,
    useSystemColorMode: theme == null ? void 0 : (_theme$config2 = theme.config) == null ? void 0 : _theme$config2.useInitialColorMode,
    storageManager: storageManager
  }, /*#__PURE__*/React.createElement(GlobalStyle, null), resetCSS && /*#__PURE__*/React.createElement(CSSReset, null), portalConfig ? /*#__PURE__*/React.createElement(PortalManager, {
    zIndex: portalConfig == null ? void 0 : portalConfig.zIndex
  }, children) : children));
};
//# sourceMappingURL=chakra-provider.js.map