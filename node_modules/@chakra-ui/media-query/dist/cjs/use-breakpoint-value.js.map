{"version":3,"sources":["../../src/use-breakpoint-value.ts"],"names":["useBreakpointValue","values","breakpoint","obj"],"mappings":";;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;AAOO,SAASA,kBAAT,CAAqCC,MAArC,EAAsE;AAC3E,MAAMC,UAAU,GAAG,mCAAnB;AACA,MAAI,CAACA,UAAL,EAAiB;AACjB,MAAMC,GAAG,GAAG,oBAAQF,MAAR,IAAkB,kCAAsBA,MAAtB,CAAlB,GAAkDA,MAA9D;AACA,SAAO,iCAAgBE,GAAhB,EAAqBD,UAArB,CAAP;AACD","sourcesContent":["import { getClosestValue } from \"./media-query.utils\"\nimport { useBreakpoint } from \"./use-breakpoint\"\nimport { isArray, arrayToObjectNotation } from \"@chakra-ui/utils\"\n\n/**\n * React hook for getting the value for the current breakpoint from the\n * provided responsive values object.\n *\n * @example\n * const width = useBreakpointValue({ base: '150px', md: '250px' })\n */\nexport function useBreakpointValue<T = any>(values: Record<string, T> | T[]) {\n  const breakpoint = useBreakpoint()\n  if (!breakpoint) return\n  const obj = isArray(values) ? arrayToObjectNotation(values) : values\n  return getClosestValue(obj, breakpoint)\n}\n"],"file":"use-breakpoint-value.js"}