{"version":3,"sources":["../../src/media-query.tsx"],"names":["useMediaQuery","React","useTheme","get","__DEV__","Visibility","props","breakpoint","hide","children","show","isVisible","rendered","Hide","query","useQuery","displayName","Show","getBreakpoint","theme","value","below","above","bpBelow","bpAbove"],"mappings":"AAAA,SAASA,aAAT,QAA8B,mBAA9B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAAeC,GAAf,EAAoBC,OAApB,QAAmC,kBAAnC;;AAQA;;;;;;AAMA,IAAMC,UAAqC,GAAIC,KAAD,IAAW;AACvD,MAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA;AAApB,MAAiCH,KAAvC;AACA,MAAM,CAACI,IAAD,IAASV,aAAa,CAACO,UAAD,CAA5B;AACA,MAAMI,SAAS,GAAGH,IAAI,GAAG,CAACE,IAAJ,GAAWA,IAAjC;AAEA,MAAME,QAAQ,GAAGD,SAAS,GAAGF,QAAH,GAAc,IAAxC;AACA,SAAOG,QAAP;AACD,CAPD;;AAWA,OAAO,IAAMC,IAAyB,GAAIP,KAAD,IAAW;AAClD,MAAMQ,KAAK,GAAGC,QAAQ,CAACT,KAAD,CAAtB;AACA,sBACE,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEQ,KAAxB;AAA+B,IAAA,IAAI,EAAE;AAArC,KACGR,KAAK,CAACG,QADT,CADF;AAKD,CAPM;;AASP,IAAIL,OAAJ,EAAa;AACXS,EAAAA,IAAI,CAACG,WAAL,GAAmB,MAAnB;AACD;;AASD,OAAO,IAAMC,IAAyB,GAAIX,KAAD,IAAW;AAClD,MAAMQ,KAAK,GAAGC,QAAQ,CAACT,KAAD,CAAtB;AACA,sBAAO,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEQ;AAAxB,KAAgCR,KAAK,CAACG,QAAtC,CAAP;AACD,CAHM;;AAKP,IAAIL,OAAJ,EAAa;AACXa,EAAAA,IAAI,CAACD,WAAL,GAAmB,MAAnB;AACD;;AAED,IAAME,aAAa,GAAG,CAACC,KAAD,EAAcC,KAAd,KACpBjB,GAAG,CAACgB,KAAD,mBAAuBC,KAAvB,EAAgCA,KAAhC,CADL;;AASA,OAAO,SAASL,QAAT,CAAkBT,KAAlB,EAAwC;AAC7C,MAAM;AAAEC,IAAAA,UAAU,GAAG,EAAf;AAAmBc,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B,MAAoChB,KAA1C;AAEA,MAAMa,KAAK,GAAGjB,QAAQ,EAAtB;AACA,MAAMqB,OAAO,GAAGL,aAAa,CAACC,KAAD,EAAQE,KAAR,CAA7B;AACA,MAAMG,OAAO,GAAGN,aAAa,CAACC,KAAD,EAAQG,KAAR,CAA7B;AAEA,MAAMR,KAAK,GAAGS,OAAO,oBACFA,OADE,SAEjBC,OAAO,oBACQA,OADR,SAEPjB,UAJJ;AAMA,SAAOO,KAAP;AACD","sourcesContent":["import { useMediaQuery } from \"./use-media-query\"\nimport * as React from \"react\"\nimport { useTheme } from \"@chakra-ui/system\"\nimport { Dict, get, __DEV__ } from \"@chakra-ui/utils\"\n\ninterface VisibilityProps {\n  breakpoint: string\n  hide?: boolean\n  children: React.ReactNode\n}\n\n/**\n * Visibility\n *\n * React component to control the visibility of it's\n * children based on the current breakpoint\n */\nconst Visibility: React.FC<VisibilityProps> = (props) => {\n  const { breakpoint, hide, children } = props\n  const [show] = useMediaQuery(breakpoint)\n  const isVisible = hide ? !show : show\n\n  const rendered = isVisible ? children : null\n  return rendered as React.ReactElement\n}\n\nexport type HideProps = ShowProps\n\nexport const Hide: React.FC<HideProps> = (props) => {\n  const query = useQuery(props)\n  return (\n    <Visibility breakpoint={query} hide={true}>\n      {props.children}\n    </Visibility>\n  )\n}\n\nif (__DEV__) {\n  Hide.displayName = \"Hide\"\n}\n\nexport interface ShowProps {\n  breakpoint?: string\n  below?: string\n  above?: string\n  children?: React.ReactNode\n}\n\nexport const Show: React.FC<ShowProps> = (props) => {\n  const query = useQuery(props)\n  return <Visibility breakpoint={query}>{props.children}</Visibility>\n}\n\nif (__DEV__) {\n  Show.displayName = \"Show\"\n}\n\nconst getBreakpoint = (theme: Dict, value: any) =>\n  get(theme, `breakpoints.${value}`, value)\n\nexport interface UseQueryProps {\n  breakpoint?: string\n  below?: string\n  above?: string\n}\n\nexport function useQuery(props: UseQueryProps) {\n  const { breakpoint = \"\", below, above } = props\n\n  const theme = useTheme()\n  const bpBelow = getBreakpoint(theme, below)\n  const bpAbove = getBreakpoint(theme, above)\n\n  const query = bpBelow\n    ? `(max-width: ${bpBelow})`\n    : bpAbove\n    ? `(min-width: ${bpAbove})`\n    : breakpoint\n\n  return query\n}\n"],"file":"media-query.js"}