{"version":3,"sources":["../../src/use-form-control.ts"],"names":["useFormControlContext","ariaAttr","dataAttr","callAllHandlers","omit","useFormControl","props","field","describedBy","isInvalid","length","unshift","feedbackId","push","hasHelpText","helpTextId","ariaDescribedBy","join","cleanProps","id","disabled","isDisabled","readOnly","isReadOnly","required","isRequired","undefined","onFocus","onBlur","useFormControlLabel","isFocused","isLoading","labelId","htmlFor"],"mappings":"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","sourcesContent":["import { FocusEventHandler } from \"react\"\nimport { FormControlOptions, useFormControlContext } from \"./form-control\"\nimport {\n  ariaAttr,\n  dataAttr,\n  callAllHandlers,\n  Dict,\n  omit,\n} from \"@chakra-ui/utils\"\n\nexport interface UseFormControlProps<T extends HTMLElement>\n  extends FormControlOptions {\n  id?: string\n  onFocus?: FocusEventHandler<T>\n  onBlur?: FocusEventHandler<T>\n  disabled?: boolean\n  readOnly?: boolean\n  required?: boolean\n}\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n */\nexport function useFormControl<T extends HTMLElement>(\n  props: UseFormControlProps<T>,\n) {\n  const field = useFormControlContext()\n  const describedBy: string[] = []\n\n  if (field?.isInvalid) {\n    /**\n     * Error message must be described first\n     * in all scenarios\n     */\n    if (describedBy.length > 0) {\n      describedBy.unshift(field.feedbackId)\n    } else {\n      describedBy.push(field.feedbackId)\n    }\n  }\n\n  if (field?.hasHelpText) describedBy.push(field.helpTextId)\n  const ariaDescribedBy = describedBy.join(\" \")\n\n  const cleanProps = omit(props, [\n    \"isInvalid\",\n    \"isDisabled\",\n    \"isReadOnly\",\n    \"isRequired\",\n  ])\n\n  return {\n    ...cleanProps,\n    id: props.id ?? field?.id,\n    disabled: props.disabled || props.isDisabled || field?.isDisabled,\n    readOnly: props.readOnly || props.isReadOnly || field?.isReadOnly,\n    required: props.required || props.isRequired || field?.isRequired,\n    \"aria-invalid\": ariaAttr(props.isInvalid || field?.isInvalid),\n    \"aria-required\": ariaAttr(props.isRequired || field?.isRequired),\n    \"aria-readonly\": ariaAttr(props.isReadOnly || field?.isReadOnly),\n    \"aria-describedby\": ariaDescribedBy || undefined,\n    onFocus: callAllHandlers(field?.onFocus, props.onFocus),\n    onBlur: callAllHandlers(field?.onBlur, props.onBlur),\n  }\n}\n\nexport function useFormControlLabel(props: Dict) {\n  const field = useFormControlContext()\n  return {\n    ...props,\n    \"data-focus\": dataAttr(field?.isFocused),\n    \"data-disabled\": dataAttr(field?.isDisabled),\n    \"data-invalid\": dataAttr(field?.isInvalid),\n    \"data-loading\": dataAttr(field?.isLoading),\n    \"data-readonly\": dataAttr(field?.isReadOnly),\n    id: props.id ?? field?.labelId,\n    htmlFor: props.htmlFor ?? field?.id,\n  }\n}\n"],"file":"use-form-control.js"}