{"version":3,"sources":["../../src/input-element.tsx"],"names":["StyledElement","baseStyle","display","alignItems","justifyContent","position","top","zIndex","InputElement","props","ref","placement","rest","styles","input","field","elementStyles","width","height","h","fontSize","paddingX","paddingLeft","pl","id","__DEV__","displayName","InputLeftElement","className","_className","InputRightElement"],"mappings":"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","sourcesContent":["import { chakra, forwardRef, PropsOf, useStyles } from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface InputElementProps extends PropsOf<typeof chakra.div> {\n  placement?: \"left\" | \"right\"\n}\n\nconst StyledElement = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"0\",\n    zIndex: 1,\n  },\n})\n\nconst InputElement = forwardRef<InputElementProps, \"div\">(function InputElement(\n  props,\n  ref,\n) {\n  const { placement = \"left\", ...rest } = props\n\n  const styles = useStyles()\n  const input: any = styles.field\n\n  const elementStyles = {\n    [placement]: \"0\",\n    width: input?.height ?? input?.h,\n    height: input?.height ?? input?.h,\n    fontSize: input?.fontSize,\n    paddingX: input?.paddingLeft ?? input?.pl,\n  }\n\n  return <StyledElement ref={ref} __css={elementStyles} {...rest} />\n})\n\n// This is used in `input-group.tsx`\nInputElement.id = \"InputElement\"\n\nif (__DEV__) {\n  InputElement.displayName = \"InputElement\"\n}\n\nexport const InputLeftElement = forwardRef<InputElementProps, \"div\">(\n  function InputLeftElement(props, ref) {\n    const { className, ...rest } = props\n    const _className = cx(\"chakra-input__left-element\", className)\n\n    return (\n      <InputElement\n        ref={ref}\n        placement=\"left\"\n        className={_className}\n        {...rest}\n      />\n    )\n  },\n)\n\n// This is used in `input-group.tsx`\nInputLeftElement.id = \"InputLeftElement\"\n\nif (__DEV__) {\n  InputLeftElement.displayName = \"InputLeftElement\"\n}\n\nexport const InputRightElement = forwardRef<InputElementProps, \"div\">(\n  function InputRightElement(props, ref) {\n    const { className, ...rest } = props\n    const _className = cx(\"chakra-input__right-element\", className)\n\n    return (\n      <InputElement\n        ref={ref}\n        placement=\"right\"\n        className={_className}\n        {...rest}\n      />\n    )\n  },\n)\n\n// This is used in `input-group.tsx`\nInputRightElement.id = \"InputRightElement\"\n\nif (__DEV__) {\n  InputRightElement.displayName = \"InputRightElement\"\n}\n"],"file":"input-element.js"}