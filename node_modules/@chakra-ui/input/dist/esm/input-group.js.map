{"version":3,"sources":["../../src/input-group.tsx"],"names":["chakra","useMultiStyleConfig","omitThemingProps","StylesProvider","forwardRef","cx","__DEV__","getValidChildren","React","cloneElement","useRef","InputGroup","props","ref","styles","children","className","rest","_className","stylesRef","validChildren","input","field","forEach","child","type","id","current","paddingLeft","height","h","paddingRight","borderRightRadius","borderLeftRadius","clones","map","theming","size","variant","pl","pr","width","display","position","displayName"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  PropsOf,\n  ThemingProps,\n  useMultiStyleConfig,\n  omitThemingProps,\n  StylesProvider,\n  forwardRef,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__, getValidChildren } from \"@chakra-ui/utils\"\nimport React, { cloneElement, useRef } from \"react\"\n\nexport interface InputGroupProps\n  extends PropsOf<typeof chakra.div>,\n    ThemingProps {}\n\nexport const InputGroup = forwardRef<InputGroupProps, \"div\">(\n  function InputGroup(props, ref) {\n    const styles = useMultiStyleConfig(\"Input\", props)\n    const { children, className, ...rest } = omitThemingProps(props)\n\n    const _className = cx(\"chakra-input__group\", className)\n    const stylesRef = useRef<InputGroupProps>({})\n\n    const validChildren = getValidChildren(children)\n\n    const input: any = styles.field\n\n    validChildren.forEach((child: any) => {\n      if (!styles) return\n\n      if (child.type.id === \"InputLeftElement\") {\n        stylesRef.current.paddingLeft = input.height ?? input.h\n      }\n\n      if (child.type.id === \"InputRightElement\") {\n        stylesRef.current.paddingRight = input.height ?? input.h\n      }\n\n      if (child.type.id === \"InputRightAddon\") {\n        stylesRef.current.borderRightRadius = 0\n      }\n\n      if (child.type.id === \"InputLeftAddon\") {\n        stylesRef.current.borderLeftRadius = 0\n      }\n    })\n\n    const clones = validChildren.map((child: any) => {\n      const theming = { size: props.size, variant: props.variant }\n      const { pl, paddingLeft, pr, paddingRight } = child.props\n\n      return child.type.id !== \"Input\"\n        ? cloneElement(child, theming)\n        : cloneElement(child, {\n            ...theming,\n            paddingLeft: pl ?? paddingLeft ?? stylesRef.current?.paddingLeft,\n            paddingRight: pr ?? paddingRight ?? stylesRef.current?.paddingRight,\n            borderLeftRadius: stylesRef.current?.borderLeftRadius,\n            borderRightRadius: stylesRef.current?.borderRightRadius,\n          })\n    })\n\n    return (\n      <chakra.div\n        className={_className}\n        ref={ref}\n        __css={{\n          width: \"100%\",\n          display: \"flex\",\n          position: \"relative\",\n        }}\n        {...rest}\n      >\n        <StylesProvider value={styles}>{clones}</StylesProvider>\n      </chakra.div>\n    )\n  },\n)\n\nif (__DEV__) {\n  InputGroup.displayName = \"InputGroup\"\n}\n"],"file":"input-group.js"}