{"version":3,"sources":["../../src/progress.utils.tsx"],"names":["isFunction","isUndefined","valueToPercent","keyframes","spin","strokeDasharray","strokeDashoffset","rotate","transform","progress","left","stripe","from","backgroundPosition","to","getProgressProps","options","value","min","max","valueText","getValueText","percent","undefined","isIndeterminate","bind","role"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,EAAkCC,cAAlC,QAAwD,kBAAxD;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,OAAO,IAAMC,IAAI,GAAGD,SAAS,CAAC;AAC5B,QAAM;AACJE,IAAAA,eAAe,EAAE,QADb;AAEJC,IAAAA,gBAAgB,EAAE;AAFd,GADsB;AAK5B,SAAO;AACLD,IAAAA,eAAe,EAAE,UADZ;AAELC,IAAAA,gBAAgB,EAAE;AAFb,GALqB;AAS5B,UAAQ;AACND,IAAAA,eAAe,EAAE,UADX;AAENC,IAAAA,gBAAgB,EAAE;AAFZ;AAToB,CAAD,CAAtB;AAeP,OAAO,IAAMC,MAAM,GAAGJ,SAAS,CAAC;AAC9B,QAAM;AACJK,IAAAA,SAAS,EAAE;AADP,GADwB;AAI9B,UAAQ;AACNA,IAAAA,SAAS,EAAE;AADL;AAJsB,CAAD,CAAxB;AASP,OAAO,IAAMC,QAAQ,GAAGN,SAAS,CAAC;AAChC,QAAM;AAAEO,IAAAA,IAAI,EAAE;AAAR,GAD0B;AAEhC,UAAQ;AAAEA,IAAAA,IAAI,EAAE;AAAR;AAFwB,CAAD,CAA1B;AAKP,OAAO,IAAMC,MAAM,GAAGR,SAAS,CAAC;AAC9BS,EAAAA,IAAI,EAAE;AAAEC,IAAAA,kBAAkB,EAAE;AAAtB,GADwB;AAE9BC,EAAAA,EAAE,EAAE;AAAED,IAAAA,kBAAkB,EAAE;AAAtB;AAF0B,CAAD,CAAxB;;AAaP;;;;AAIA,OAAO,SAASE,gBAAT,CAA0BC,OAA1B,EAA4D;AACjE,MAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,GAAT;AAAcC,IAAAA,GAAd;AAAmBC,IAAAA,SAAnB;AAA8BC,IAAAA;AAA9B,MAA+CL,OAArD;AAEA,MAAMM,OAAO,GAAGL,KAAK,IAAI,IAAT,GAAgBf,cAAc,CAACe,KAAD,EAAQC,GAAR,EAAaC,GAAb,CAA9B,GAAkDI,SAAlE;AACA,MAAMC,eAAe,GAAGvB,WAAW,CAACgB,KAAD,CAAnC;AAEA,SAAO;AACLQ,IAAAA,IAAI,EAAE;AACJ,4BAAsBD,eAAe,GAAG,EAAH,GAAQD,SADzC;AAEJ,uBAAiBJ,GAFb;AAGJ,uBAAiBD,GAHb;AAIJ,uBAAiBM,eAAe,GAAGD,SAAH,GAAeN,KAJ3C;AAKJ,wBACEA,KAAK,IAAI,IAAT,IAAiBK,OAAO,IAAI,IAA5B,GACIC,SADJ,GAEIvB,UAAU,CAACqB,YAAD,CAAV,GACAA,YAAY,CAACJ,KAAD,EAAQK,OAAR,CADZ,GAEAF,SAVF;AAWJM,MAAAA,IAAI,EAAE;AAXF,KADD;AAcLJ,IAAAA,OAdK;AAeLE,IAAAA;AAfK,GAAP;AAiBD","sourcesContent":["import { isFunction, isUndefined, valueToPercent } from \"@chakra-ui/utils\"\nimport { keyframes } from \"@chakra-ui/system\"\n\nexport const spin = keyframes({\n  \"0%\": {\n    strokeDasharray: \"1, 400\",\n    strokeDashoffset: \"0\",\n  },\n  \"50%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-100\",\n  },\n  \"100%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-260\",\n  },\n})\n\nexport const rotate = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\",\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\",\n  },\n})\n\nexport const progress = keyframes({\n  \"0%\": { left: \"-40%\" },\n  \"100%\": { left: \"100%\" },\n})\n\nexport const stripe = keyframes({\n  from: { backgroundPosition: \"1rem 0\" },\n  to: { backgroundPosition: \"0 0\" },\n})\n\nexport interface GetProgressPropsOptions {\n  value?: number\n  min: number\n  max: number\n  valueText?: string\n  getValueText?(value: number, percent: number): string\n}\n\n/**\n * Get the common `aria-*` attributes for both the linear and circular\n * progress components.\n */\nexport function getProgressProps(options: GetProgressPropsOptions) {\n  const { value, min, max, valueText, getValueText } = options\n\n  const percent = value != null ? valueToPercent(value, min, max) : undefined\n  const isIndeterminate = isUndefined(value)\n\n  return {\n    bind: {\n      \"data-indeterminate\": isIndeterminate ? \"\" : undefined,\n      \"aria-valuemax\": max,\n      \"aria-valuemin\": min,\n      \"aria-valuenow\": isIndeterminate ? undefined : value,\n      \"aria-valuetext\":\n        value == null || percent == null\n          ? undefined\n          : isFunction(getValueText)\n          ? getValueText(value, percent)\n          : valueText,\n      role: \"progressbar\",\n    },\n    percent,\n    isIndeterminate,\n  }\n}\n"],"file":"progress.utils.js"}