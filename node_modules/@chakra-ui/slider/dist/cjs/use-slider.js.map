{"version":3,"sources":["../../src/use-slider.ts"],"names":["useSlider","props","min","max","onChange","valueProp","value","defaultValue","isReversed","orientation","idProp","id","isDisabled","isReadOnly","onChangeStart","onChangeEnd","step","getAriaValueText","ariaValueText","ariaLabel","ariaLabelledBy","name","htmlProps","isDragging","setDragging","isFocused","setFocused","eventSource","setEventSource","isInteractive","getDefaultValue","shouldUpdate","prev","next","computedValue","setValue","cleanUpRef","reversedValue","trackValue","trackPercent","isVertical","trackRef","thumbRef","rootRef","thumbId","trackId","getValueFromPointer","event","current","trackRect","borderBox","touches","clientX","clientY","diff","bottom","left","length","height","width","percent","nextValue","parseFloat","tenSteps","oneStep","constrain","actions","stepUp","stepDown","reset","stepTo","onKeyDown","stopPropagation","onKey","keyMap","ArrowRight","ArrowUp","ArrowLeft","ArrowDown","PageUp","PageDown","Home","End","valueText","thumbBoxModel","thumbRect","thumbStyle","position","userSelect","touchAction","orient","vertical","horizontal","rootStyle","WebkitTapHighlightColor","outline","paddingLeft","paddingRight","paddingTop","paddingBottom","trackStyle","transform","top","innerTrackStyle","right","onMouseDown","on","doc","run","addEventListener","clean","removeEventListener","off","mouseup","onTouchStart","preventDefault","touchend","touchcancel","detach","Object","values","forEach","cleanup","mousedown","touchstart","state","getRootProps","ref","tabIndex","style","getTrackProps","getInnerTrackProps","getThumbProps","role","undefined","onFocus","onBlur","getMarkerProps","isInRange","isHighlighted","markerPercent","markerStyle","pointerEvents","getInputProps","type","options"],"mappings":"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","sourcesContent":["import {\n  useBoolean,\n  useControllableState,\n  useDimensions,\n  useEventCallback,\n  useEventListener,\n  useIds,\n  useUpdateEffect,\n} from \"@chakra-ui/hooks\"\nimport {\n  ariaAttr,\n  callAllHandlers,\n  clampValue,\n  createOnKeyDown,\n  dataAttr,\n  Dict,\n  focus,\n  getBox,\n  getOwnerDocument,\n  mergeRefs,\n  percentToValue,\n  roundValueToStep,\n  valueToPercent,\n  isRightClick,\n} from \"@chakra-ui/utils\"\nimport {\n  Ref,\n  useState,\n  useRef,\n  useCallback,\n  useMemo,\n  useEffect,\n  CSSProperties,\n} from \"react\"\n\nexport interface UseSliderProps {\n  /**\n   * The minimum allowed value of the slider. Cannot be greater than max.\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum allowed value of the slider. Cannot be less than min.\n   * @default 100\n   */\n  max?: number\n  /**\n   * The step in which increments/decrements have to be made\n   * @default 1\n   */\n  step?: number\n  /**\n   * The value of the slider in controlled mode\n   */\n  value?: number\n  /**\n   * The initial value of the slider in uncontrolled mode\n   */\n  defaultValue?: number\n  /**\n   * orientation of the slider\n   * @default \"horizontal\"\n   */\n  orientation?: \"horizontal\" | \"vertical\"\n  /**\n   * If `true`, the value will be incremented or decremented in reverse.\n   */\n  isReversed?: boolean\n  /**\n   * function gets called whenever the user starts dragging the slider handle\n   */\n  onChangeStart?(value: number): void\n  /**\n   * function gets called whenever the user stops dragging the slider handle.\n   */\n  onChangeEnd?(value: number): void\n  /**\n   * function gets called whenever the slider handle is being dragged or clicked\n   */\n  onChange?(value: number): void\n  /**\n   * The base `id` to use for the slider and it's components\n   */\n  id?: string\n  /**\n   * The name attribute of the hidden `input` field.\n   * This is particularly useful in forms\n   */\n  name?: string\n  /**\n   * If `true`, the slider will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the slider will be in `read-only` state\n   */\n  isReadOnly?: boolean\n  /**\n   * Function that returns the `aria-valuetext` for screen readers.\n   * It's mostly used to generate a more human-readable\n   * representation of the value for assistive technologies\n   */\n  getAriaValueText?(value: number): string\n  /**\n   * The static string to use used for `aria-valuetext`\n   */\n  \"aria-valuetext\"?: string\n  /**\n   * The static string to use used for `aria-label`\n   * if no visible label is used.\n   */\n  \"aria-label\"?: string\n  /**\n   * The static string `aria-labelledby` that points to the\n   * ID of the element that serves as label for the slider\n   */\n  \"aria-labelledby\"?: string\n}\n\ntype EventSource = \"mouse\" | \"touch\" | \"keyboard\"\n\n/**\n * React hook that implements an accessible range slider.\n *\n * It's an alternative to `<input type=\"range\" />`, and returns\n * prop getters for the component parts\n *\n * @see Docs     https://chakra-ui.com/components/slider\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.1/#slider\n */\nexport function useSlider(props: UseSliderProps) {\n  const {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed,\n    orientation,\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart,\n    onChangeEnd,\n    step = 1,\n    getAriaValueText,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    ...htmlProps\n  } = props\n\n  const [isDragging, setDragging] = useBoolean()\n  const [isFocused, setFocused] = useBoolean()\n  const [eventSource, setEventSource] = useState<EventSource>()\n\n  const isInteractive = !(isDisabled || isReadOnly)\n\n  /**\n   * Enable the slider handle controlled and uncontrolled scenarios\n   */\n  const [computedValue, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue ?? getDefaultValue(min, max),\n    onChange,\n    shouldUpdate: (prev, next) => prev !== next,\n  })\n\n  /**\n   * Slider uses DOM APIs to add and remove event listeners.\n   * Noticed some issues with React's synthetic events.\n   *\n   * We use `ref` to save the functions used to remove\n   * the event listeners.\n   *\n   * Ideally, we'll love to use pointer-events API but it's\n   * not fully supported in all browsers.\n   */\n  const cleanUpRef = useRef<Dict<Function>>({})\n\n  /**\n   * Constrain the value because it can't be less than min\n   * or greater than max\n   */\n  const value = clampValue(computedValue, min, max)\n  const prev = useRef<number>()\n\n  const reversedValue = max - value + min\n  const trackValue = isReversed ? reversedValue : value\n  const trackPercent = valueToPercent(trackValue, min, max)\n\n  const isVertical = orientation === \"vertical\"\n\n  /**\n   * Let's keep a reference to the slider track and thumb\n   */\n  const trackRef = useRef<any>(null)\n  const thumbRef = useRef<any>(null)\n  const rootRef = useRef<any>(null)\n\n  /**\n   * Generate unique ids for component parts\n   */\n  const [thumbId, trackId] = useIds(idProp, `slider-thumb`, `slider-track`)\n\n  /**\n   * Get relative value of slider from the event by tracking\n   * how far you clicked within the track to determine the value\n   */\n  const getValueFromPointer = useCallback(\n    (event) => {\n      if (!trackRef.current) return\n\n      const trackRect = getBox(trackRef.current).borderBox\n      const { clientX, clientY } = event.touches?.[0] ?? event\n\n      const diff = isVertical\n        ? trackRect.bottom - clientY\n        : clientX - trackRect.left\n\n      const length = isVertical ? trackRect.height : trackRect.width\n      let percent = diff / length\n\n      if (isReversed) {\n        percent = 1 - percent\n      }\n\n      let nextValue = percentToValue(percent, min, max)\n\n      if (step) {\n        nextValue = parseFloat(roundValueToStep(nextValue, min, step))\n      }\n\n      nextValue = clampValue(nextValue, min, max)\n\n      return nextValue\n    },\n    [isVertical, isReversed, max, min, step],\n  )\n\n  const tenSteps = (max - min) / 10\n  const oneStep = step || (max - min) / 100\n\n  const constrain = useCallback(\n    (value: number) => {\n      // bail out if slider isn't interactive\n      if (!isInteractive) return\n      prev.current = value\n      value = parseFloat(roundValueToStep(value, min, oneStep))\n      value = clampValue(value, min, max)\n      setValue(value)\n    },\n    [oneStep, max, min, setValue, isInteractive],\n  )\n\n  const actions = useMemo(\n    () => ({\n      stepUp: (step = oneStep) => {\n        const next = isReversed ? value - step : value + step\n        constrain(next)\n      },\n      stepDown: (step = oneStep) => {\n        const next = isReversed ? value + step : value - step\n        constrain(next)\n      },\n      reset: () => constrain(defaultValue || 0),\n      stepTo: (value: number) => constrain(value),\n    }),\n    [constrain, isReversed, value, oneStep, defaultValue],\n  )\n\n  /**\n   * Keyboard interaction to ensure users can operate\n   * the slider using only their keyboard.\n   */\n  const onKeyDown = createOnKeyDown({\n    stopPropagation: true,\n    onKey: () => setEventSource(\"keyboard\"),\n    keyMap: {\n      ArrowRight: () => actions.stepUp(),\n      ArrowUp: () => actions.stepUp(),\n      ArrowLeft: () => actions.stepDown(),\n      ArrowDown: () => actions.stepDown(),\n      PageUp: () => actions.stepUp(tenSteps),\n      PageDown: () => actions.stepDown(tenSteps),\n      Home: () => constrain(min),\n      End: () => constrain(max),\n    },\n  })\n\n  /**\n   * ARIA (Optional): To define a human readable representation of the value,\n   * we allow users pass aria-valuetext.\n   */\n  const valueText = getAriaValueText?.(value) ?? ariaValueText\n\n  /**\n   * Measure the dimensions of the thumb so\n   * we can center it within the track properly\n   */\n  const thumbBoxModel = useDimensions(thumbRef)\n  const thumbRect = thumbBoxModel?.borderBox ?? {\n    width: 0,\n    height: 0,\n  }\n\n  /**\n   * Compute styles for all component parts.\n   */\n  const thumbStyle: React.CSSProperties = {\n    position: \"absolute\",\n    userSelect: \"none\",\n    touchAction: \"none\",\n    ...orient({\n      orientation,\n      vertical: {\n        bottom: `calc(${trackPercent}% - ${thumbRect.height / 2}px)`,\n      },\n      horizontal: {\n        left: `calc(${trackPercent}% - ${thumbRect.width / 2}px)`,\n      },\n    }),\n  }\n\n  const rootStyle: React.CSSProperties = {\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0,\n    ...orient({\n      orientation,\n      vertical: {\n        paddingLeft: thumbRect.width / 2,\n        paddingRight: thumbRect.width / 2,\n      },\n      horizontal: {\n        paddingTop: thumbRect.height / 2,\n        paddingBottom: thumbRect.height / 2,\n      },\n    }),\n  }\n\n  const trackStyle: React.CSSProperties = {\n    position: \"absolute\",\n    ...orient({\n      orientation,\n      vertical: {\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        height: \"100%\",\n      },\n      horizontal: {\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: \"100%\",\n      },\n    }),\n  }\n\n  const innerTrackStyle: React.CSSProperties = {\n    ...trackStyle,\n    ...orient({\n      orientation,\n      vertical: isReversed\n        ? { height: `${100 - trackPercent}%`, top: 0 }\n        : { height: `${trackPercent}%`, bottom: 0 },\n      horizontal: isReversed\n        ? { width: `${100 - trackPercent}%`, right: 0 }\n        : { width: `${trackPercent}%`, left: 0 },\n    }),\n  }\n\n  useUpdateEffect(() => {\n    if (thumbRef.current) {\n      focus(thumbRef.current)\n    }\n  }, [value])\n\n  useUpdateEffect(() => {\n    const shouldUpdate =\n      !isDragging && eventSource !== \"keyboard\" && prev.current !== value\n\n    if (shouldUpdate) {\n      onChangeEnd?.(value)\n    }\n\n    if (eventSource === \"keyboard\") {\n      onChangeEnd?.(value)\n    }\n  }, [isDragging, onChangeEnd, value, eventSource])\n\n  const onMouseDown = useEventCallback((event: MouseEvent) => {\n    /**\n     * Prevent update if it's right-click\n     */\n    if (isRightClick(event)) return\n\n    if (!isInteractive || !rootRef.current) return\n\n    setDragging.on()\n    prev.current = value\n    onChangeStart?.(value)\n\n    const doc = getOwnerDocument(rootRef.current)\n\n    const run = (event: MouseEvent) => {\n      const nextValue = getValueFromPointer(event)\n      if (nextValue != null && nextValue !== value) {\n        setEventSource(\"mouse\")\n        setValue(nextValue)\n      }\n    }\n\n    run(event)\n\n    doc.addEventListener(\"mousemove\", run)\n\n    const clean = () => {\n      doc.removeEventListener(\"mousemove\", run)\n      setDragging.off()\n    }\n\n    doc.addEventListener(\"mouseup\", clean)\n    cleanUpRef.current.mouseup = () => {\n      doc.removeEventListener(\"mouseup\", clean)\n    }\n  })\n\n  const onTouchStart = useEventCallback((event: TouchEvent) => {\n    if (!isInteractive || !rootRef.current) return\n\n    // Prevent scrolling for touch events\n    event.preventDefault()\n\n    setDragging.on()\n    prev.current = value\n    onChangeStart?.(value)\n\n    const doc = getOwnerDocument(rootRef.current)\n\n    const run = (event: TouchEvent) => {\n      const nextValue = getValueFromPointer(event)\n\n      if (nextValue != null && nextValue !== value) {\n        setEventSource(\"touch\")\n        setValue(nextValue)\n      }\n    }\n\n    run(event)\n\n    doc.addEventListener(\"touchmove\", run)\n\n    const clean = () => {\n      doc.removeEventListener(\"touchmove\", run)\n      setDragging.off()\n    }\n\n    doc.addEventListener(\"touchend\", clean)\n    doc.addEventListener(\"touchcancel\", clean)\n\n    cleanUpRef.current.touchend = () => {\n      doc.removeEventListener(\"touchend\", clean)\n    }\n\n    cleanUpRef.current.touchcancel = () => {\n      doc.removeEventListener(\"touchcancel\", clean)\n    }\n  })\n\n  /**\n   * Remove all event handlers\n   */\n  const detach = () => {\n    Object.values(cleanUpRef.current).forEach((cleanup) => {\n      cleanup?.()\n    })\n    cleanUpRef.current = {}\n  }\n\n  /**\n   * Ensure we clean up listeners when slider unmounts\n   */\n  useEffect(() => {\n    return () => detach()\n  }, [])\n\n  useUpdateEffect(() => {\n    if (!isDragging) {\n      detach()\n    }\n  }, [isDragging])\n\n  cleanUpRef.current.mousedown = useEventListener(\n    \"mousedown\",\n    onMouseDown,\n    rootRef.current,\n  )\n\n  cleanUpRef.current.touchstart = useEventListener(\n    \"touchstart\",\n    onTouchStart,\n    rootRef.current,\n  )\n\n  return {\n    state: {\n      value,\n      isFocused,\n      isDragging: isDragging,\n    },\n    actions,\n    getRootProps: (props: Dict = {}, ref: Ref<any> = null) => ({\n      ...props,\n      ...htmlProps,\n      ref: mergeRefs(ref, rootRef),\n      tabIndex: -1,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"data-focused\": dataAttr(isFocused),\n      style: {\n        ...props.style,\n        ...rootStyle,\n      },\n    }),\n    getTrackProps: (props: Dict = {}, ref: Ref<any> = null) => ({\n      ...props,\n      ref: mergeRefs(ref, trackRef),\n      id: trackId,\n      \"data-disabled\": dataAttr(isDisabled),\n      style: {\n        ...props.style,\n        ...trackStyle,\n      },\n    }),\n    getInnerTrackProps: (props: Dict = {}, ref: Ref<any> = null) => ({\n      ...props,\n      ref,\n      style: {\n        ...props.style,\n        ...innerTrackStyle,\n      },\n    }),\n    getThumbProps: (props: Dict = {}, ref: Ref<any> = null) => ({\n      ...props,\n      ref: mergeRefs(ref, thumbRef),\n      role: \"slider\",\n      tabIndex: 0,\n      id: thumbId,\n      \"data-active\": dataAttr(isDragging),\n      \"aria-valuetext\": valueText,\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": value,\n      \"aria-orientation\": orientation,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"aria-readonly\": ariaAttr(isReadOnly),\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabel ? undefined : ariaLabelledBy,\n      style: {\n        ...props.style,\n        ...thumbStyle,\n      },\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props.onFocus, setFocused.on),\n      onBlur: callAllHandlers(props.onBlur, setFocused.off),\n    }),\n    getMarkerProps: (props: Dict = {}, ref: Ref<any> = null) => {\n      const isInRange = !(props.value < min || props.value > max)\n      const isHighlighted = value >= props.value\n      const markerPercent = valueToPercent(props.value, min, max)\n\n      const markerStyle: React.CSSProperties = {\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        ...orient({\n          orientation,\n          vertical: {\n            bottom: isReversed\n              ? `${100 - markerPercent}%`\n              : `${markerPercent}%`,\n          },\n          horizontal: {\n            left: isReversed ? `${100 - markerPercent}%` : `${markerPercent}%`,\n          },\n        }),\n      }\n\n      return {\n        ...props,\n        ref,\n        role: \"presentation\",\n        \"aria-hidden\": true,\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(!isInRange),\n        \"data-highlighted\": dataAttr(isHighlighted),\n        style: {\n          ...props.style,\n          ...markerStyle,\n        },\n      }\n    },\n    getInputProps: (props: Dict = {}, ref: Ref<any>) => ({\n      ...props,\n      ref,\n      type: \"hidden\",\n      value,\n      name,\n    }),\n  }\n}\n\nexport type UseSliderReturn = ReturnType<typeof useSlider>\n\nfunction orient(options: {\n  orientation: UseSliderProps[\"orientation\"]\n  vertical: CSSProperties\n  horizontal: CSSProperties\n}) {\n  const { orientation, vertical, horizontal } = options\n  return orientation === \"vertical\" ? vertical : horizontal\n}\n\n/**\n * The browser <input type=\"range\" /> calculates\n * the default value of a slider by using mid-point\n * between the min and the max.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range\n */\nfunction getDefaultValue(min: number, max: number) {\n  return max < min ? min : min + (max - min) / 2\n}\n"],"file":"use-slider.js"}