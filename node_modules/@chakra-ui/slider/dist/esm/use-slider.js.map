{"version":3,"sources":["../../src/use-slider.ts"],"names":["useBoolean","useControllableState","useDimensions","useEventCallback","useEventListener","useIds","useUpdateEffect","ariaAttr","callAllHandlers","clampValue","createOnKeyDown","dataAttr","focus","getBox","getOwnerDocument","mergeRefs","percentToValue","roundValueToStep","valueToPercent","isRightClick","useState","useRef","useCallback","useMemo","useEffect","useSlider","props","min","max","onChange","value","valueProp","defaultValue","isReversed","orientation","id","idProp","isDisabled","isReadOnly","onChangeStart","onChangeEnd","step","getAriaValueText","ariaValueText","ariaLabel","ariaLabelledBy","name","htmlProps","isDragging","setDragging","isFocused","setFocused","eventSource","setEventSource","isInteractive","computedValue","setValue","getDefaultValue","shouldUpdate","prev","next","cleanUpRef","reversedValue","trackValue","trackPercent","isVertical","trackRef","thumbRef","rootRef","thumbId","trackId","getValueFromPointer","event","current","trackRect","borderBox","clientX","clientY","touches","diff","bottom","left","length","height","width","percent","nextValue","parseFloat","tenSteps","oneStep","constrain","actions","stepUp","stepDown","reset","stepTo","onKeyDown","stopPropagation","onKey","keyMap","ArrowRight","ArrowUp","ArrowLeft","ArrowDown","PageUp","PageDown","Home","End","valueText","thumbBoxModel","thumbRect","thumbStyle","position","userSelect","touchAction","orient","vertical","horizontal","rootStyle","WebkitTapHighlightColor","outline","paddingLeft","paddingRight","paddingTop","paddingBottom","trackStyle","transform","top","innerTrackStyle","right","onMouseDown","on","doc","run","addEventListener","clean","removeEventListener","off","mouseup","onTouchStart","preventDefault","touchend","touchcancel","detach","Object","values","forEach","cleanup","mousedown","touchstart","state","getRootProps","ref","tabIndex","style","getTrackProps","getInnerTrackProps","getThumbProps","role","undefined","onFocus","onBlur","getMarkerProps","isInRange","isHighlighted","markerPercent","markerStyle","pointerEvents","getInputProps","type","options"],"mappings":"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","sourcesContent":["import {\n  useBoolean,\n  useControllableState,\n  useDimensions,\n  useEventCallback,\n  useEventListener,\n  useIds,\n  useUpdateEffect,\n} from \"@chakra-ui/hooks\"\nimport {\n  ariaAttr,\n  callAllHandlers,\n  clampValue,\n  createOnKeyDown,\n  dataAttr,\n  Dict,\n  focus,\n  getBox,\n  getOwnerDocument,\n  mergeRefs,\n  percentToValue,\n  roundValueToStep,\n  valueToPercent,\n  isRightClick,\n} from \"@chakra-ui/utils\"\nimport {\n  Ref,\n  useState,\n  useRef,\n  useCallback,\n  useMemo,\n  useEffect,\n  CSSProperties,\n} from \"react\"\n\nexport interface UseSliderProps {\n  /**\n   * The minimum allowed value of the slider. Cannot be greater than max.\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum allowed value of the slider. Cannot be less than min.\n   * @default 100\n   */\n  max?: number\n  /**\n   * The step in which increments/decrements have to be made\n   * @default 1\n   */\n  step?: number\n  /**\n   * The value of the slider in controlled mode\n   */\n  value?: number\n  /**\n   * The initial value of the slider in uncontrolled mode\n   */\n  defaultValue?: number\n  /**\n   * orientation of the slider\n   * @default \"horizontal\"\n   */\n  orientation?: \"horizontal\" | \"vertical\"\n  /**\n   * If `true`, the value will be incremented or decremented in reverse.\n   */\n  isReversed?: boolean\n  /**\n   * function gets called whenever the user starts dragging the slider handle\n   */\n  onChangeStart?(value: number): void\n  /**\n   * function gets called whenever the user stops dragging the slider handle.\n   */\n  onChangeEnd?(value: number): void\n  /**\n   * function gets called whenever the slider handle is being dragged or clicked\n   */\n  onChange?(value: number): void\n  /**\n   * The base `id` to use for the slider and it's components\n   */\n  id?: string\n  /**\n   * The name attribute of the hidden `input` field.\n   * This is particularly useful in forms\n   */\n  name?: string\n  /**\n   * If `true`, the slider will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the slider will be in `read-only` state\n   */\n  isReadOnly?: boolean\n  /**\n   * Function that returns the `aria-valuetext` for screen readers.\n   * It's mostly used to generate a more human-readable\n   * representation of the value for assistive technologies\n   */\n  getAriaValueText?(value: number): string\n  /**\n   * The static string to use used for `aria-valuetext`\n   */\n  \"aria-valuetext\"?: string\n  /**\n   * The static string to use used for `aria-label`\n   * if no visible label is used.\n   */\n  \"aria-label\"?: string\n  /**\n   * The static string `aria-labelledby` that points to the\n   * ID of the element that serves as label for the slider\n   */\n  \"aria-labelledby\"?: string\n}\n\ntype EventSource = \"mouse\" | \"touch\" | \"keyboard\"\n\n/**\n * React hook that implements an accessible range slider.\n *\n * It's an alternative to `<input type=\"range\" />`, and returns\n * prop getters for the component parts\n *\n * @see Docs     https://chakra-ui.com/components/slider\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.1/#slider\n */\nexport function useSlider(props: UseSliderProps) {\n  const {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed,\n    orientation,\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart,\n    onChangeEnd,\n    step = 1,\n    getAriaValueText,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    ...htmlProps\n  } = props\n\n  const [isDragging, setDragging] = useBoolean()\n  const [isFocused, setFocused] = useBoolean()\n  const [eventSource, setEventSource] = useState<EventSource>()\n\n  const isInteractive = !(isDisabled || isReadOnly)\n\n  /**\n   * Enable the slider handle controlled and uncontrolled scenarios\n   */\n  const [computedValue, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue ?? getDefaultValue(min, max),\n    onChange,\n    shouldUpdate: (prev, next) => prev !== next,\n  })\n\n  /**\n   * Slider uses DOM APIs to add and remove event listeners.\n   * Noticed some issues with React's synthetic events.\n   *\n   * We use `ref` to save the functions used to remove\n   * the event listeners.\n   *\n   * Ideally, we'll love to use pointer-events API but it's\n   * not fully supported in all browsers.\n   */\n  const cleanUpRef = useRef<Dict<Function>>({})\n\n  /**\n   * Constrain the value because it can't be less than min\n   * or greater than max\n   */\n  const value = clampValue(computedValue, min, max)\n  const prev = useRef<number>()\n\n  const reversedValue = max - value + min\n  const trackValue = isReversed ? reversedValue : value\n  const trackPercent = valueToPercent(trackValue, min, max)\n\n  const isVertical = orientation === \"vertical\"\n\n  /**\n   * Let's keep a reference to the slider track and thumb\n   */\n  const trackRef = useRef<any>(null)\n  const thumbRef = useRef<any>(null)\n  const rootRef = useRef<any>(null)\n\n  /**\n   * Generate unique ids for component parts\n   */\n  const [thumbId, trackId] = useIds(idProp, `slider-thumb`, `slider-track`)\n\n  /**\n   * Get relative value of slider from the event by tracking\n   * how far you clicked within the track to determine the value\n   */\n  const getValueFromPointer = useCallback(\n    (event) => {\n      if (!trackRef.current) return\n\n      const trackRect = getBox(trackRef.current).borderBox\n      const { clientX, clientY } = event.touches?.[0] ?? event\n\n      const diff = isVertical\n        ? trackRect.bottom - clientY\n        : clientX - trackRect.left\n\n      const length = isVertical ? trackRect.height : trackRect.width\n      let percent = diff / length\n\n      if (isReversed) {\n        percent = 1 - percent\n      }\n\n      let nextValue = percentToValue(percent, min, max)\n\n      if (step) {\n        nextValue = parseFloat(roundValueToStep(nextValue, min, step))\n      }\n\n      nextValue = clampValue(nextValue, min, max)\n\n      return nextValue\n    },\n    [isVertical, isReversed, max, min, step],\n  )\n\n  const tenSteps = (max - min) / 10\n  const oneStep = step || (max - min) / 100\n\n  const constrain = useCallback(\n    (value: number) => {\n      // bail out if slider isn't interactive\n      if (!isInteractive) return\n      prev.current = value\n      value = parseFloat(roundValueToStep(value, min, oneStep))\n      value = clampValue(value, min, max)\n      setValue(value)\n    },\n    [oneStep, max, min, setValue, isInteractive],\n  )\n\n  const actions = useMemo(\n    () => ({\n      stepUp: (step = oneStep) => {\n        const next = isReversed ? value - step : value + step\n        constrain(next)\n      },\n      stepDown: (step = oneStep) => {\n        const next = isReversed ? value + step : value - step\n        constrain(next)\n      },\n      reset: () => constrain(defaultValue || 0),\n      stepTo: (value: number) => constrain(value),\n    }),\n    [constrain, isReversed, value, oneStep, defaultValue],\n  )\n\n  /**\n   * Keyboard interaction to ensure users can operate\n   * the slider using only their keyboard.\n   */\n  const onKeyDown = createOnKeyDown({\n    stopPropagation: true,\n    onKey: () => setEventSource(\"keyboard\"),\n    keyMap: {\n      ArrowRight: () => actions.stepUp(),\n      ArrowUp: () => actions.stepUp(),\n      ArrowLeft: () => actions.stepDown(),\n      ArrowDown: () => actions.stepDown(),\n      PageUp: () => actions.stepUp(tenSteps),\n      PageDown: () => actions.stepDown(tenSteps),\n      Home: () => constrain(min),\n      End: () => constrain(max),\n    },\n  })\n\n  /**\n   * ARIA (Optional): To define a human readable representation of the value,\n   * we allow users pass aria-valuetext.\n   */\n  const valueText = getAriaValueText?.(value) ?? ariaValueText\n\n  /**\n   * Measure the dimensions of the thumb so\n   * we can center it within the track properly\n   */\n  const thumbBoxModel = useDimensions(thumbRef)\n  const thumbRect = thumbBoxModel?.borderBox ?? {\n    width: 0,\n    height: 0,\n  }\n\n  /**\n   * Compute styles for all component parts.\n   */\n  const thumbStyle: React.CSSProperties = {\n    position: \"absolute\",\n    userSelect: \"none\",\n    touchAction: \"none\",\n    ...orient({\n      orientation,\n      vertical: {\n        bottom: `calc(${trackPercent}% - ${thumbRect.height / 2}px)`,\n      },\n      horizontal: {\n        left: `calc(${trackPercent}% - ${thumbRect.width / 2}px)`,\n      },\n    }),\n  }\n\n  const rootStyle: React.CSSProperties = {\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0,\n    ...orient({\n      orientation,\n      vertical: {\n        paddingLeft: thumbRect.width / 2,\n        paddingRight: thumbRect.width / 2,\n      },\n      horizontal: {\n        paddingTop: thumbRect.height / 2,\n        paddingBottom: thumbRect.height / 2,\n      },\n    }),\n  }\n\n  const trackStyle: React.CSSProperties = {\n    position: \"absolute\",\n    ...orient({\n      orientation,\n      vertical: {\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        height: \"100%\",\n      },\n      horizontal: {\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: \"100%\",\n      },\n    }),\n  }\n\n  const innerTrackStyle: React.CSSProperties = {\n    ...trackStyle,\n    ...orient({\n      orientation,\n      vertical: isReversed\n        ? { height: `${100 - trackPercent}%`, top: 0 }\n        : { height: `${trackPercent}%`, bottom: 0 },\n      horizontal: isReversed\n        ? { width: `${100 - trackPercent}%`, right: 0 }\n        : { width: `${trackPercent}%`, left: 0 },\n    }),\n  }\n\n  useUpdateEffect(() => {\n    if (thumbRef.current) {\n      focus(thumbRef.current)\n    }\n  }, [value])\n\n  useUpdateEffect(() => {\n    const shouldUpdate =\n      !isDragging && eventSource !== \"keyboard\" && prev.current !== value\n\n    if (shouldUpdate) {\n      onChangeEnd?.(value)\n    }\n\n    if (eventSource === \"keyboard\") {\n      onChangeEnd?.(value)\n    }\n  }, [isDragging, onChangeEnd, value, eventSource])\n\n  const onMouseDown = useEventCallback((event: MouseEvent) => {\n    /**\n     * Prevent update if it's right-click\n     */\n    if (isRightClick(event)) return\n\n    if (!isInteractive || !rootRef.current) return\n\n    setDragging.on()\n    prev.current = value\n    onChangeStart?.(value)\n\n    const doc = getOwnerDocument(rootRef.current)\n\n    const run = (event: MouseEvent) => {\n      const nextValue = getValueFromPointer(event)\n      if (nextValue != null && nextValue !== value) {\n        setEventSource(\"mouse\")\n        setValue(nextValue)\n      }\n    }\n\n    run(event)\n\n    doc.addEventListener(\"mousemove\", run)\n\n    const clean = () => {\n      doc.removeEventListener(\"mousemove\", run)\n      setDragging.off()\n    }\n\n    doc.addEventListener(\"mouseup\", clean)\n    cleanUpRef.current.mouseup = () => {\n      doc.removeEventListener(\"mouseup\", clean)\n    }\n  })\n\n  const onTouchStart = useEventCallback((event: TouchEvent) => {\n    if (!isInteractive || !rootRef.current) return\n\n    // Prevent scrolling for touch events\n    event.preventDefault()\n\n    setDragging.on()\n    prev.current = value\n    onChangeStart?.(value)\n\n    const doc = getOwnerDocument(rootRef.current)\n\n    const run = (event: TouchEvent) => {\n      const nextValue = getValueFromPointer(event)\n\n      if (nextValue != null && nextValue !== value) {\n        setEventSource(\"touch\")\n        setValue(nextValue)\n      }\n    }\n\n    run(event)\n\n    doc.addEventListener(\"touchmove\", run)\n\n    const clean = () => {\n      doc.removeEventListener(\"touchmove\", run)\n      setDragging.off()\n    }\n\n    doc.addEventListener(\"touchend\", clean)\n    doc.addEventListener(\"touchcancel\", clean)\n\n    cleanUpRef.current.touchend = () => {\n      doc.removeEventListener(\"touchend\", clean)\n    }\n\n    cleanUpRef.current.touchcancel = () => {\n      doc.removeEventListener(\"touchcancel\", clean)\n    }\n  })\n\n  /**\n   * Remove all event handlers\n   */\n  const detach = () => {\n    Object.values(cleanUpRef.current).forEach((cleanup) => {\n      cleanup?.()\n    })\n    cleanUpRef.current = {}\n  }\n\n  /**\n   * Ensure we clean up listeners when slider unmounts\n   */\n  useEffect(() => {\n    return () => detach()\n  }, [])\n\n  useUpdateEffect(() => {\n    if (!isDragging) {\n      detach()\n    }\n  }, [isDragging])\n\n  cleanUpRef.current.mousedown = useEventListener(\n    \"mousedown\",\n    onMouseDown,\n    rootRef.current,\n  )\n\n  cleanUpRef.current.touchstart = useEventListener(\n    \"touchstart\",\n    onTouchStart,\n    rootRef.current,\n  )\n\n  return {\n    state: {\n      value,\n      isFocused,\n      isDragging: isDragging,\n    },\n    actions,\n    getRootProps: (props: Dict = {}, ref: Ref<any> = null) => ({\n      ...props,\n      ...htmlProps,\n      ref: mergeRefs(ref, rootRef),\n      tabIndex: -1,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"data-focused\": dataAttr(isFocused),\n      style: {\n        ...props.style,\n        ...rootStyle,\n      },\n    }),\n    getTrackProps: (props: Dict = {}, ref: Ref<any> = null) => ({\n      ...props,\n      ref: mergeRefs(ref, trackRef),\n      id: trackId,\n      \"data-disabled\": dataAttr(isDisabled),\n      style: {\n        ...props.style,\n        ...trackStyle,\n      },\n    }),\n    getInnerTrackProps: (props: Dict = {}, ref: Ref<any> = null) => ({\n      ...props,\n      ref,\n      style: {\n        ...props.style,\n        ...innerTrackStyle,\n      },\n    }),\n    getThumbProps: (props: Dict = {}, ref: Ref<any> = null) => ({\n      ...props,\n      ref: mergeRefs(ref, thumbRef),\n      role: \"slider\",\n      tabIndex: 0,\n      id: thumbId,\n      \"data-active\": dataAttr(isDragging),\n      \"aria-valuetext\": valueText,\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": value,\n      \"aria-orientation\": orientation,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"aria-readonly\": ariaAttr(isReadOnly),\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabel ? undefined : ariaLabelledBy,\n      style: {\n        ...props.style,\n        ...thumbStyle,\n      },\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props.onFocus, setFocused.on),\n      onBlur: callAllHandlers(props.onBlur, setFocused.off),\n    }),\n    getMarkerProps: (props: Dict = {}, ref: Ref<any> = null) => {\n      const isInRange = !(props.value < min || props.value > max)\n      const isHighlighted = value >= props.value\n      const markerPercent = valueToPercent(props.value, min, max)\n\n      const markerStyle: React.CSSProperties = {\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        ...orient({\n          orientation,\n          vertical: {\n            bottom: isReversed\n              ? `${100 - markerPercent}%`\n              : `${markerPercent}%`,\n          },\n          horizontal: {\n            left: isReversed ? `${100 - markerPercent}%` : `${markerPercent}%`,\n          },\n        }),\n      }\n\n      return {\n        ...props,\n        ref,\n        role: \"presentation\",\n        \"aria-hidden\": true,\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(!isInRange),\n        \"data-highlighted\": dataAttr(isHighlighted),\n        style: {\n          ...props.style,\n          ...markerStyle,\n        },\n      }\n    },\n    getInputProps: (props: Dict = {}, ref: Ref<any>) => ({\n      ...props,\n      ref,\n      type: \"hidden\",\n      value,\n      name,\n    }),\n  }\n}\n\nexport type UseSliderReturn = ReturnType<typeof useSlider>\n\nfunction orient(options: {\n  orientation: UseSliderProps[\"orientation\"]\n  vertical: CSSProperties\n  horizontal: CSSProperties\n}) {\n  const { orientation, vertical, horizontal } = options\n  return orientation === \"vertical\" ? vertical : horizontal\n}\n\n/**\n * The browser <input type=\"range\" /> calculates\n * the default value of a slider by using mid-point\n * between the min and the max.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range\n */\nfunction getDefaultValue(min: number, max: number) {\n  return max < min ? min : min + (max - min) / 2\n}\n"],"file":"use-slider.js"}