{"version":3,"sources":["../../../src/style-config/multiple.ts"],"names":["useMultiStyleConfig","themeKey","props","styleConfigProp","styleConfig","rest","theme","colorMode","themeStyleConfig","propsWithDefault","defaultProps","allProps","partsStyleRef","React","useRef","useMemo","baseStyles","baseStyle","parts","Object","keys","variants","variant","sizes","size","partsStyle","part","isStyleEqual","current"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;AAYO,SAASA,mBAAT,CAA6BC,QAA7B,EAA+CC,KAA/C,EAA4D;AAAA;;AAAA,MAC5CC,eAD4C,GACfD,KADe,CACzDE,WADyD;AAAA,MACxBC,IADwB,iCACfH,KADe;;AAAA,mBAGpC,uBAHoC;AAAA,MAGzDI,KAHyD,cAGzDA,KAHyD;AAAA,MAGlDC,SAHkD,cAGlDA,SAHkD;;AAKjE,MAAMC,gBAAgB,GAAG,gBAAIF,KAAJ,kBAAyBL,QAAzB,CAAzB;AACA,MAAMG,WAAW,GAAID,eAAe,IAAIK,gBAAxC;AAEA,MAAMC,gBAAgB,GAAG,kBACvB,EADuB,2BAEvBL,WAFuB,oBAEvBA,WAAW,CAAEM,YAFU,oCAEM,EAFN,EAGvB,4BAAgBL,IAAhB,CAHuB,CAAzB;;AAMA,MAAMM,QAAQ,gBACTF,gBADS;AAEZH,IAAAA,KAAK,EAALA,KAFY;AAGZC,IAAAA,SAAS,EAATA;AAHY,IAAd;;AAMA,MAAMK,aAAa,GAAGC,KAAK,CAACC,MAAN,CAAsC,EAAtC,CAAtB;AAEA,SAAOD,KAAK,CAACE,OAAN,CAAc,YAAM;AACzB,QAAIX,WAAJ,EAAiB;AAAA;;AACf,UAAMY,UAAU,GAAG,6CAAQZ,WAAW,CAACa,SAApB,oCAAiC,EAAjC,EAAqCN,QAArC,CAAnB;AACA,UAAMO,KAAK,GACTC,MAAM,CAACC,IAAP,uBAAYhB,WAAW,CAACc,KAAxB,iCAAiC,EAAjC,KAAwCC,MAAM,CAACC,IAAP,CAAYJ,UAAZ,CAD1C;AAGA,UAAMK,QAAQ,GAAG,uEACfjB,WAAW,CAACiB,QADG,qBACf,uBAAuBV,QAAQ,CAACW,OAAhC,CADe,oCAC6B,EAD7B,EAEfX,QAFe,CAAjB;AAKA,UAAMY,KAAK,GAAG,mEAAQnB,WAAW,CAACmB,KAApB,qBAAQ,mBAAoBZ,QAAQ,CAACa,IAA7B,CAAR,oCAA8C,EAA9C,EAAkDb,QAAlD,CAAd;AAEA,UAAMc,UAAU,GAAG,EAAnB;;AAEA,2DAAmBP,KAAnB,wCAA0B;AAAA;;AAAA,YAAfQ,IAAe;AACxBD,QAAAA,UAAU,CAACC,IAAD,CAAV,GAAmB,kBACjB,EADiB,sBAEjBV,UAFiB,oBAEjBA,UAAU,CAAGU,IAAH,CAFO,+BAEK,EAFL,iBAGjBH,KAHiB,oBAGjBA,KAAK,CAAGG,IAAH,CAHY,0BAGA,EAHA,oBAIjBL,QAJiB,oBAIjBA,QAAQ,CAAGK,IAAH,CAJS,6BAIG,EAJH,CAAnB;AAMD;;AAED,UAAMC,YAAY,GAAG,kCAAQf,aAAa,CAACgB,OAAtB,EAA+BH,UAA/B,CAArB;;AAEA,UAAI,CAACE,YAAL,EAAmB;AACjBf,QAAAA,aAAa,CAACgB,OAAd,GAAwBH,UAAxB;AACD;AACF;;AAED,WAAOb,aAAa,CAACgB,OAArB;AACD,GAhCM,EAgCJ,CAACjB,QAAD,EAAWP,WAAX,CAhCI,CAAP;AAiCD;;eAEcJ,mB","sourcesContent":["import * as React from \"react\"\nimport { Dict, get, runIfFn, merge, filterUndefined } from \"@chakra-ui/utils\"\nimport { useChakra } from \"../hooks\"\nimport { SystemStyleObject } from \"@chakra-ui/styled-system\"\nimport isEqual from \"react-fast-compare\"\n\ninterface MultiStyleConfig {\n  parts: Dict<string>\n  defaultProps?: Dict\n  baseStyle?: Dict\n  variants?: Dict\n  sizes?: Dict\n}\n\ntype StyleConfig = MultiStyleConfig | undefined\n\nexport function useMultiStyleConfig(themeKey: string, props: Dict) {\n  const { styleConfig: styleConfigProp, ...rest } = props\n\n  const { theme, colorMode } = useChakra()\n\n  const themeStyleConfig = get(theme, `components.${themeKey}`)\n  const styleConfig = (styleConfigProp || themeStyleConfig) as StyleConfig\n\n  const propsWithDefault = merge(\n    {},\n    styleConfig?.defaultProps ?? {},\n    filterUndefined(rest),\n  )\n\n  const allProps = {\n    ...propsWithDefault,\n    theme,\n    colorMode,\n  } as Dict\n\n  const partsStyleRef = React.useRef<Dict<SystemStyleObject>>({})\n\n  return React.useMemo(() => {\n    if (styleConfig) {\n      const baseStyles = runIfFn(styleConfig.baseStyle ?? {}, allProps)\n      const parts =\n        Object.keys(styleConfig.parts ?? {}) || Object.keys(baseStyles)\n\n      const variants = runIfFn(\n        styleConfig.variants?.[allProps.variant] ?? {},\n        allProps,\n      )\n\n      const sizes = runIfFn(styleConfig.sizes?.[allProps.size] ?? {}, allProps)\n\n      const partsStyle = {} as Dict<SystemStyleObject>\n\n      for (const part of parts) {\n        partsStyle[part] = merge(\n          {},\n          baseStyles?.[part] ?? {},\n          sizes?.[part] ?? {},\n          variants?.[part] ?? {},\n        )\n      }\n\n      const isStyleEqual = isEqual(partsStyleRef.current, partsStyle)\n\n      if (!isStyleEqual) {\n        partsStyleRef.current = partsStyle\n      }\n    }\n\n    return partsStyleRef.current\n  }, [allProps, styleConfig])\n}\n\nexport default useMultiStyleConfig\n"],"file":"multiple.js"}