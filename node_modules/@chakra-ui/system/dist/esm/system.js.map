{"version":3,"sources":["../../src/system.ts"],"names":["systemProps","css","createStyled","pseudoProps","truncateProp","extraProps","domElements","cast","shouldForwardProp","sxProp","props","sx","theme","cssProp","__css","result","key","exists","base","baseStyle","styled","component","options","styledOptions","chakra","forEach","tag"],"mappings":";;;;AAAA,SAASA,WAAT,EAAsBC,GAAtB,QAAiC,0BAAjC;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AAEA,SACEC,WADF,EAEEC,YAFF,EAGEC,UAHF,EAIEC,WAJF,EAMEC,IANF,QAOO,gBAPP;AAQA,SAASC,iBAAT,QAAkC,uBAAlC;AASA,IAAMC,MAAM,GAAGF,IAAI,CAAEG,KAAD,IAAgBT,GAAG,CAACS,KAAK,CAACC,EAAP,CAAH,CAAcD,KAAK,CAACE,KAApB,CAAjB,CAAnB;;AACA,IAAMC,OAAO,GAAIH,KAAD,IAAgBA,KAAK,CAACT,GAAtC;;AAEA,IAAMa,KAAK,GAAGP,IAAI,CAAEG,KAAD,IAAiB;AAClC,MAAMK,MAAM,GAAG,EAAf;;AACA,OAAK,IAAMC,GAAX,IAAkBN,KAAK,CAACI,KAAxB,EAA+B;AAC7B,QAAMG,MAAM,IAAGD,GAAG,IAAIN,KAAV,CAAZ;;AACA,QAAI,CAACO,MAAD,IAAWP,KAAK,CAACM,GAAD,CAAL,IAAc,IAA7B,EAAmC;AACjCD,MAAAA,MAAM,CAACC,GAAD,CAAN,GAAcN,KAAK,CAACI,KAAN,CAAYE,GAAZ,CAAd;AACD;AACF;;AACD,SAAOf,GAAG,CAACc,MAAD,CAAH,CAAYL,KAAK,CAACE,KAAlB,CAAP;AACD,CATiB,CAAlB;;AAWA,IAAMM,IAAI,GAAGX,IAAI,CAAEY,SAAD,IAAqBT,KAAD,IACpCT,GAAG,CAACkB,SAAD,CAAH,CAAeT,KAAK,CAACE,KAArB,CADe,CAAjB;AAIA,OAAO,SAASQ,MAAT,CAAsCC,SAAtC,EAAoDC,OAApD,EAAuE;AAC5E,aAAwCA,OAAO,IAAI,EAAnD;AAAA,MAAM;AAAEH,IAAAA;AAAF,GAAN;AAAA,MAAsBI,aAAtB;;AACA,SAAOrB,YAAY,CAACmB,SAAD,eACdE,aADc;AAEjBf,IAAAA;AAFiB,KAAZ,CAILM,KAJK,EAKLI,IAAI,CAACC,SAAD,CALC,EAMLZ,IAAI,CAACF,UAAD,CANC,EAOLE,IAAI,CAACH,YAAD,CAPC,EAQLG,IAAI,CAACP,WAAD,CARC,EASLO,IAAI,CAACJ,WAAD,CATC,EAULM,MAVK,EAWLF,IAAI,CAACM,OAAD,CAXC,CAAP;AAaD;AAUD,OAAO,IAAMW,MAAM,GAAIJ,MAAhB;AAGPd,WAAW,CAACmB,OAAZ,CAAqBC,GAAD,IAAS;AAC3B;AACAF,EAAAA,MAAM,CAACE,GAAD,CAAN,GAAcF,MAAM,CAACE,GAAD,CAApB;AACD,CAHD","sourcesContent":["import { systemProps, css } from \"@chakra-ui/styled-system\"\nimport createStyled from \"@emotion/styled\"\nimport { As, ChakraComponent } from \"./system.types\"\nimport {\n  pseudoProps,\n  truncateProp,\n  extraProps,\n  domElements,\n  DOMElements,\n  cast,\n} from \"./system.utils\"\nimport { shouldForwardProp } from \"./should-forward-prop\"\nimport { Dict } from \"@chakra-ui/utils\"\n\ninterface Options {\n  shouldForwardProp?(prop: string): boolean\n  label?: string\n  baseStyle?: any\n}\n\nconst sxProp = cast((props: any) => css(props.sx)(props.theme))\nconst cssProp = (props: any) => props.css\n\nconst __css = cast((props: Dict) => {\n  const result = {} as Dict\n  for (const key in props.__css) {\n    const exists = key in props\n    if (!exists || props[key] == null) {\n      result[key] = props.__css[key]\n    }\n  }\n  return css(result)(props.theme)\n})\n\nconst base = cast((baseStyle: any) => (props: any) =>\n  css(baseStyle)(props.theme),\n)\n\nexport function styled<T extends As, P = {}>(component: T, options?: Options) {\n  const { baseStyle, ...styledOptions } = options || {}\n  return createStyled(component as any, {\n    ...styledOptions,\n    shouldForwardProp,\n  })(\n    __css,\n    base(baseStyle),\n    cast(extraProps),\n    cast(truncateProp),\n    cast(systemProps),\n    cast(pseudoProps),\n    sxProp,\n    cast(cssProp),\n  ) as ChakraComponent<T, P>\n}\n\ntype ChakraJSXElements = {\n  [Tag in DOMElements]: ChakraComponent<Tag, {}>\n}\n\ntype CreateChakraComponent = {\n  <T extends As, P = {}>(component: T, options?: Options): ChakraComponent<T, P>\n}\n\nexport const chakra = (styled as unknown) as CreateChakraComponent &\n  ChakraJSXElements\n\ndomElements.forEach((tag) => {\n  //@ts-ignore\n  chakra[tag] = chakra(tag)\n})\n"],"file":"system.js"}