{"version":3,"sources":["../../src/system.utils.ts"],"names":["css","pseudoSelectors","get","isNumber","isString","__DEV__","merge","omit","domElements","cast","arg","omitThemingProps","props","pseudoProps","theme","result","prop","style","truncateProp","isTruncated","noOfLines","overflow","textOverflow","display","WebkitBoxOrient","WebkitLineClamp","whiteSpace","extraProps","layerStyle","textStyle","apply","styles","isTag","target","charAt","toLowerCase","getDisplayName","primitive","getComponentName","displayName","name"],"mappings":"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","sourcesContent":["import { css, pseudoSelectors } from \"@chakra-ui/styled-system\"\nimport {\n  get,\n  isNumber,\n  isString,\n  UnionStringArray,\n  __DEV__,\n  merge,\n  Dict,\n  omit,\n} from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { FunctionInterpolation } from \"@emotion/core\"\n\n/**\n * Carefully selected html elements for chakra components.\n * This is mostly for `chakra.<element>` syntax.\n */\nexport const domElements = [\n  \"a\",\n  \"article\",\n  \"aside\",\n  \"blockquote\",\n  \"button\",\n  \"caption\",\n  \"cite\",\n  \"circle\",\n  \"code\",\n  \"dd\",\n  \"div\",\n  \"dl\",\n  \"dt\",\n  \"fieldset\",\n  \"figcaption\",\n  \"figure\",\n  \"footer\",\n  \"form\",\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\",\n  \"header\",\n  \"hr\",\n  \"img\",\n  \"input\",\n  \"kbd\",\n  \"label\",\n  \"li\",\n  \"mark\",\n  \"nav\",\n  \"ol\",\n  \"p\",\n  \"path\",\n  \"pre\",\n  \"q\",\n  \"rect\",\n  \"s\",\n  \"svg\",\n  \"section\",\n  \"select\",\n  \"small\",\n  \"span\",\n  \"sub\",\n  \"sup\",\n  \"table\",\n  \"tbody\",\n  \"td\",\n  \"textarea\",\n  \"tfoot\",\n  \"th\",\n  \"thead\",\n  \"tr\",\n  \"ul\",\n] as const\n\nexport type DOMElements = UnionStringArray<typeof domElements>\n\nexport const cast = <P = { theme: object }>(arg: any) =>\n  arg as FunctionInterpolation<P>\n\nexport const omitThemingProps = (props: any) =>\n  omit(props, [\"styleConfig\", \"size\", \"variant\", \"colorScheme\"]) as any\n\nexport function pseudoProps({ theme, ...props }: any) {\n  let result = {}\n  for (const prop in props) {\n    if (prop in pseudoSelectors) {\n      const style = css({ [prop]: props[prop] })(theme)\n      result = { ...result, ...style }\n    }\n  }\n  return result\n}\n\nexport function truncateProp({ isTruncated, noOfLines }: any) {\n  if (isNumber(noOfLines)) {\n    return {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      display: \"-webkit-box\",\n      WebkitBoxOrient: \"vertical\",\n      WebkitLineClamp: noOfLines,\n    }\n  }\n\n  if (isTruncated) {\n    return {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n    }\n  }\n}\n\nexport const extraProps = (props: any) => {\n  const { layerStyle, textStyle, apply, theme } = props\n  const styles = merge(\n    {},\n    get(theme, `layerStyles.${layerStyle}`, {}),\n    get(theme, `textStyles.${textStyle}`, {}),\n  ) as Dict\n\n  return css({ ...styles, apply })(theme)\n}\n\nexport default function isTag(target: any) {\n  return (\n    isString(target) &&\n    (__DEV__ ? target.charAt(0) === target.charAt(0).toLowerCase() : true)\n  )\n}\n\nexport function getDisplayName(primitive: any) {\n  return isTag(primitive) ? `chakra.${primitive}` : getComponentName(primitive)\n}\n\nfunction getComponentName(primitive: React.ComponentType | string) {\n  return (\n    (__DEV__ ? isString(primitive) && primitive : false) ||\n    (!isString(primitive) && primitive.displayName) ||\n    (!isString(primitive) && primitive.name) ||\n    \"ChakraComponent\"\n  )\n}\n"],"file":"system.utils.js"}