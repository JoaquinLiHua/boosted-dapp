import { UnionStringArray } from "@chakra-ui/utils";
import { FunctionInterpolation } from "@emotion/core";
/**
 * Carefully selected html elements for chakra components.
 * This is mostly for `chakra.<element>` syntax.
 */
export declare const domElements: readonly ["a", "article", "aside", "blockquote", "button", "caption", "cite", "circle", "code", "dd", "div", "dl", "dt", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "header", "hr", "img", "input", "kbd", "label", "li", "mark", "nav", "ol", "p", "path", "pre", "q", "rect", "s", "svg", "section", "select", "small", "span", "sub", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "tr", "ul"];
export declare type DOMElements = UnionStringArray<typeof domElements>;
export declare const cast: <P = {
    theme: object;
}>(arg: any) => FunctionInterpolation<P>;
export declare const omitThemingProps: (props: any) => any;
export declare function pseudoProps({ theme, ...props }: any): {};
export declare function truncateProp({ isTruncated, noOfLines }: any): {
    overflow: string;
    textOverflow: string;
    display: string;
    WebkitBoxOrient: string;
    WebkitLineClamp: number;
    whiteSpace?: undefined;
} | {
    overflow: string;
    textOverflow: string;
    whiteSpace: string;
    display?: undefined;
    WebkitBoxOrient?: undefined;
    WebkitLineClamp?: undefined;
} | undefined;
export declare const extraProps: (props: any) => import("@chakra-ui/styled-system").CSSObject;
export default function isTag(target: any): boolean;
export declare function getDisplayName(primitive: any): string;
