{"version":3,"sources":["../../src/aspect-ratio.tsx"],"names":["cx","__DEV__","mapResponsive","React","Children","chakra","forwardRef","AspectRatio","props","ref","ratio","children","className","rest","child","only","_className","height","content","display","paddingBottom","r","overflow","position","top","right","bottom","left","justifyContent","alignItems","width","objectFit","displayName"],"mappings":";;;;AAAA,SAASA,EAAT,EAAaC,OAAb,EAAsBC,aAAtB,QAA2C,kBAA3C;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAA2CC,UAA3C,QAA6D,mBAA7D;;AAeA;;;;;;AAMA,OAAO,IAAMC,WAAW,gBAAGD,UAAU,CACnC,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAM;AAAEC,IAAAA,KAAK,GAAG,IAAI,CAAd;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA;AAA3B,MAAkDJ,KAAxD;AAAA,MAA+CK,IAA/C,iCAAwDL,KAAxD,sCAD+B,CAG/B;;;AACA,MAAMM,KAAK,GAAGV,QAAQ,CAACW,IAAT,CAAcJ,QAAd,CAAd;;AAEA,MAAMK,UAAU,GAAGhB,EAAE,CAAC,qBAAD,EAAwBY,SAAxB,CAArB;;AAEA,sBACE,oBAAC,MAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAEH,GADP;AAEE,IAAA,QAAQ,EAAC,UAFX;AAGE,IAAA,SAAS,EAAEO,UAHb;AAIE,IAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,CADD;AAEPC,MAAAA,OAAO,QAFA;AAGPC,MAAAA,OAAO,EAAE,OAHF;AAIPC,MAAAA,aAAa,EAAElB,aAAa,CAACQ,KAAD,EAASW,CAAD,IAAW,IAAIA,CAAL,GAAU,GAApB,MAAR;AAJrB,KAJX;AAUE,IAAA,KAAK,EAAE;AACL,eAAS;AACPC,QAAAA,QAAQ,EAAE,QADH;AAEPC,QAAAA,QAAQ,EAAE,UAFH;AAGPC,QAAAA,GAAG,EAAE,GAHE;AAIPC,QAAAA,KAAK,EAAE,GAJA;AAKPC,QAAAA,MAAM,EAAE,GALD;AAMPC,QAAAA,IAAI,EAAE,GANC;AAOPR,QAAAA,OAAO,EAAE,MAPF;AAQPS,QAAAA,cAAc,EAAE,QART;AASPC,QAAAA,UAAU,EAAE,QATL;AAUPC,QAAAA,KAAK,EAAE,MAVA;AAWPb,QAAAA,MAAM,EAAE;AAXD,OADJ;AAcL,4BAAsB;AACpBc,QAAAA,SAAS,EAAE;AADS;AAdjB;AAVT,KA4BMlB,IA5BN,GA8BGC,KA9BH,CADF;AAkCD,CA3CkC,CAA9B;;AA8CP,IAAIb,OAAJ,EAAa;AACXM,EAAAA,WAAW,CAACyB,WAAZ,GAA0B,aAA1B;AACD","sourcesContent":["import { cx, __DEV__, mapResponsive } from \"@chakra-ui/utils\"\nimport React, { Children } from \"react\"\nimport { chakra, PropsOf, ResponsiveValue, forwardRef } from \"@chakra-ui/system\"\n\ninterface AspectRatioOptions {\n  /**\n   * The aspect ratio of the Box. Common values are:\n   *\n   * `21/9`, `16/9`, `9/16`, `4/3`, `1.85/1`\n   */\n  ratio?: ResponsiveValue<number>\n}\n\nexport interface AspectRatioProps\n  extends PropsOf<typeof chakra.div>,\n    AspectRatioOptions {}\n\n/**\n * React component used to cropping media (videos, images and maps)\n * to a desired aspect ratio.\n *\n * @see Docs https://chakra-ui.com/components/aspect-ratio\n */\nexport const AspectRatio = forwardRef<AspectRatioProps, \"div\">(\n  function AspectRatio(props, ref) {\n    const { ratio = 4 / 3, children, className, ...rest } = props\n\n    // enforce single child\n    const child = Children.only(children)\n\n    const _className = cx(\"chakra-aspect-ratio\", className)\n\n    return (\n      <chakra.div\n        ref={ref}\n        position=\"relative\"\n        className={_className}\n        _before={{\n          height: 0,\n          content: `\"\"`,\n          display: \"block\",\n          paddingBottom: mapResponsive(ratio, (r) => `${(1 / r) * 100}%`),\n        }}\n        __css={{\n          \"& > *\": {\n            overflow: \"hidden\",\n            position: \"absolute\",\n            top: \"0\",\n            right: \"0\",\n            bottom: \"0\",\n            left: \"0\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            width: \"100%\",\n            height: \"100%\",\n          },\n          \"& > img, & > video\": {\n            objectFit: \"cover\",\n          },\n        }}\n        {...rest}\n      >\n        {child}\n      </chakra.div>\n    )\n  },\n)\n\nif (__DEV__) {\n  AspectRatio.displayName = \"AspectRatio\"\n}\n"],"file":"aspect-ratio.js"}