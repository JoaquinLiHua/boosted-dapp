{"version":3,"sources":["../../src/grid.tsx"],"names":["React","chakra","forwardRef","__DEV__","Grid","props","ref","area","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","displayName"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,EAAuCC,UAAvC,QAAyD,mBAAzD;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAIA;;;;;;;;AAQA,OAAO,IAAMC,IAAI,gBAAGF,UAAU,CAAmB,SAASE,IAAT,CAAcC,KAAd,EAAqBC,GAArB,EAA0B;AACzE,MAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,GAHI;AAIJC,IAAAA,MAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA,MANI;AAOJC,IAAAA,GAPI;AAQJC,IAAAA,QARI;AASJC,IAAAA,QATI;AAUJC,IAAAA,YAVI;AAWJC,IAAAA,WAXI;AAYJC,IAAAA;AAZI,MAcFb,KAdJ;AAAA,MAaKc,IAbL,iCAcId,KAdJ;;AAgBA,sBACE,oBAAC,MAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAEC,GADP;AAEE,IAAA,OAAO,EAAC,MAFV;AAGE,IAAA,QAAQ,EAAEC,IAHZ;AAIE,IAAA,iBAAiB,EAAEC,aAJrB;AAKE,IAAA,OAAO,EAAEC,GALX;AAME,IAAA,UAAU,EAAEC,MANd;AAOE,IAAA,aAAa,EAAEC,SAPjB;AAQE,IAAA,eAAe,EAAEM,WARnB;AASE,IAAA,UAAU,EAAEL,MATd;AAUE,IAAA,OAAO,EAAEC,GAVX;AAWE,IAAA,YAAY,EAAEC,QAXhB;AAYE,IAAA,YAAY,EAAEC,QAZhB;AAaE,IAAA,gBAAgB,EAAEC,YAbpB;AAcE,IAAA,mBAAmB,EAAEE;AAdvB,KAeMC,IAfN,EADF;AAmBD,CApC6B,CAAvB;;AAsCP,IAAIhB,OAAJ,EAAa;AACXC,EAAAA,IAAI,CAACgB,WAAL,GAAmB,MAAnB;AACD","sourcesContent":["import * as React from \"react\"\nimport { chakra, PropsOf, SystemProps, forwardRef } from \"@chakra-ui/system\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\n\nexport interface GridProps extends PropsOf<typeof chakra.div>, GridOptions {}\n\n/**\n * React component used to create grid layouts.\n *\n * It renders a `div` with `display: grid` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/components/grid\n */\nexport const Grid = forwardRef<GridProps, \"div\">(function Grid(props, ref) {\n  const {\n    area,\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props\n\n  return (\n    <chakra.div\n      ref={ref}\n      display=\"grid\"\n      gridArea={area}\n      gridTemplateAreas={templateAreas}\n      gridGap={gap}\n      gridRowGap={rowGap}\n      gridColumnGap={columnGap}\n      gridAutoColumns={autoColumns}\n      gridColumn={column}\n      gridRow={row}\n      gridAutoFlow={autoFlow}\n      gridAutoRows={autoRows}\n      gridTemplateRows={templateRows}\n      gridTemplateColumns={templateColumns}\n      {...rest}\n    />\n  )\n})\n\nif (__DEV__) {\n  Grid.displayName = \"Grid\"\n}\n\nexport interface GridOptions {\n  /**\n   * Short hand prop for `gridTemplateColumns`\n   */\n  templateColumns?: SystemProps[\"gridTemplateColumns\"]\n  /**\n   * Short hand prop for `gridGap`\n   */\n  gap?: SystemProps[\"gridGap\"]\n  /**\n   * Short hand prop for `gridRowGap`\n   */\n  rowGap?: SystemProps[\"gridRowGap\"]\n  /**\n   * Short hand prop for `gridColumnGap`\n   */\n  columnGap?: SystemProps[\"gridColumnGap\"]\n  /**\n   * Short hand prop for `gridAutoFlow`\n   */\n  autoFlow?: SystemProps[\"gridAutoFlow\"]\n  /**\n   * Short hand prop for `gridAutoRows`\n   */\n  autoRows?: SystemProps[\"gridAutoRows\"]\n  /**\n   * Short hand prop for `gridAutoColumns`\n   */\n  autoColumns?: SystemProps[\"gridAutoColumns\"]\n  /**\n   * Short hand prop for `gridTemplateRows`\n   */\n  templateRows?: SystemProps[\"gridTemplateRows\"]\n  /**\n   * Short hand prop for `gridTemplateAreas`\n   */\n  templateAreas?: SystemProps[\"gridTemplateAreas\"]\n  /**\n   * Short hand prop for `gridArea`\n   */\n  area?: SystemProps[\"gridArea\"]\n  /**\n   * Short hand prop for `gridColumn`\n   */\n  column?: SystemProps[\"gridColumn\"]\n  /**\n   * Short hand prop for `gridRow`\n   */\n  row?: SystemProps[\"gridRow\"]\n}\n"],"file":"grid.js"}