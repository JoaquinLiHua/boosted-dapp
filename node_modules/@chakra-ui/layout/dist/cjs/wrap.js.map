{"version":3,"sources":["../../src/wrap.tsx"],"names":["Wrap","props","ref","spacing","children","justify","direction","align","rest","theme","itemSpacing","value","margin","groupSpacing","validChildren","clones","map","child","index","display","flexWrap","justifyContent","alignItems","flexDirection","listStyleType","padding","__DEV__","displayName"],"mappings":";;;;;AAAA;;AAQA;;AACA;;;;;;;;;;AAqBA;;;;;;;;;;AAUO,IAAMA,IAAI,gBAAG,wBAA6B,SAASA,IAAT,CAAcC,KAAd,EAAqBC,GAArB,EAA0B;AAAA,uBAQrED,KARqE,CAEvEE,OAFuE;AAAA,MAEvEA,OAFuE,+BAE7D,QAF6D;AAAA,MAGvEC,QAHuE,GAQrEH,KARqE,CAGvEG,QAHuE;AAAA,MAIvEC,OAJuE,GAQrEJ,KARqE,CAIvEI,OAJuE;AAAA,MAKvEC,SALuE,GAQrEL,KARqE,CAKvEK,SALuE;AAAA,MAMvEC,KANuE,GAQrEN,KARqE,CAMvEM,KANuE;AAAA,MAOpEC,IAPoE,iCAQrEP,KARqE;;AAUzE,MAAMQ,KAAK,GAAG,uBAAd;AAEA,MAAMC,WAAW,GAAG,0BAAcP,OAAd,EAAuB,UAACQ,KAAD,EAAW;AAAA,eACjC,iBAAI;AAAEC,MAAAA,MAAM,EAAED;AAAV,KAAJ,EAAuBF,KAAvB,CADiC;AAAA,QAC5CG,MAD4C,QAC5CA,MAD4C;;AAEpD,qBAAeA,MAAf;AACD,GAHmB,CAApB;AAKA,MAAMC,YAAY,GAAG,0BAAcV,OAAd,EAAuB,UAACQ,KAAD,EAAW;AAAA,gBAClC,iBAAI;AAAEC,MAAAA,MAAM,EAAED;AAAV,KAAJ,EAAuBF,KAAvB,CADkC;AAAA,QAC7CG,MAD6C,SAC7CA,MAD6C;;AAErD,qBAAeA,MAAf;AACD,GAHoB,CAArB;AAKA,MAAME,aAAa,GAAG,6BAAiBV,QAAjB,CAAtB;AAEA,MAAMW,MAAM,GAAGD,aAAa,CAACE,GAAd,CAAkB,UAACC,KAAD,EAAQC,KAAR;AAAA,wBAC/B,oBAAC,cAAD,CAAQ,EAAR;AAAW,MAAA,GAAG,EAAEA,KAAhB;AAAuB,MAAA,MAAM,EAAER,WAA/B;AAA4C,MAAA,OAAO,EAAC;AAApD,OACGO,KADH,CAD+B;AAAA,GAAlB,CAAf;AAMA,sBACE,oBAAC,cAAD,CAAQ,GAAR;AAAY,IAAA,GAAG,EAAEf;AAAjB,KAA0BM,IAA1B,gBACE,oBAAC,cAAD,CAAQ,EAAR;AACE,IAAA,KAAK,EAAE;AACLW,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,QAAQ,EAAE,MAFL;AAGLC,MAAAA,cAAc,EAAEhB,OAHX;AAILiB,MAAAA,UAAU,EAAEf,KAJP;AAKLgB,MAAAA,aAAa,EAAEjB,SALV;AAMLkB,MAAAA,aAAa,EAAE,MANV;AAOLC,MAAAA,OAAO,EAAE,GAPJ;AAQLb,MAAAA,MAAM,EAAEC;AARH;AADT,KAYGE,MAZH,CADF,CADF;AAkBD,CAhDmB,CAAb;;;AAkDP,IAAIW,cAAJ,EAAa;AACX1B,EAAAA,IAAI,CAAC2B,WAAL,GAAmB,MAAnB;AACD","sourcesContent":["import {\n  chakra,\n  css,\n  PropsOf,\n  SystemProps,\n  useTheme,\n  forwardRef,\n} from \"@chakra-ui/system\"\nimport { getValidChildren, mapResponsive, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface WrapProps extends PropsOf<typeof chakra.div> {\n  /**\n   * The space between the each child (even if it wraps)\n   */\n  spacing?: SystemProps[\"margin\"]\n  /**\n   * The `justify-content` value (for cross-axis alignment)\n   */\n  justify?: SystemProps[\"justifyContent\"]\n  /**\n   * The `align-items` value (for main axis alignment)\n   */\n  align?: SystemProps[\"alignItems\"]\n  /**\n   * The `flex-direction` value\n   */\n  direction?: SystemProps[\"flexDirection\"]\n}\n\n/**\n * Layout component used to stack elements that differ in length\n * and are liable to wrap.\n *\n * Common use cases:\n * - Buttons that appear together at the end of forms\n * - Lists of tags and chips\n *\n * @see Docs https://chakra-ui.com/components/wrap\n */\nexport const Wrap = forwardRef<WrapProps, \"div\">(function Wrap(props, ref) {\n  const {\n    spacing = \"0.5rem\",\n    children,\n    justify,\n    direction,\n    align,\n    ...rest\n  } = props\n\n  const theme = useTheme()\n\n  const itemSpacing = mapResponsive(spacing, (value) => {\n    const { margin } = css({ margin: value })(theme)\n    return `calc(${margin} / 2)`\n  })\n\n  const groupSpacing = mapResponsive(spacing, (value) => {\n    const { margin } = css({ margin: value })(theme)\n    return `calc(${margin} / 2 * -1)`\n  })\n\n  const validChildren = getValidChildren(children)\n\n  const clones = validChildren.map((child, index) => (\n    <chakra.li key={index} margin={itemSpacing} display=\"inline-flex\">\n      {child}\n    </chakra.li>\n  ))\n\n  return (\n    <chakra.div ref={ref} {...rest}>\n      <chakra.ul\n        __css={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: justify,\n          alignItems: align,\n          flexDirection: direction,\n          listStyleType: \"none\",\n          padding: \"0\",\n          margin: groupSpacing,\n        }}\n      >\n        {clones}\n      </chakra.ul>\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  Wrap.displayName = \"Wrap\"\n}\n"],"file":"wrap.js"}