{"version":3,"sources":["../../src/slide.tsx"],"names":["createBaseStyle","placement","maxWidth","bottom","left","right","top","width","height","getTransformStyle","value","axis","getTransitionStyles","offset","init","transform","entered","exiting","Slide","props","timeout","children","rest","styles","positionStyles","position","willChange","enter","exit","__DEV__","displayName"],"mappings":"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","sourcesContent":["import * as React from \"react\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\nimport { Transition, TransitionProps } from \"./transition\"\n\ntype Placement = \"left\" | \"right\" | \"bottom\" | \"top\"\n\nfunction createBaseStyle(placement: Placement) {\n  switch (placement) {\n    case \"bottom\": {\n      return {\n        maxWidth: \"100vw\",\n        bottom: 0,\n        left: 0,\n        right: 0,\n      }\n    }\n    case \"top\": {\n      return {\n        maxWidth: \"100vw\",\n        top: 0,\n        left: 0,\n        right: 0,\n      }\n    }\n    case \"left\": {\n      return {\n        width: \"100%\",\n        height: \"100vh\",\n        left: 0,\n        top: 0,\n      }\n    }\n    case \"right\": {\n      return {\n        width: \"100%\",\n        right: 0,\n        top: 0,\n        height: \"100vh\",\n      }\n    }\n    default:\n      break\n  }\n}\n\nconst getTransformStyle = (placement: Placement, value: string) => {\n  let axis = \"\"\n  if (placement === \"left\" || placement === \"right\") axis = \"X\"\n  if (placement === \"top\" || placement === \"bottom\") axis = \"Y\"\n  return `translate${axis}(${value})`\n}\n\nfunction getTransitionStyles(placement: Placement) {\n  const offset = {\n    bottom: \"100%\",\n    top: \"-100%\",\n    left: \"-100%\",\n    right: \"100%\",\n  }\n\n  return {\n    init: {\n      transform: getTransformStyle(placement, offset[placement]),\n    },\n    entered: { transform: getTransformStyle(placement, \"0%\") },\n    exiting: {\n      transform: getTransformStyle(placement, offset[placement]),\n    },\n  }\n}\n\nexport type SlideProps = Omit<TransitionProps, \"styles\" | \"timeout\"> & {\n  /** The direction to slide drawer from */\n  placement?: Placement\n  /** The transition timeout */\n  timeout?: number\n}\n\nexport const Slide: React.FC<SlideProps> = (props) => {\n  const { placement = \"left\", timeout = 150, children, ...rest } = props\n\n  const styles = getTransitionStyles(placement)\n\n  const positionStyles: React.CSSProperties = {\n    position: \"fixed\",\n    willChange: \"transform\",\n    ...createBaseStyle(placement),\n  }\n\n  return (\n    <Transition\n      styles={styles}\n      transition={`opacity ${timeout}ms cubic-bezier(0, 0, 0.2, 1), transform ${timeout}ms cubic-bezier(0, 0, 0.2, 1)`}\n      timeout={{ enter: 0, exit: timeout }}\n      {...rest}\n    >\n      {(styles) => children({ ...positionStyles, ...styles })}\n    </Transition>\n  )\n}\n\nif (__DEV__) {\n  Slide.displayName = \"Slide\"\n}\n"],"file":"slide.js"}