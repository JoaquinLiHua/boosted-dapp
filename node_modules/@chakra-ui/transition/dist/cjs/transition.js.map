{"version":3,"sources":["../../src/transition.tsx"],"names":["Transition","props","styles","inProp","timeout","transition","children","rest","getStyle","state","init","__DEV__","displayName"],"mappings":";;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;AAiCO,IAAMA,UAAqC,GAAG,SAAxCA,UAAwC,CAACC,KAAD,EAAW;AAAA,MAE5DC,MAF4D,GAQ1DD,KAR0D,CAE5DC,MAF4D;AAAA,MAGxDC,MAHwD,GAQ1DF,KAR0D;AAAA,uBAQ1DA,KAR0D,CAI5DG,OAJ4D;AAAA,MAI5DA,OAJ4D,+BAIlD,GAJkD;AAAA,0BAQ1DH,KAR0D,CAK5DI,UAL4D;AAAA,MAK5DA,UAL4D,2CAKxCD,OALwC;AAAA,MAM5DE,QAN4D,GAQ1DL,KAR0D,CAM5DK,QAN4D;AAAA,MAOzDC,IAPyD,iCAQ1DN,KAR0D;;AAU9D,MAAMO,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,wBACZP,MAAM,CAACQ,IADK;AAEfL,MAAAA,UAAU,EAAVA;AAFe,OAGXH,MAAD,CAAgBO,KAAhB,CAHY;AAAA,GAAjB;;AAMA,sBACE,oBAAC,sBAAD;AACE,IAAA,MAAM,MADR;AAEE,IAAA,aAAa,MAFf;AAGE,UAAIN,MAHN;AAIE,IAAA,OAAO,EAAEC;AAJX,KAKOG,IALP,GAOG,UAACE,KAAD;AAAA,WAAWH,QAAQ,CAACE,QAAQ,CAACC,KAAD,CAAT,CAAnB;AAAA,GAPH,CADF;AAWD,CA3BM;;;;AA6BP,IAAIE,cAAJ,EAAa;AACXX,EAAAA,UAAU,CAACY,WAAX,GAAyB,YAAzB;AACD","sourcesContent":["import { __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport ReactTransition from \"react-transition-group/Transition\"\nimport type {\n  TransitionProps as ReactTransitionProps,\n  TransitionStatus,\n} from \"react-transition-group/Transition\"\n\ntype RTGProps = Pick<\n  ReactTransitionProps,\n  | \"in\"\n  | \"onEnter\"\n  | \"onEntering\"\n  | \"onEntered\"\n  | \"onExit\"\n  | \"onExiting\"\n  | \"onExited\"\n  | \"unmountOnExit\"\n  | \"timeout\"\n>\n\nexport interface TransitionProps extends RTGProps {\n  transition?: string\n  children: (styles: React.CSSProperties) => React.ReactNode\n  styles: TransitionStyles\n}\n\nexport type TransitionStyleState = \"init\" | \"entered\" | \"exiting\"\n\nexport type TransitionStyles = {\n  [K in TransitionStyleState]?: React.CSSProperties\n}\n\nexport type { TransitionStatus }\n\nexport const Transition: React.FC<TransitionProps> = (props) => {\n  const {\n    styles,\n    in: inProp,\n    timeout = 150,\n    transition = `all ${timeout}ms ease-in-out`,\n    children,\n    ...rest\n  } = props\n\n  const getStyle = (state: TransitionStatus) => ({\n    ...styles.init,\n    transition,\n    ...(styles as any)[state],\n  })\n\n  return (\n    <ReactTransition\n      appear\n      unmountOnExit\n      in={inProp}\n      timeout={timeout}\n      {...(rest as any)}\n    >\n      {(state) => children(getStyle(state))}\n    </ReactTransition>\n  )\n}\n\nif (__DEV__) {\n  Transition.displayName = \"Transition\"\n}\n"],"file":"transition.js"}