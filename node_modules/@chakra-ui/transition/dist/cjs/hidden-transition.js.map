{"version":3,"sources":["../../src/hidden-transition.tsx"],"names":["HiddenTransition","props","nodeRef","children","onEnter","onExited","onExit","onExiting","rest","done","current","addEventListener","isAppearing","hidden","style","pointerEvents","__DEV__","displayName"],"mappings":";;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;AAyBO,IAAMA,gBAAiD,GAAG,SAApDA,gBAAoD,CAACC,KAAD,EAAW;AAAA,MAExEC,OAFwE,GAStED,KATsE,CAExEC,OAFwE;AAAA,MAGxEC,QAHwE,GAStEF,KATsE,CAGxEE,QAHwE;AAAA,MAIxEC,QAJwE,GAStEH,KATsE,CAIxEG,OAJwE;AAAA,MAKxEC,SALwE,GAStEJ,KATsE,CAKxEI,QALwE;AAAA,MAMxEC,OANwE,GAStEL,KATsE,CAMxEK,MANwE;AAAA,MAOxEC,UAPwE,GAStEN,KATsE,CAOxEM,SAPwE;AAAA,MAQrEC,IARqE,iCAStEP,KATsE;;AAW1E,sBACE,oBAAC,yBAAD,eACMO,IADN;AAEE,IAAA,OAAO,EAAEN,OAFX;AAGE,IAAA,cAAc,EAAE,wBAACO,IAAD,EAAU;AAAA;;AACxB,0BAAAP,OAAO,CAACQ,OAAR,sCAAiBC,gBAAjB,CAAkC,eAAlC,EAAmDF,IAAnD,EAAyD,KAAzD;AACD,KALH;AAME,IAAA,OAAO,EAAE,iBAACG,WAAD,EAAiB;AACxB,UAAIV,OAAO,CAACQ,OAAZ,EAAqB;AACnBR,QAAAA,OAAO,CAACQ,OAAR,CAAgBG,MAAhB,GAAyB,KAAzB;AACD;;AACDT,MAAAA,QAAO,QAAP,YAAAA,QAAO,CAAGQ,WAAH,CAAP;AACD,KAXH;AAYE,IAAA,QAAQ,EAAE,oBAAM;AACd,UAAIV,OAAO,CAACQ,OAAZ,EAAqB;AACnBR,QAAAA,OAAO,CAACQ,OAAR,CAAgBG,MAAhB,GAAyB,IAAzB;AACAX,QAAAA,OAAO,CAACQ,OAAR,CAAgBI,KAAhB,CAAsBC,aAAtB,GAAsC,MAAtC;AACD;;AACDV,MAAAA,SAAQ,QAAR,YAAAA,SAAQ;AACT,KAlBH;AAmBE,IAAA,MAAM,EAAE,kBAAM;AACZ,UAAIH,OAAO,CAACQ,OAAZ,EAAqB;AACnBR,QAAAA,OAAO,CAACQ,OAAR,CAAgBG,MAAhB,GAAyB,KAAzB;AACD;;AACDP,MAAAA,OAAM,QAAN,YAAAA,OAAM;AACP,KAxBH;AAyBE,IAAA,SAAS,EAAE,qBAAM;AACf,UAAIJ,OAAO,CAACQ,OAAZ,EAAqB;AACnBR,QAAAA,OAAO,CAACQ,OAAR,CAAgBI,KAAhB,CAAsBC,aAAtB,GAAsC,MAAtC;AACD;;AACDR,MAAAA,UAAS,QAAT,YAAAA,UAAS;AACV;AA9BH,MAgCGJ,QAhCH,CADF;AAoCD,CA/CM;;;;AAiDP,IAAIa,cAAJ,EAAa;AACXhB,EAAAA,gBAAgB,CAACiB,WAAjB,GAA+B,kBAA/B;AACD","sourcesContent":["import { __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport CSSTransition, {\n  CSSTransitionProps,\n} from \"react-transition-group/CSSTransition\"\n\ntype Picked =\n  | \"onEnter\"\n  | \"onEntered\"\n  | \"timeout\"\n  | \"onExited\"\n  | \"onExit\"\n  | \"classNames\"\n  | \"onExiting\"\n  | \"in\"\n  | \"unmountOnExit\"\n  | \"mountOnEnter\"\n\nexport type HiddenTransitionProps = Pick<\n  CSSTransitionProps<HTMLElement>,\n  Picked\n> & {\n  nodeRef: React.RefObject<HTMLElement>\n  children: React.ReactNode\n  appear?: boolean\n}\n\nexport const HiddenTransition: React.FC<HiddenTransitionProps> = (props) => {\n  const {\n    nodeRef,\n    children,\n    onEnter,\n    onExited,\n    onExit,\n    onExiting,\n    ...rest\n  } = props\n\n  return (\n    <CSSTransition\n      {...rest}\n      nodeRef={nodeRef}\n      addEndListener={(done) => {\n        nodeRef.current?.addEventListener(\"transitionend\", done, false)\n      }}\n      onEnter={(isAppearing) => {\n        if (nodeRef.current) {\n          nodeRef.current.hidden = false\n        }\n        onEnter?.(isAppearing)\n      }}\n      onExited={() => {\n        if (nodeRef.current) {\n          nodeRef.current.hidden = true\n          nodeRef.current.style.pointerEvents = \"auto\"\n        }\n        onExited?.()\n      }}\n      onExit={() => {\n        if (nodeRef.current) {\n          nodeRef.current.hidden = false\n        }\n        onExit?.()\n      }}\n      onExiting={() => {\n        if (nodeRef.current) {\n          nodeRef.current.style.pointerEvents = \"none\"\n        }\n        onExiting?.()\n      }}\n    >\n      {children}\n    </CSSTransition>\n  )\n}\n\nif (__DEV__) {\n  HiddenTransition.displayName = \"HiddenTransition\"\n}\n"],"file":"hidden-transition.js"}