{"version":3,"sources":["../../src/transition.tsx"],"names":["__DEV__","React","ReactTransition","Transition","props","styles","in","inProp","timeout","transition","children","rest","getStyle","state","init","displayName"],"mappings":";;;;AAAA,SAASA,OAAT,QAAwB,kBAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AAiCA,OAAO,IAAMC,UAAqC,GAAIC,KAAD,IAAW;AAC9D,MAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,EAAE,EAAEC,MAFA;AAGJC,IAAAA,OAAO,GAAG,GAHN;AAIJC,IAAAA,UAAU,YAAUD,OAAV,mBAJN;AAKJE,IAAAA;AALI,MAOFN,KAPJ;AAAA,MAMKO,IANL,iCAOIP,KAPJ;;AASA,MAAMQ,QAAQ,GAAIC,KAAD,iBACZR,MAAM,CAACS,IADK;AAEfL,IAAAA;AAFe,KAGXJ,MAAD,CAAgBQ,KAAhB,CAHY,CAAjB;;AAMA,sBACE,oBAAC,eAAD;AACE,IAAA,MAAM,MADR;AAEE,IAAA,aAAa,MAFf;AAGE,IAAA,EAAE,EAAEN,MAHN;AAIE,IAAA,OAAO,EAAEC;AAJX,KAKOG,IALP,GAOIE,KAAD,IAAWH,QAAQ,CAACE,QAAQ,CAACC,KAAD,CAAT,CAPtB,CADF;AAWD,CA3BM;;AA6BP,IAAIb,OAAJ,EAAa;AACXG,EAAAA,UAAU,CAACY,WAAX,GAAyB,YAAzB;AACD","sourcesContent":["import { __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport ReactTransition from \"react-transition-group/Transition\"\nimport type {\n  TransitionProps as ReactTransitionProps,\n  TransitionStatus,\n} from \"react-transition-group/Transition\"\n\ntype RTGProps = Pick<\n  ReactTransitionProps,\n  | \"in\"\n  | \"onEnter\"\n  | \"onEntering\"\n  | \"onEntered\"\n  | \"onExit\"\n  | \"onExiting\"\n  | \"onExited\"\n  | \"unmountOnExit\"\n  | \"timeout\"\n>\n\nexport interface TransitionProps extends RTGProps {\n  transition?: string\n  children: (styles: React.CSSProperties) => React.ReactNode\n  styles: TransitionStyles\n}\n\nexport type TransitionStyleState = \"init\" | \"entered\" | \"exiting\"\n\nexport type TransitionStyles = {\n  [K in TransitionStyleState]?: React.CSSProperties\n}\n\nexport type { TransitionStatus }\n\nexport const Transition: React.FC<TransitionProps> = (props) => {\n  const {\n    styles,\n    in: inProp,\n    timeout = 150,\n    transition = `all ${timeout}ms ease-in-out`,\n    children,\n    ...rest\n  } = props\n\n  const getStyle = (state: TransitionStatus) => ({\n    ...styles.init,\n    transition,\n    ...(styles as any)[state],\n  })\n\n  return (\n    <ReactTransition\n      appear\n      unmountOnExit\n      in={inProp}\n      timeout={timeout}\n      {...(rest as any)}\n    >\n      {(state) => children(getStyle(state))}\n    </ReactTransition>\n  )\n}\n\nif (__DEV__) {\n  Transition.displayName = \"Transition\"\n}\n"],"file":"transition.js"}