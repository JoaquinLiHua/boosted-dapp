function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import { __DEV__ } from "@chakra-ui/utils";
import * as React from "react";
import CSSTransition from "react-transition-group/CSSTransition";
export var HiddenTransition = props => {
  var {
    nodeRef,
    children,
    onEnter: _onEnter,
    onExited: _onExited,
    onExit: _onExit,
    onExiting: _onExiting
  } = props,
      rest = _objectWithoutPropertiesLoose(props, ["nodeRef", "children", "onEnter", "onExited", "onExit", "onExiting"]);

  return /*#__PURE__*/React.createElement(CSSTransition, _extends({}, rest, {
    nodeRef: nodeRef,
    addEndListener: done => {
      var _nodeRef$current;

      (_nodeRef$current = nodeRef.current) == null ? void 0 : _nodeRef$current.addEventListener("transitionend", done, false);
    },
    onEnter: isAppearing => {
      if (nodeRef.current) {
        nodeRef.current.hidden = false;
      }

      _onEnter == null ? void 0 : _onEnter(isAppearing);
    },
    onExited: () => {
      if (nodeRef.current) {
        nodeRef.current.hidden = true;
        nodeRef.current.style.pointerEvents = "auto";
      }

      _onExited == null ? void 0 : _onExited();
    },
    onExit: () => {
      if (nodeRef.current) {
        nodeRef.current.hidden = false;
      }

      _onExit == null ? void 0 : _onExit();
    },
    onExiting: () => {
      if (nodeRef.current) {
        nodeRef.current.style.pointerEvents = "none";
      }

      _onExiting == null ? void 0 : _onExiting();
    }
  }), children);
};

if (__DEV__) {
  HiddenTransition.displayName = "HiddenTransition";
}
//# sourceMappingURL=hidden-transition.js.map