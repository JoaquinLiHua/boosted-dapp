{"version":3,"sources":["../../src/image.tsx"],"names":["chakra","forwardRef","omit","__DEV__","React","useImage","Image","props","ref","fallbackSrc","fallback","src","align","fit","loading","ignoreFallback","crossOrigin","rest","shouldIgnore","status","shared","objectFit","objectPosition","displayName"],"mappings":";;;;AAAA,SAASA,MAAT,EAAuCC,UAAvC,QAAyD,mBAAzD;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,kBAA9B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAwC,aAAxC;;AA8CA;;;;;;AAMA,OAAO,IAAMC,KAAK,gBAAGL,UAAU,CAAoB,SAASK,KAAT,CAAeC,KAAf,EAAsBC,GAAtB,EAA2B;AAC5E,MAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,GAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,GALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA,cAPI;AAQJC,IAAAA;AARI,MAUFT,KAVJ;AAAA,MASKU,IATL,iCAUIV,KAVJ;AAYA;;;;;;AAIA,MAAMW,YAAY,GAAGJ,OAAO,IAAI,IAAX,IAAmBC,cAAxC;AAEA,MAAMI,MAAM,GAAGd,QAAQ,cAClBE,KADkB;AAErBQ,IAAAA,cAAc,EAAEG;AAFK,KAAvB;;AAKA,MAAME,MAAM;AACVZ,IAAAA,GADU;AAEVa,IAAAA,SAAS,EAAER,GAFD;AAGVS,IAAAA,cAAc,EAAEV;AAHN,KAINM,YAAY,GAAGD,IAAH,GAAUf,IAAI,CAACe,IAAD,EAAO,CAAC,SAAD,EAAY,QAAZ,CAAP,CAJpB,CAAZ;;AAOA,MAAIE,MAAM,KAAK,QAAf,EAAyB;AACvB;;;;AAIA,QAAIT,QAAJ,EAAc,OAAOA,QAAP;AAEd,wBACE,oBAAC,MAAD,CAAQ,GAAR;AACE,MAAA,SAAS,EAAC,2BADZ;AAEE,MAAA,GAAG,EAAED;AAFP,OAGMW,MAHN,EADF;AAOD;;AAED,sBACE,oBAAC,MAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAET,GADP;AAEE,IAAA,WAAW,EAAEK,WAFf;AAGE,IAAA,OAAO,EAAEF,OAHX;AAIE,IAAA,SAAS,EAAC;AAJZ,KAKMM,MALN,EADF;AASD,CAxD8B,CAAxB;;AA0DP,IAAIjB,OAAJ,EAAa;AACXG,EAAAA,KAAK,CAACiB,WAAN,GAAoB,OAApB;AACD","sourcesContent":["import { chakra, PropsOf, SystemProps, forwardRef } from \"@chakra-ui/system\"\nimport { omit, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { useImage, UseImageProps } from \"./use-image\"\n\ninterface ImageOptions {\n  /**\n   * Fallback image `src` to show if image is loading or image fails.\n   *\n   * Note ðŸš¨: We recommend you use a local image\n   */\n  fallbackSrc?: string\n  /**\n   * Fallback element to show if image is loading or image fails.\n   */\n  fallback?: React.ReactElement\n  /**\n   * The native HTML `width` attribute to the passed to the `img`\n   */\n  htmlWidth?: string | number\n  /**\n   * The native HTML `height` attribute to the passed to the `img`\n   */\n  htmlHeight?: string | number\n  /**\n   * Defines loading strategy\n   */\n  loading?: \"eager\" | \"lazy\"\n  /**\n   * How the image to fit within it's bounds.\n   * It maps to css `object-fit` property.\n   */\n  fit?: SystemProps[\"objectFit\"]\n  /**\n   * How to align the image within its bounds.\n   * It maps to css `object-position` property.\n   */\n  align?: SystemProps[\"objectPosition\"]\n  /**\n   * If `true`, opt out of the `fallbackSrc` logic and use as `img`\n   */\n  ignoreFallback?: boolean\n}\n\nexport interface ImageProps\n  extends UseImageProps,\n    Omit<PropsOf<typeof chakra.img>, keyof UseImageProps>,\n    ImageOptions {}\n\n/**\n * React component that renders an image with support\n * for fallbacks\n *\n * @see Docs https://chakra-ui.com/components/image\n */\nexport const Image = forwardRef<ImageProps, \"img\">(function Image(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    ...rest\n  } = props\n\n  /**\n   * Defer to native `img` tag if `loading` prop is passed\n   * @see https://github.com/chakra-ui/chakra-ui/issues/1027\n   */\n  const shouldIgnore = loading != null || ignoreFallback\n\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnore,\n  })\n\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...(shouldIgnore ? rest : omit(rest, [\"onError\", \"onLoad\"])),\n  }\n\n  if (status !== \"loaded\") {\n    /**\n     * If user passed a custom fallback component,\n     * let's render it here.\n     */\n    if (fallback) return fallback\n\n    return (\n      <chakra.img\n        className=\"chakra-image__placeholder\"\n        src={fallbackSrc}\n        {...shared}\n      />\n    )\n  }\n\n  return (\n    <chakra.img\n      src={src}\n      crossOrigin={crossOrigin}\n      loading={loading}\n      className=\"chakra-image\"\n      {...shared}\n    />\n  )\n})\n\nif (__DEV__) {\n  Image.displayName = \"Image\"\n}\n"],"file":"image.js"}