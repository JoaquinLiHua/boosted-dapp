{"version":3,"sources":["../../src/image.tsx"],"names":["Image","props","ref","fallbackSrc","fallback","src","align","fit","loading","ignoreFallback","crossOrigin","rest","shouldIgnore","status","shared","objectFit","objectPosition","__DEV__","displayName"],"mappings":";;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;AA8CA;;;;;;AAMO,IAAMA,KAAK,gBAAG,wBAA8B,SAASA,KAAT,CAAeC,KAAf,EAAsBC,GAAtB,EAA2B;AAAA,MAE1EC,WAF0E,GAWxEF,KAXwE,CAE1EE,WAF0E;AAAA,MAG1EC,QAH0E,GAWxEH,KAXwE,CAG1EG,QAH0E;AAAA,MAI1EC,GAJ0E,GAWxEJ,KAXwE,CAI1EI,GAJ0E;AAAA,MAK1EC,KAL0E,GAWxEL,KAXwE,CAK1EK,KAL0E;AAAA,MAM1EC,GAN0E,GAWxEN,KAXwE,CAM1EM,GAN0E;AAAA,MAO1EC,OAP0E,GAWxEP,KAXwE,CAO1EO,OAP0E;AAAA,MAQ1EC,cAR0E,GAWxER,KAXwE,CAQ1EQ,cAR0E;AAAA,MAS1EC,WAT0E,GAWxET,KAXwE,CAS1ES,WAT0E;AAAA,MAUvEC,IAVuE,iCAWxEV,KAXwE;AAa5E;;;;;;AAIA,MAAMW,YAAY,GAAGJ,OAAO,IAAI,IAAX,IAAmBC,cAAxC;AAEA,MAAMI,MAAM,GAAG,qCACVZ,KADU;AAEbQ,IAAAA,cAAc,EAAEG;AAFH,KAAf;;AAKA,MAAME,MAAM;AACVZ,IAAAA,GAAG,EAAHA,GADU;AAEVa,IAAAA,SAAS,EAAER,GAFD;AAGVS,IAAAA,cAAc,EAAEV;AAHN,KAINM,YAAY,GAAGD,IAAH,GAAU,iBAAKA,IAAL,EAAW,CAAC,SAAD,EAAY,QAAZ,CAAX,CAJhB,CAAZ;;AAOA,MAAIE,MAAM,KAAK,QAAf,EAAyB;AACvB;;;;AAIA,QAAIT,QAAJ,EAAc,OAAOA,QAAP;AAEd,wBACE,oBAAC,cAAD,CAAQ,GAAR;AACE,MAAA,SAAS,EAAC,2BADZ;AAEE,MAAA,GAAG,EAAED;AAFP,OAGMW,MAHN,EADF;AAOD;;AAED,sBACE,oBAAC,cAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAET,GADP;AAEE,IAAA,WAAW,EAAEK,WAFf;AAGE,IAAA,OAAO,EAAEF,OAHX;AAIE,IAAA,SAAS,EAAC;AAJZ,KAKMM,MALN,EADF;AASD,CAxDoB,CAAd;;;AA0DP,IAAIG,cAAJ,EAAa;AACXjB,EAAAA,KAAK,CAACkB,WAAN,GAAoB,OAApB;AACD","sourcesContent":["import { chakra, PropsOf, SystemProps, forwardRef } from \"@chakra-ui/system\"\nimport { omit, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { useImage, UseImageProps } from \"./use-image\"\n\ninterface ImageOptions {\n  /**\n   * Fallback image `src` to show if image is loading or image fails.\n   *\n   * Note ðŸš¨: We recommend you use a local image\n   */\n  fallbackSrc?: string\n  /**\n   * Fallback element to show if image is loading or image fails.\n   */\n  fallback?: React.ReactElement\n  /**\n   * The native HTML `width` attribute to the passed to the `img`\n   */\n  htmlWidth?: string | number\n  /**\n   * The native HTML `height` attribute to the passed to the `img`\n   */\n  htmlHeight?: string | number\n  /**\n   * Defines loading strategy\n   */\n  loading?: \"eager\" | \"lazy\"\n  /**\n   * How the image to fit within it's bounds.\n   * It maps to css `object-fit` property.\n   */\n  fit?: SystemProps[\"objectFit\"]\n  /**\n   * How to align the image within its bounds.\n   * It maps to css `object-position` property.\n   */\n  align?: SystemProps[\"objectPosition\"]\n  /**\n   * If `true`, opt out of the `fallbackSrc` logic and use as `img`\n   */\n  ignoreFallback?: boolean\n}\n\nexport interface ImageProps\n  extends UseImageProps,\n    Omit<PropsOf<typeof chakra.img>, keyof UseImageProps>,\n    ImageOptions {}\n\n/**\n * React component that renders an image with support\n * for fallbacks\n *\n * @see Docs https://chakra-ui.com/components/image\n */\nexport const Image = forwardRef<ImageProps, \"img\">(function Image(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    ...rest\n  } = props\n\n  /**\n   * Defer to native `img` tag if `loading` prop is passed\n   * @see https://github.com/chakra-ui/chakra-ui/issues/1027\n   */\n  const shouldIgnore = loading != null || ignoreFallback\n\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnore,\n  })\n\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...(shouldIgnore ? rest : omit(rest, [\"onError\", \"onLoad\"])),\n  }\n\n  if (status !== \"loaded\") {\n    /**\n     * If user passed a custom fallback component,\n     * let's render it here.\n     */\n    if (fallback) return fallback\n\n    return (\n      <chakra.img\n        className=\"chakra-image__placeholder\"\n        src={fallbackSrc}\n        {...shared}\n      />\n    )\n  }\n\n  return (\n    <chakra.img\n      src={src}\n      crossOrigin={crossOrigin}\n      loading={loading}\n      className=\"chakra-image\"\n      {...shared}\n    />\n  )\n})\n\nif (__DEV__) {\n  Image.displayName = \"Image\"\n}\n"],"file":"image.js"}