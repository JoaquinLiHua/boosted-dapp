{"version":3,"sources":["../../../src/pseudo/pseudo.utils.ts"],"names":["isPseudoProp","prop","pseudoSelectors","getPropName","parsePseudo","props","next","propValue","propName"],"mappings":";;;;;AAAA;;AACA;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD;AAAA,SACnBA,IAAI,IAAIC,uBADW;AAAA,CAArB;;AAGA,IAAMC,WAAW,GAAG,oBAAQ,UAACF,IAAD;AAAA,SAC1BD,YAAY,CAACC,IAAD,CAAZ,GAAqBC,wBAAgBD,IAAhB,CAArB,GAA6CA,IADnB;AAAA,CAAR,CAApB;;AAIO,SAASG,WAAT,CAAqBC,KAArB,EAAkC;AACvC,MAAMC,IAAU,GAAG,EAAnB;;AAEA,OAAK,IAAML,IAAX,IAAmBI,KAAnB,EAA0B;AACxB,QAAME,SAAS,GAAGF,KAAK,CAACJ,IAAD,CAAvB;AACA,QAAMO,QAAQ,GAAGL,WAAW,CAACF,IAAD,CAA5B;;AAEA,QAAI,qBAASM,SAAT,KAAuB,CAAC,uBAAWA,SAAX,CAA5B,EAAmD;AACjDD,MAAAA,IAAI,CAACE,QAAD,CAAJ,GAAiBJ,WAAW,CAACG,SAAD,CAA5B;AACD,KAFD,MAEO;AACLD,MAAAA,IAAI,CAACE,QAAD,CAAJ,GAAiBD,SAAjB;AACD;AACF;;AAED,SAAOD,IAAP;AACD","sourcesContent":["import { Dict, memoize, isObject, isFunction } from \"@chakra-ui/utils\"\nimport { pseudoSelectors, Pseudos } from \"./pseudo.selector\"\n\nconst isPseudoProp = (prop: string): prop is keyof Pseudos =>\n  prop in pseudoSelectors\n\nconst getPropName = memoize((prop: string) =>\n  isPseudoProp(prop) ? pseudoSelectors[prop] : prop,\n)\n\nexport function parsePseudo(props: Dict) {\n  const next: Dict = {}\n\n  for (const prop in props) {\n    const propValue = props[prop]\n    const propName = getPropName(prop)\n\n    if (isObject(propValue) && !isFunction(propValue)) {\n      next[propName] = parsePseudo(propValue)\n    } else {\n      next[propName] = propValue\n    }\n  }\n\n  return next\n}\n"],"file":"pseudo.utils.js"}