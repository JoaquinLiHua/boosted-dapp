{"version":3,"sources":["../../src/css.ts"],"names":["defaultBreakpoints","getBreakpoints","theme","breakpoints","responsive","styles","computedStyles","mediaQueries","map","n","key","value","queries","slice","length","index","media","css","args","props","styleObject","k","x","pseudoSelectors","val","config","parser","apply","scale","transform","properties","p","property"],"mappings":"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","sourcesContent":["import {\n  Dict,\n  get,\n  isArray,\n  isObject,\n  isResponsiveObjectLike,\n  objectToArrayNotation,\n  runIfFn,\n  merge,\n} from \"@chakra-ui/utils\"\nimport { pseudoSelectors } from \"./pseudo\"\nimport { parser } from \"./parser\"\nimport { StyleObjectOrFn, CSSObject } from \"./css.types\"\n\nconst defaultBreakpoints = [\"40em\", \"52em\", \"64em\"]\n\nfunction getBreakpoints(theme: any) {\n  const breakpoints = theme?.breakpoints ?? defaultBreakpoints\n  return breakpoints as string[]\n}\n\nconst responsive = (styles: any) => (theme?: any) => {\n  const computedStyles: any = {}\n  const breakpoints = getBreakpoints(theme)\n  const mediaQueries = [\n    null,\n    ...breakpoints.map((n) => `@media screen and (min-width: ${n})`),\n  ]\n\n  for (const key in styles) {\n    let value = runIfFn(styles[key], theme ?? {})\n    if (value == null) continue\n\n    value = isResponsiveObjectLike(value) ? objectToArrayNotation(value) : value\n\n    if (!isArray(value)) {\n      computedStyles[key] = value\n      continue\n    }\n\n    const queries = value.slice(0, mediaQueries.length).length\n\n    for (let index = 0; index < queries; index++) {\n      const media = mediaQueries[index]\n      if (!media) {\n        computedStyles[key] = value[index]\n        continue\n      }\n      computedStyles[media] = computedStyles[media] || {}\n      if (value[index] == null) continue\n      computedStyles[media][key] = value[index]\n    }\n  }\n\n  return computedStyles\n}\n\ntype PropsOrTheme = Dict | { theme: Dict }\n\nexport const css = (args: StyleObjectOrFn = {}) => (\n  props: PropsOrTheme = {},\n) => {\n  const theme = \"theme\" in props ? props.theme : props\n\n  let computedStyles: CSSObject = {}\n\n  const styleObject = runIfFn(args, theme)\n  const styles = responsive(styleObject)(theme)\n\n  for (const k in styles) {\n    const x = styles[k]\n    const key = k in pseudoSelectors ? pseudoSelectors[k] : k\n\n    const val = runIfFn(x, theme)\n\n    const config = (parser.config as Dict)[key]\n\n    if (key === \"apply\") {\n      const apply = css(get(theme, val))(theme)\n      computedStyles = merge({}, computedStyles, apply)\n      continue\n    }\n\n    if (isObject(val)) {\n      computedStyles[key] = css(val)(theme)\n      continue\n    }\n\n    const scale = get(theme, config?.scale, {})\n    const value = config?.transform?.(val, scale) ?? get(scale, val, val)\n\n    if (config?.properties) {\n      for (const p of config?.properties) {\n        computedStyles[p] = value\n      }\n      continue\n    }\n\n    if (config?.property) {\n      computedStyles[config?.property] = value\n      continue\n    }\n\n    computedStyles[key] = value\n  }\n\n  return computedStyles\n}\n"],"file":"css.js"}