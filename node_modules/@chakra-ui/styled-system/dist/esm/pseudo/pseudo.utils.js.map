{"version":3,"sources":["../../../src/pseudo/pseudo.utils.ts"],"names":["memoize","isObject","isFunction","pseudoSelectors","isPseudoProp","prop","getPropName","parsePseudo","props","next","propValue","propName"],"mappings":"AAAA,SAAeA,OAAf,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAoD,kBAApD;AACA,SAASC,eAAT,QAAyC,mBAAzC;;AAEA,IAAMC,YAAY,GAAIC,IAAD,IACnBA,IAAI,IAAIF,eADV;;AAGA,IAAMG,WAAW,GAAGN,OAAO,CAAEK,IAAD,IAC1BD,YAAY,CAACC,IAAD,CAAZ,GAAqBF,eAAe,CAACE,IAAD,CAApC,GAA6CA,IADpB,CAA3B;AAIA,OAAO,SAASE,WAAT,CAAqBC,KAArB,EAAkC;AACvC,MAAMC,IAAU,GAAG,EAAnB;;AAEA,OAAK,IAAMJ,IAAX,IAAmBG,KAAnB,EAA0B;AACxB,QAAME,SAAS,GAAGF,KAAK,CAACH,IAAD,CAAvB;AACA,QAAMM,QAAQ,GAAGL,WAAW,CAACD,IAAD,CAA5B;;AAEA,QAAIJ,QAAQ,CAACS,SAAD,CAAR,IAAuB,CAACR,UAAU,CAACQ,SAAD,CAAtC,EAAmD;AACjDD,MAAAA,IAAI,CAACE,QAAD,CAAJ,GAAiBJ,WAAW,CAACG,SAAD,CAA5B;AACD,KAFD,MAEO;AACLD,MAAAA,IAAI,CAACE,QAAD,CAAJ,GAAiBD,SAAjB;AACD;AACF;;AAED,SAAOD,IAAP;AACD","sourcesContent":["import { Dict, memoize, isObject, isFunction } from \"@chakra-ui/utils\"\nimport { pseudoSelectors, Pseudos } from \"./pseudo.selector\"\n\nconst isPseudoProp = (prop: string): prop is keyof Pseudos =>\n  prop in pseudoSelectors\n\nconst getPropName = memoize((prop: string) =>\n  isPseudoProp(prop) ? pseudoSelectors[prop] : prop,\n)\n\nexport function parsePseudo(props: Dict) {\n  const next: Dict = {}\n\n  for (const prop in props) {\n    const propValue = props[prop]\n    const propName = getPropName(prop)\n\n    if (isObject(propValue) && !isFunction(propValue)) {\n      next[propName] = parsePseudo(propValue)\n    } else {\n      next[propName] = propValue\n    }\n  }\n\n  return next\n}\n"],"file":"pseudo.utils.js"}