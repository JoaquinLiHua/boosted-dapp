{"version":3,"sources":["../../src/use-clipboard.ts"],"names":["useState","useCallback","useEffect","copy","useClipboard","text","timeout","hasCopied","setHasCopied","onCopy","didCopy","id","setTimeout","clearTimeout","value"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA;;;;;;;AAMA,OAAO,SAASC,YAAT,CAAsBC,IAAtB,EAAoCC,OAApC,EAAoD;AAAA,MAAhBA,OAAgB;AAAhBA,IAAAA,OAAgB,GAAN,IAAM;AAAA;;AACzD,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AAEA,MAAMS,MAAM,GAAGR,WAAW,CAAC,MAAM;AAC/B,QAAMS,OAAO,GAAGP,IAAI,CAACE,IAAD,CAApB;AACAG,IAAAA,YAAY,CAACE,OAAD,CAAZ;AACD,GAHyB,EAGvB,CAACL,IAAD,CAHuB,CAA1B;AAKAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,SAAJ,EAAe;AACb,UAAMI,EAAE,GAAGC,UAAU,CAAC,MAAM;AAC1BJ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAFoB,EAElBF,OAFkB,CAArB;AAIA,aAAO,MAAMO,YAAY,CAACF,EAAD,CAAzB;AACD;AACF,GARQ,EAQN,CAACL,OAAD,EAAUC,SAAV,CARM,CAAT;AAUA,SAAO;AAAEO,IAAAA,KAAK,EAAET,IAAT;AAAeI,IAAAA,MAAf;AAAuBF,IAAAA;AAAvB,GAAP;AACD","sourcesContent":["import { useState, useCallback, useEffect } from \"react\"\nimport copy from \"copy-to-clipboard\"\n\n/**\n * React hook to copy content to clipboard\n *\n * @param text the text or value to copy\n * @param timeout delay (in ms) to switch back to initial state once copied.\n */\nexport function useClipboard(text: string, timeout = 1500) {\n  const [hasCopied, setHasCopied] = useState(false)\n\n  const onCopy = useCallback(() => {\n    const didCopy = copy(text)\n    setHasCopied(didCopy)\n  }, [text])\n\n  useEffect(() => {\n    if (hasCopied) {\n      const id = setTimeout(() => {\n        setHasCopied(false)\n      }, timeout)\n\n      return () => clearTimeout(id)\n    }\n  }, [timeout, hasCopied])\n\n  return { value: text, onCopy, hasCopied }\n}\n"],"file":"use-clipboard.js"}