{"version":3,"sources":["../../src/use-logger.ts"],"names":["React","useUpdateEffect","useLogger","label","values","useEffect","console","log"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AAEA;;;;;;;;AAOA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAAoD;AAAA,oCAAfC,MAAe;AAAfA,IAAAA,MAAe;AAAA;;AACzDJ,EAAAA,KAAK,CAACK,SAAN,CAAgB,MAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAeJ,KAAf,gBAAiC,GAAGC,MAApC;AACA,WAAO,MAAM;AACXE,MAAAA,OAAO,CAACC,GAAR,CAAeJ,KAAf;AACD,KAFD,CAFoB,CAKpB;AACD,GAND,EAMG,EANH;AAQAF,EAAAA,eAAe,CAAC,MAAM;AACpBK,IAAAA,OAAO,CAACC,GAAR,CAAeJ,KAAf,gBAAiC,GAAGC,MAApC;AACD,GAFc,CAAf;AAGD","sourcesContent":["import * as React from \"react\"\nimport { useUpdateEffect } from \"./use-update-effect\"\n\n/**\n * React hook to console-log a value when it mounts\n * and as it updates.\n *\n * @param label a label for the component\n * @param values parameters to log\n */\nexport function useLogger(label: string, ...values: any[]) {\n  React.useEffect(() => {\n    console.log(`${label} mounted:`, ...values)\n    return () => {\n      console.log(`${label} unmounted`)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useUpdateEffect(() => {\n    console.log(`${label} updated:`, ...values)\n  })\n}\n"],"file":"use-logger.js"}