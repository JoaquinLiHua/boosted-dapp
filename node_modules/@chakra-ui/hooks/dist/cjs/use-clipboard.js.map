{"version":3,"sources":["../../src/use-clipboard.ts"],"names":["useClipboard","text","timeout","hasCopied","setHasCopied","onCopy","didCopy","id","setTimeout","clearTimeout","value"],"mappings":";;;;;AAAA;;AACA;;;;AAEA;;;;;;AAMO,SAASA,YAAT,CAAsBC,IAAtB,EAAoCC,OAApC,EAAoD;AAAA,MAAhBA,OAAgB;AAAhBA,IAAAA,OAAgB,GAAN,IAAM;AAAA;;AAAA,kBACvB,qBAAS,KAAT,CADuB;AAAA,MAClDC,SADkD;AAAA,MACvCC,YADuC;;AAGzD,MAAMC,MAAM,GAAG,wBAAY,YAAM;AAC/B,QAAMC,OAAO,GAAG,iCAAKL,IAAL,CAAhB;AACAG,IAAAA,YAAY,CAACE,OAAD,CAAZ;AACD,GAHc,EAGZ,CAACL,IAAD,CAHY,CAAf;AAKA,wBAAU,YAAM;AACd,QAAIE,SAAJ,EAAe;AACb,UAAMI,EAAE,GAAGC,UAAU,CAAC,YAAM;AAC1BJ,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAFoB,EAElBF,OAFkB,CAArB;AAIA,aAAO;AAAA,eAAMO,YAAY,CAACF,EAAD,CAAlB;AAAA,OAAP;AACD;AACF,GARD,EAQG,CAACL,OAAD,EAAUC,SAAV,CARH;AAUA,SAAO;AAAEO,IAAAA,KAAK,EAAET,IAAT;AAAeI,IAAAA,MAAM,EAANA,MAAf;AAAuBF,IAAAA,SAAS,EAATA;AAAvB,GAAP;AACD","sourcesContent":["import { useState, useCallback, useEffect } from \"react\"\nimport copy from \"copy-to-clipboard\"\n\n/**\n * React hook to copy content to clipboard\n *\n * @param text the text or value to copy\n * @param timeout delay (in ms) to switch back to initial state once copied.\n */\nexport function useClipboard(text: string, timeout = 1500) {\n  const [hasCopied, setHasCopied] = useState(false)\n\n  const onCopy = useCallback(() => {\n    const didCopy = copy(text)\n    setHasCopied(didCopy)\n  }, [text])\n\n  useEffect(() => {\n    if (hasCopied) {\n      const id = setTimeout(() => {\n        setHasCopied(false)\n      }, timeout)\n\n      return () => clearTimeout(id)\n    }\n  }, [timeout, hasCopied])\n\n  return { value: text, onCopy, hasCopied }\n}\n"],"file":"use-clipboard.js"}