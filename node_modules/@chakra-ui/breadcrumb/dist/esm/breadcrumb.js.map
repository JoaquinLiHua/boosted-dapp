{"version":3,"sources":["../../src/breadcrumb.tsx"],"names":["chakra","forwardRef","omitThemingProps","StylesProvider","useMultiStyleConfig","useStyles","cx","getValidChildren","__DEV__","React","cloneElement","BreadcrumbSeparator","props","ref","spacing","rest","styles","separatorStyles","mx","separator","displayName","BreadcrumbLink","isCurrentPage","as","className","sharedProps","link","BreadcrumbItem","isLastChild","children","validChildren","clones","map","child","type","_className","display","alignItems","Breadcrumb","realProps","count","length","index"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  PropsOf,\n  omitThemingProps,\n  StylesProvider,\n  SystemProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n} from \"@chakra-ui/system\"\nimport { cx, getValidChildren, __DEV__ } from \"@chakra-ui/utils\"\nimport React, { cloneElement } from \"react\"\n\nexport interface BreadcrumbSeparatorProps extends PropsOf<typeof chakra.div> {\n  spacing?: SystemProps[\"mx\"]\n}\n\n/**\n * React component that separates each breadcrumb link\n */\nexport const BreadcrumbSeparator = forwardRef<BreadcrumbSeparatorProps, \"span\">(\n  function BreadcrumbSeparator(props, ref) {\n    const { spacing, ...rest } = props\n\n    const styles = useStyles()\n    const separatorStyles = {\n      mx: spacing,\n      ...styles.separator,\n    }\n\n    return (\n      <chakra.span\n        ref={ref}\n        role=\"presentation\"\n        {...rest}\n        __css={separatorStyles}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  BreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n}\n\nexport interface BreadcrumbLinkProps extends PropsOf<typeof chakra.a> {\n  isCurrentPage?: boolean\n}\n\n/**\n * Breadcrumb link.\n *\n * It renders a `span` when it's the current link. Otherwise,\n * it renders an anchor tag.\n */\nexport const BreadcrumbLink = forwardRef<BreadcrumbLinkProps, \"a\">(\n  function BreadcrumbLink(props, ref) {\n    const { isCurrentPage, as, className, ...rest } = props\n    const styles = useStyles()\n\n    const sharedProps = {\n      ref,\n      as,\n      className: cx(\"chakra-breadcrumb__link\", className),\n      ...rest,\n    }\n\n    if (isCurrentPage) {\n      return <chakra.span aria-current=\"page\" {...sharedProps} />\n    }\n\n    return <chakra.a __css={styles.link} {...sharedProps} />\n  },\n)\n\nif (__DEV__) {\n  BreadcrumbLink.displayName = \"BreadcrumbLink\"\n}\n\ninterface BreadcrumbItemOptions extends BreadcrumbOptions {\n  isCurrentPage?: boolean\n  isLastChild?: boolean\n}\n\nexport interface BreadcrumbItemProps\n  extends BreadcrumbItemOptions,\n    PropsOf<typeof chakra.li> {}\n\n/**\n * BreadcrumbItem is used to group a breadcrumb link.\n * It renders a `li` element to denote it belongs to an order list of links.\n *\n * @see Docs https://chakra-ui.com/components/breadcrumbs\n */\nexport const BreadcrumbItem = forwardRef<BreadcrumbItemProps, \"li\">(\n  function BreadcrumbItem(props, ref) {\n    const {\n      isCurrentPage,\n      separator,\n      isLastChild,\n      spacing,\n      children,\n      className,\n      ...rest\n    } = props\n\n    const validChildren = getValidChildren(children)\n\n    const clones = validChildren.map((child) => {\n      if (child.type === BreadcrumbLink) {\n        return cloneElement(child, {\n          isCurrentPage,\n        })\n      }\n\n      if (child.type === BreadcrumbSeparator) {\n        return cloneElement(child, {\n          spacing,\n          children: child.props.children || separator,\n        })\n      }\n\n      return child\n    })\n\n    const _className = cx(\"chakra-breadcrumb__list-item\", className)\n\n    return (\n      <chakra.li\n        ref={ref}\n        className={_className}\n        {...rest}\n        __css={{\n          display: \"inline-flex\",\n          alignItems: \"center\",\n        }}\n      >\n        {clones}\n        {!isLastChild && (\n          <BreadcrumbSeparator spacing={spacing} children={separator} />\n        )}\n      </chakra.li>\n    )\n  },\n)\n\nif (__DEV__) {\n  BreadcrumbItem.displayName = \"BreadcrumbItem\"\n}\n\nexport interface BreadcrumbOptions {\n  /**\n   * The visual separator between each breadcrumb item\n   */\n  separator?: string | React.ReactElement\n  /**\n   * The left and right margin applied to the separator\n   */\n  spacing?: SystemProps[\"mx\"]\n}\n\nexport interface BreadcrumbProps\n  extends PropsOf<typeof chakra.nav>,\n    BreadcrumbOptions,\n    ThemingProps {}\n\n/**\n * Breadcrumb is used to render a breadcrumb navigation landmark.\n * It renders a `nav` element with `aria-label` set to `Breadcrumb`\n *\n * @see Docs https://chakra-ui.com/components/breadcrumbs\n */\nexport const Breadcrumb = forwardRef<BreadcrumbProps, \"nav\">(\n  function Breadcrumb(props, ref) {\n    const styles = useMultiStyleConfig(\"Breadcrumb\", props)\n    const realProps = omitThemingProps(props)\n\n    const {\n      children,\n      spacing = \"0.5rem\",\n      separator = \"/\",\n      className,\n      ...rest\n    } = realProps\n\n    const validChildren = getValidChildren(children)\n    const count = validChildren.length\n\n    const clones = validChildren.map((child, index) =>\n      cloneElement(child, {\n        separator,\n        spacing,\n        isLastChild: count === index + 1,\n      }),\n    )\n\n    const _className = cx(\"chakra-breadcrumb\", className)\n\n    return (\n      <chakra.nav\n        ref={ref}\n        aria-label=\"breadcrumb\"\n        className={_className}\n        {...rest}\n      >\n        <StylesProvider value={styles}>\n          <chakra.ol className=\"chakra-breadcrumb__list\">{clones}</chakra.ol>\n        </StylesProvider>\n      </chakra.nav>\n    )\n  },\n)\n\nif (__DEV__) {\n  Breadcrumb.displayName = \"Breadcrumb\"\n}\n"],"file":"breadcrumb.js"}