import { RefObject } from "react";
export interface UseFocusOnHideOptions {
    focusRef: RefObject<HTMLElement>;
    autoFocus?: boolean;
    visible?: boolean;
    trigger?: "hover" | "click";
}
/**
 * Popover hook to manage the focus when the popover closes or hides.
 *
 * We either want to return focus back to the popover trigger or
 * let focus proceed normally if user moved to another interactive
 * element in the viewport.
 */
export declare function useFocusOnHide(popoverRef: RefObject<HTMLElement>, options: UseFocusOnHideOptions): void;
interface UseFocusOnShowOptions {
    autoFocus?: boolean;
    visible?: boolean;
    focusRef?: RefObject<HTMLElement>;
    trigger?: "hover" | "click";
}
/**
 * Popover hook to manage the focus when the popover opens.
 *
 * We either want to focus the popover content itself since it
 * has `tabIndex = -1`, or focus the first interactive element
 * within the popover content.
 */
export declare function useFocusOnShow(popoverRef: RefObject<HTMLElement>, options: UseFocusOnShowOptions): void;
export {};
