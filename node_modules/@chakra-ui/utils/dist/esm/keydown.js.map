{"version":3,"sources":["../../src/keydown.ts"],"names":["runIfFn","normalizeEventKey","createOnKeyDown","options","keyMap","onKey","stopPropagation","onKeyDown","shouldKeyDown","preventDefault","event","finalKeyMap","shouldPreventDefault","shouldStopPropagation","eventKey","action"],"mappings":"AAAA;AACA;AAGA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,iBAAT,QAAkC,OAAlC;AAkCA,OAAO,SAASC,eAAT,CAAyBC,OAAzB,EAA0D;AAC/D,MAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,eAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,aAAa,GAAG,MAAM,IALlB;AAMJC,IAAAA,cAAc,GAAG;AANb,MAOFN,OAPJ;AASA,SAAQO,KAAD,IAAgC;AACrC,QAAI,CAACN,MAAL,EAAa;AAEb,QAAMO,WAAW,GAAGX,OAAO,CAACI,MAAD,EAASM,KAAT,CAA3B;AACA,QAAME,oBAAoB,GAAGZ,OAAO,CAACS,cAAD,EAAiBC,KAAjB,CAApC;AACA,QAAMG,qBAAqB,GAAGb,OAAO,CAACM,eAAD,EAAkBI,KAAlB,CAArC;AAEA,QAAMI,QAAQ,GAAGb,iBAAiB,CAACS,KAAD,CAAlC;;AAEA,QAAII,QAAQ,IAAIH,WAAhB,EAA6B;AAC3B,UAAMI,MAAM,GAAGJ,WAAW,CAACG,QAAD,CAA1B;;AAEA,UAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCP,aAAa,CAACE,KAAD,CAAjD,EAA0D;AACxD,YAAIE,oBAAJ,EAA0BF,KAAK,CAACD,cAAN;AAC1B,YAAII,qBAAJ,EAA2BH,KAAK,CAACJ,eAAN;AAC3BD,QAAAA,KAAK,QAAL,YAAAA,KAAK,CAAGK,KAAH,CAAL;AACAK,QAAAA,MAAM,CAACL,KAAD,CAAN;AACA;AACD;AACF;;AAEDH,IAAAA,SAAS,QAAT,YAAAA,SAAS,CAAGG,KAAH,CAAT;AACD,GAtBD;AAuBD","sourcesContent":["// Credit goes to Diego Haz for this one\n// https://github.com/reakit/reakit/blob/master/packages/reakit-utils/src/createOnKeyDown.ts\n\nimport * as React from \"react\"\nimport { runIfFn } from \"./function\"\nimport { normalizeEventKey } from \"./dom\"\n\ntype EventKeys =\n  | \"ArrowDown\"\n  | \"ArrowUp\"\n  | \"ArrowLeft\"\n  | \"ArrowRight\"\n  | \"Enter\"\n  | \"Space\"\n  | \"Tab\"\n  | \"Backspace\"\n  | \"Control\"\n  | \"Meta\"\n  | \"Home\"\n  | \"End\"\n  | \"PageDown\"\n  | \"PageUp\"\n  | \"Delete\"\n  | \"Escape\"\n  | \" \"\n  | \"Shift\"\n\ntype KeyMapReturn = (event: React.KeyboardEvent) => any\ntype KeyMap = Partial<Record<EventKeys, KeyMapReturn>>\n\nexport interface CreateOnKeyDownOptions {\n  keyMap?: KeyMap\n  onKey?: (event: React.KeyboardEvent) => any\n  preventDefault?: boolean | ((event: React.KeyboardEvent) => boolean)\n  stopPropagation?: boolean | ((event: React.KeyboardEvent) => boolean)\n  onKeyDown?: (event: React.KeyboardEvent) => void\n  shouldKeyDown?: (event: React.KeyboardEvent) => boolean\n}\n\nexport function createOnKeyDown(options: CreateOnKeyDownOptions) {\n  const {\n    keyMap,\n    onKey,\n    stopPropagation,\n    onKeyDown,\n    shouldKeyDown = () => true,\n    preventDefault = true,\n  } = options\n\n  return (event: React.KeyboardEvent) => {\n    if (!keyMap) return\n\n    const finalKeyMap = runIfFn(keyMap, event)\n    const shouldPreventDefault = runIfFn(preventDefault, event)\n    const shouldStopPropagation = runIfFn(stopPropagation, event)\n\n    const eventKey = normalizeEventKey(event)\n\n    if (eventKey in finalKeyMap) {\n      const action = finalKeyMap[eventKey as EventKeys]\n\n      if (typeof action === \"function\" && shouldKeyDown(event)) {\n        if (shouldPreventDefault) event.preventDefault()\n        if (shouldStopPropagation) event.stopPropagation()\n        onKey?.(event)\n        action(event)\n        return\n      }\n    }\n\n    onKeyDown?.(event)\n  }\n}\n"],"file":"keydown.js"}