var oppositeDirections = {
  top: "bottom",
  bottom: "top",
  right: "left",
  left: "right"
};
export var getOppositePosition = position => oppositeDirections[position];

var splitPlacement = placement => placement.split("-");

export function getArrowStyles(placement, arrowSize, arrowShadowColor) {
  if (typeof placement !== "string") return {};
  var [position] = splitPlacement(placement);
  var oppositePosition = getOppositePosition(position);
  if (!oppositePosition) return {};
  return {
    [oppositePosition]: "-" + arrowSize / 2 + "px",
    width: arrowSize,
    height: arrowSize,
    position: "absolute",
    transform: "rotate(45deg)",
    boxShadow: arrowShadowColor ? getBoxShadow(placement, arrowShadowColor) : undefined
  };
}
export function getBoxShadow(placement, color) {
  if (placement.includes("top")) {
    return "2px 2px 2px 0 " + color;
  }

  if (placement.includes("bottom")) {
    return "-1px -1px 1px 0 " + color;
  }

  if (placement.includes("right")) {
    return "-1px 1px 1px 0 " + color;
  }

  if (placement.includes("left")) {
    return "1px -1px 1px 0 " + color;
  }
}
var transformEnum = {
  top: "bottom center",
  "top-start": "bottom left",
  "top-end": "bottom right",
  bottom: "top center",
  "bottom-start": "top left",
  "bottom-end": "top right",
  left: "right center",
  "left-start": "right top",
  "left-end": "right bottom",
  right: "left center",
  "right-start": "left top",
  "right-end": "left bottom"
};
export var toTransformOrigin = placement => transformEnum[placement];
//# sourceMappingURL=popper.utils.js.map