{"version":3,"sources":["../../src/popper.utils.ts"],"names":["oppositeDirections","top","bottom","right","left","getOppositePosition","position","splitPlacement","placement","split","getArrowStyles","arrowSize","arrowShadowColor","oppositePosition","width","height","transform","boxShadow","getBoxShadow","undefined","color","includes","transformEnum","toTransformOrigin"],"mappings":";;;;;;AAEA,IAAMA,kBAAkB,GAAG;AACzBC,EAAAA,GAAG,EAAE,QADoB;AAEzBC,EAAAA,MAAM,EAAE,KAFiB;AAGzBC,EAAAA,KAAK,EAAE,MAHkB;AAIzBC,EAAAA,IAAI,EAAE;AAJmB,CAA3B;;AASO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,QAAD;AAAA,SACjCN,kBAAkB,CAACM,QAAD,CADe;AAAA,CAA5B;;;;AAGP,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,SAAD;AAAA,SACrBA,SAAS,CAACC,KAAV,CAAgB,GAAhB,CADqB;AAAA,CAAvB;;AAGO,SAASC,cAAT,CACLF,SADK,EAELG,SAFK,EAGLC,gBAHK,EAIgB;AAAA;;AACrB,MAAI,OAAOJ,SAAP,KAAqB,QAAzB,EAAmC,OAAO,EAAP;;AADd,wBAGFD,cAAc,CAACC,SAAD,CAHZ;AAAA,MAGdF,QAHc;;AAIrB,MAAMO,gBAAgB,GAAGR,mBAAmB,CAACC,QAAD,CAA5C;AAEA,MAAI,CAACO,gBAAL,EAAuB,OAAO,EAAP;AAEvB,yBACGA,gBADH,UAC0BF,SAAS,GAAG,CADtC,cAEEG,KAFF,GAESH,SAFT,OAGEI,MAHF,GAGUJ,SAHV,OAIEL,QAJF,GAIY,UAJZ,OAKEU,SALF,GAKa,eALb,OAMEC,SANF,GAMaL,gBAAgB,GACvBM,YAAY,CAACV,SAAD,EAAYI,gBAAZ,CADW,GAEvBO,SARN;AAUD;;AAEM,SAASD,YAAT,CAAsBV,SAAtB,EAA4CY,KAA5C,EAA2D;AAChE,MAAIZ,SAAS,CAACa,QAAV,CAAmB,KAAnB,CAAJ,EAA+B;AAC7B,8BAAwBD,KAAxB;AACD;;AAED,MAAIZ,SAAS,CAACa,QAAV,CAAmB,QAAnB,CAAJ,EAAkC;AAChC,gCAA0BD,KAA1B;AACD;;AAED,MAAIZ,SAAS,CAACa,QAAV,CAAmB,OAAnB,CAAJ,EAAiC;AAC/B,+BAAyBD,KAAzB;AACD;;AAED,MAAIZ,SAAS,CAACa,QAAV,CAAmB,MAAnB,CAAJ,EAAgC;AAC9B,+BAAyBD,KAAzB;AACD;AACF;;AAED,IAAME,aAAa,GAAG;AACpBrB,EAAAA,GAAG,EAAE,eADe;AAEpB,eAAa,aAFO;AAGpB,aAAW,cAHS;AAKpBC,EAAAA,MAAM,EAAE,YALY;AAMpB,kBAAgB,UANI;AAOpB,gBAAc,WAPM;AASpBE,EAAAA,IAAI,EAAE,cATc;AAUpB,gBAAc,WAVM;AAWpB,cAAY,cAXQ;AAapBD,EAAAA,KAAK,EAAE,aAba;AAcpB,iBAAe,UAdK;AAepB,eAAa;AAfO,CAAtB;;AAkBO,IAAMoB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACf,SAAD;AAAA,SAC/Bc,aAAa,CAACd,SAAD,CADkB;AAAA,CAA1B","sourcesContent":["import { Placement } from \"@popperjs/core\"\n\nconst oppositeDirections = {\n  top: \"bottom\",\n  bottom: \"top\",\n  right: \"left\",\n  left: \"right\",\n}\n\ntype Direction = keyof typeof oppositeDirections\n\nexport const getOppositePosition = (position: Direction) =>\n  oppositeDirections[position]\n\nconst splitPlacement = (placement: Placement) =>\n  placement.split(\"-\") as Direction[]\n\nexport function getArrowStyles(\n  placement: Placement | undefined,\n  arrowSize: number,\n  arrowShadowColor?: string,\n): React.CSSProperties {\n  if (typeof placement !== \"string\") return {}\n\n  const [position] = splitPlacement(placement)\n  const oppositePosition = getOppositePosition(position)\n\n  if (!oppositePosition) return {}\n\n  return {\n    [oppositePosition]: `-${arrowSize / 2}px`,\n    width: arrowSize,\n    height: arrowSize,\n    position: \"absolute\",\n    transform: \"rotate(45deg)\",\n    boxShadow: arrowShadowColor\n      ? getBoxShadow(placement, arrowShadowColor)\n      : undefined,\n  }\n}\n\nexport function getBoxShadow(placement: Placement, color: string) {\n  if (placement.includes(\"top\")) {\n    return `2px 2px 2px 0 ${color}`\n  }\n\n  if (placement.includes(\"bottom\")) {\n    return `-1px -1px 1px 0 ${color}`\n  }\n\n  if (placement.includes(\"right\")) {\n    return `-1px 1px 1px 0 ${color}`\n  }\n\n  if (placement.includes(\"left\")) {\n    return `1px -1px 1px 0 ${color}`\n  }\n}\n\nconst transformEnum = {\n  top: \"bottom center\",\n  \"top-start\": \"bottom left\",\n  \"top-end\": \"bottom right\",\n\n  bottom: \"top center\",\n  \"bottom-start\": \"top left\",\n  \"bottom-end\": \"top right\",\n\n  left: \"right center\",\n  \"left-start\": \"right top\",\n  \"left-end\": \"right bottom\",\n\n  right: \"left center\",\n  \"right-start\": \"left top\",\n  \"right-end\": \"left bottom\",\n}\n\nexport const toTransformOrigin = (placement: Placement) =>\n  transformEnum[placement]\n"],"file":"popper.utils.js"}