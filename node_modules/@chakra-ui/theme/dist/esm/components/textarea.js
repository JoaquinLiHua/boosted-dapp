var _input$baseStyle, _input$sizes, _input$sizes2, _input$sizes3, _input$variants4;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { styleConfig } from "@chakra-ui/theme-tools";
import input from "./input";
var textarea = styleConfig({
  baseStyle: _extends({}, (_input$baseStyle = input.baseStyle) == null ? void 0 : _input$baseStyle.field, {
    paddingY: "8px",
    minHeight: "80px",
    lineHeight: "short"
  }),
  sizes: {
    sm: (_input$sizes = input.sizes) == null ? void 0 : _input$sizes.sm.field,
    md: (_input$sizes2 = input.sizes) == null ? void 0 : _input$sizes2.md.field,
    lg: (_input$sizes3 = input.sizes) == null ? void 0 : _input$sizes3.lg.field
  },
  variants: {
    outline: props => {
      var _input$variants$outli, _input$variants, _input$variants$outli2;

      return (_input$variants$outli = (_input$variants = input.variants) == null ? void 0 : (_input$variants$outli2 = _input$variants.outline(props)) == null ? void 0 : _input$variants$outli2.field) != null ? _input$variants$outli : {};
    },
    flushed: props => {
      var _input$variants$flush, _input$variants2, _input$variants2$flus;

      return (_input$variants$flush = (_input$variants2 = input.variants) == null ? void 0 : (_input$variants2$flus = _input$variants2.flushed(props)) == null ? void 0 : _input$variants2$flus.field) != null ? _input$variants$flush : {};
    },
    filled: props => {
      var _input$variants$fille, _input$variants3;

      return (_input$variants$fille = (_input$variants3 = input.variants) == null ? void 0 : _input$variants3.filled(props).field) != null ? _input$variants$fille : {};
    },
    unstyled: (_input$variants4 = input.variants) == null ? void 0 : _input$variants4.unstyled.field
  },
  defaultProps: {
    size: "md",
    variant: "outline"
  }
});
export default textarea;
//# sourceMappingURL=textarea.js.map