declare const button: import("@chakra-ui/theme-tools").StyleConfig<{
    lineHeight: string;
    borderRadius: string;
    fontWeight: string;
    _focus: {
        boxShadow: string;
    };
    _disabled: {
        opacity: number;
        cursor: string;
        boxShadow: string;
    };
}, {
    lg: {
        h: number;
        minW: number;
        fontSize: string;
        px: number;
    };
    md: {
        h: number;
        minW: number;
        fontSize: string;
        px: number;
    };
    sm: {
        h: number;
        minW: number;
        fontSize: string;
        px: number;
    };
    xs: {
        h: number;
        minW: number;
        fontSize: string;
        px: number;
    };
}, {
    ghost: (props: Record<string, any>) => {
        color: any;
        _hover: {
            bg: any;
        };
        _active: {
            bg: any;
        };
        bg?: undefined;
    } | {
        color: any;
        bg: string;
        _hover: {
            bg: any;
        };
        _active: {
            bg: any;
        };
    };
    outline: (props: Record<string, any>) => {
        color: any;
        _hover: {
            bg: any;
        };
        _active: {
            bg: any;
        };
        bg?: undefined;
        border: string;
        borderColor: any;
    } | {
        color: any;
        bg: string;
        _hover: {
            bg: any;
        };
        _active: {
            bg: any;
        };
        border: string;
        borderColor: any;
    };
    solid: (props: Record<string, any>) => {
        bg: any;
        _hover: {
            bg: any;
        };
        _active: {
            bg: any;
        };
        color?: undefined;
    } | {
        bg: any;
        color: any;
        _hover: {
            bg: any;
        };
        _active: {
            bg: any;
        };
    };
    link: (props: Record<string, any>) => {
        padding: number;
        height: string;
        lineHeight: string;
        color: any;
        _hover: {
            textDecoration: string;
        };
        _active: {
            color: any;
        };
    };
    unstyled: {
        bg: string;
        color: string;
        display: string;
        lineHeight: string;
        m: number;
        p: number;
    };
}> & {
    propTypes: {
        variant?: "solid" | "outline" | "ghost" | "link" | "unstyled" | undefined;
        size?: "md" | "xs" | "sm" | "lg" | undefined;
        colorScheme?: string | undefined;
    };
};
export default button;
