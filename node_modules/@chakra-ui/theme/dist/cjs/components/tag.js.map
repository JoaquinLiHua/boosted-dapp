{"version":3,"sources":["../../../src/components/tag.ts"],"names":["tag","parts","container","label","closeButton","baseStyle","fontWeight","lineHeight","outline","_focus","boxShadow","fontSize","w","h","borderRadius","ml","mr","opacity","_disabled","bg","_hover","_active","sizes","sm","minH","minW","px","md","lg","variants","subtle","props","badge","solid","defaultProps","size","variant","colorScheme"],"mappings":"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","sourcesContent":["import { multiStyleConfig } from \"@chakra-ui/theme-tools\"\nimport badge from \"./badge\"\n\nconst tag = multiStyleConfig({\n  parts: {\n    container: \"the tag container\",\n    label: \"the tag inner text\",\n    closeButton: \"the close button\",\n  },\n  baseStyle: {\n    container: {\n      fontWeight: \"medium\",\n      lineHeight: 1.2,\n      outline: 0,\n      _focus: {\n        boxShadow: \"outline\",\n      },\n    },\n    label: {\n      lineHeight: 1.2,\n    },\n    closeButton: {\n      fontSize: \"18px\",\n      w: \"1.25rem\",\n      h: \"1.25rem\",\n      borderRadius: \"sm\",\n      ml: \"0.375rem\",\n      mr: \"-1\",\n      opacity: 0.5,\n      _disabled: {\n        opacity: 0.4,\n      },\n      _focus: {\n        boxShadow: \"outline\",\n        bg: \"rgba(0, 0, 0, 0.14)\",\n      },\n      _hover: { opacity: 0.8 },\n      _active: { opacity: 1 },\n    },\n  },\n\n  sizes: {\n    sm: {\n      container: {\n        minH: \"1.25rem\",\n        minW: \"1.25rem\",\n        fontSize: \"xs\",\n        px: 1,\n        borderRadius: \"sm\",\n      },\n    },\n    md: {\n      container: {\n        minH: \"1.5rem\",\n        minW: \"1.5rem\",\n        fontSize: \"sm\",\n        borderRadius: \"md\",\n        px: 2,\n      },\n    },\n    lg: {\n      container: {\n        minH: 8,\n        minW: 8,\n        fontSize: \"md\",\n        borderRadius: \"md\",\n        px: 3,\n      },\n    },\n  },\n\n  variants: {\n    subtle: function (props) {\n      return { container: badge.variants?.subtle(props) }\n    },\n    solid: function (props) {\n      return { container: badge.variants?.solid(props) }\n    },\n    outline: function (props) {\n      return { container: badge.variants?.outline(props) }\n    },\n  },\n\n  defaultProps: {\n    size: \"lg\",\n    variant: \"subtle\",\n    colorScheme: \"gray\",\n  },\n})\n\nexport default tag\n"],"file":"tag.js"}