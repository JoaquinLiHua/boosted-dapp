"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _themeTools = require("@chakra-ui/theme-tools");

var _checkbox = _interopRequireDefault(require("./checkbox"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var radio = (0, _themeTools.multiStyleConfig)({
  parts: {
    control: "the radio input container",
    label: "the radio label"
  },
  baseStyle: function baseStyle(props) {
    var _checkbox$baseStyle;

    var _ref = (_checkbox$baseStyle = _checkbox["default"].baseStyle == null ? void 0 : _checkbox["default"].baseStyle(props)) != null ? _checkbox$baseStyle : {},
        label = _ref.label,
        control = _ref.control;

    return {
      label: label,
      control: _extends({}, control, {
        borderRadius: "full",
        _checked: _extends({}, control == null ? void 0 : control["_checked"], {
          _before: {
            content: "\"\"",
            display: "inline-block",
            position: "relative",
            width: "50%",
            height: "50%",
            borderRadius: "50%",
            bg: "currentColor"
          }
        })
      })
    };
  },
  sizes: {
    md: {
      control: {
        w: 4,
        h: 4
      },
      label: {
        fontSize: "md"
      }
    },
    lg: {
      control: {
        w: 5,
        h: 5
      },
      label: {
        fontSize: "lg"
      }
    },
    sm: {
      control: {
        width: 3,
        height: 3
      },
      label: {
        fontSize: "sm"
      }
    }
  },
  defaultProps: {
    size: "md",
    colorScheme: "blue"
  }
});
var _default = radio;
exports["default"] = _default;
//# sourceMappingURL=radio.js.map