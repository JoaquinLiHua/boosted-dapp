"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _themeTools = require("@chakra-ui/theme-tools");

var tabs = (0, _themeTools.multiStyleConfig)({
  parts: {
    tablist: "the tab list or button group",
    tab: "the tab button",
    tabpanel: "the tab content",
    indicator: "the active tab indicator"
  },
  baseStyle: function baseStyle(props) {
    var _props$align = props.align,
        align = _props$align === void 0 ? "start" : _props$align,
        isFitted = props.isFitted;
    return {
      tab: {
        flex: isFitted ? 1 : undefined,
        transition: "all 0.2s",
        _focus: {
          zIndex: 1,
          boxShadow: "outline"
        }
      },
      tablist: {
        justifyContent: alignments[align]
      },
      tabpanel: {
        p: 4
      }
    };
  },
  sizes: {
    sm: {
      tab: {
        py: "0.25rem",
        px: "1rem",
        fontSize: "0.85rem"
      }
    },
    md: {
      tab: {
        fontSize: "1rem",
        py: "0.5rem",
        px: "1rem"
      }
    },
    lg: {
      tab: {
        fontSize: "1.15rem",
        py: "0.75rem",
        px: "1rem"
      }
    }
  },
  variants: {
    line: function line(props) {
      var c = props.colorScheme;
      return {
        tablist: {
          borderBottom: "2px solid",
          borderColor: "inherit"
        },
        tab: {
          borderBottom: "2px solid",
          borderColor: "transparent",
          mb: "-2px",
          _selected: {
            color: (0, _themeTools.mode)(c + ".600", c + ".300")(props),
            borderColor: "currentColor"
          },
          _active: {
            bg: (0, _themeTools.mode)("gray.200", "whiteAlpha.300")(props)
          },
          _disabled: {
            opacity: 0.4,
            cursor: "not-allowed"
          }
        }
      };
    },
    enclosed: function enclosed(props) {
      var c = props.colorScheme;
      return {
        tab: {
          borderTopRadius: "md",
          border: "1px solid",
          borderColor: "transparent",
          mb: "-1px",
          _selected: {
            color: (0, _themeTools.mode)(c + ".600", c + ".300")(props),
            borderColor: "inherit",
            borderBottomColor: (0, _themeTools.mode)("white", "gray.800")(props)
          }
        },
        tablist: {
          mb: "-1px",
          borderBottom: "1px solid",
          borderColor: "inherit"
        }
      };
    },
    "enclosed-colored": function enclosedColored(props) {
      var c = props.colorScheme;
      return {
        tab: {
          border: "1px solid",
          borderColor: "inherit",
          bg: (0, _themeTools.mode)("gray.50", "whiteAlpha.50")(props),
          mb: "-1px",
          _notLast: {
            mr: "-1px"
          },
          _selected: {
            bg: (0, _themeTools.mode)("#fff", "gray.800")(props),
            color: (0, _themeTools.mode)(c + ".600", c + ".300")(props),
            borderColor: "inherit",
            borderTopColor: "currentColor",
            borderBottomColor: "transparent"
          }
        },
        tablist: {
          mb: "-1px",
          borderBottom: "1px solid",
          borderColor: "inherit"
        }
      };
    },
    "soft-rounded": function softRounded(props) {
      var c = props.colorScheme,
          theme = props.theme;
      return {
        tab: {
          borderRadius: "full",
          fontWeight: "semibold",
          color: "gray.600",
          _selected: {
            color: (0, _themeTools.getColor)(theme, c + ".700"),
            bg: (0, _themeTools.getColor)(theme, c + ".100")
          }
        }
      };
    },
    "solid-rounded": function solidRounded(props) {
      var c = props.colorScheme;
      return {
        tab: {
          borderRadius: "full",
          fontWeight: "semibold",
          color: (0, _themeTools.mode)("gray.600", "inherit")(props),
          _selected: {
            color: (0, _themeTools.mode)("#fff", "gray.800")(props),
            bg: (0, _themeTools.mode)(c + ".600", c + ".300")(props)
          }
        }
      };
    },
    unstyled: {}
  },
  defaultProps: {
    size: "md",
    variant: "line",
    colorScheme: "blue"
  }
});
var alignments = {
  end: "flex-end",
  center: "center",
  start: "flex-start"
};
var _default = tabs;
exports["default"] = _default;
//# sourceMappingURL=tabs.js.map