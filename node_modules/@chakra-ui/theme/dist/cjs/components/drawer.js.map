{"version":3,"sources":["../../../src/components/drawer.ts"],"names":["drawer","parts","overlay","content","header","body","footer","baseStyle","props","isFullHeight","bg","height","color","boxShadow","px","py","fontSize","fontWeight","flex","overflow","sizes","xs","getSize","sm","md","lg","xl","full","defaultProps","size","value","maxW","h"],"mappings":";;;;;AAAA;;;;AAEA,IAAMA,MAAM,GAAG,kCAAiB;AAC9BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,qBADJ;AAELC,IAAAA,OAAO,EAAE,0BAFJ;AAGLC,IAAAA,MAAM,EAAE,qBAHH;AAILC,IAAAA,IAAI,EAAE,uBAJD;AAKLC,IAAAA,MAAM,EAAE;AALH,GADuB;AAQ9BC,EAAAA,SAAS,EAAE,mBAAUC,KAAV,EAAiB;AAAA,QAClBC,YADkB,GACDD,KADC,CAClBC,YADkB;AAE1B,WAAO;AACLP,MAAAA,OAAO,EAAE;AACPQ,QAAAA,EAAE,EAAE;AADG,OADJ;AAILP,MAAAA,OAAO,eACDM,YAAY,IAAI;AAAEE,QAAAA,MAAM,EAAE;AAAV,OADf;AAELD,QAAAA,EAAE,EAAE,sBAAK,OAAL,EAAc,UAAd,EAA0BF,KAA1B,CAFC;AAGLI,QAAAA,KAAK,EAAE,SAHF;AAILC,QAAAA,SAAS,EAAE,sBAAK,IAAL,EAAW,SAAX,EAAsBL,KAAtB;AAJN,QAJF;AAULJ,MAAAA,MAAM,EAAE;AACNU,QAAAA,EAAE,EAAE,CADE;AAENC,QAAAA,EAAE,EAAE,CAFE;AAGNC,QAAAA,QAAQ,EAAE,IAHJ;AAINC,QAAAA,UAAU,EAAE;AAJN,OAVH;AAiBLZ,MAAAA,IAAI,EAAE;AACJS,QAAAA,EAAE,EAAE,CADA;AAEJC,QAAAA,EAAE,EAAE,CAFA;AAGJG,QAAAA,IAAI,EAAE,CAHF;AAIJC,QAAAA,QAAQ,EAAE;AAJN,OAjBD;AAwBLb,MAAAA,MAAM,EAAE;AACNQ,QAAAA,EAAE,EAAE,CADE;AAENC,QAAAA,EAAE,EAAE;AAFE;AAxBH,KAAP;AA6BD,GAvC6B;AAyC9BK,EAAAA,KAAK,EAAE;AACLC,IAAAA,EAAE,EAAEC,OAAO,CAAC,IAAD,CADN;AAELC,IAAAA,EAAE,EAAED,OAAO,CAAC,IAAD,CAFN;AAGLE,IAAAA,EAAE,EAAEF,OAAO,CAAC,IAAD,CAHN;AAILG,IAAAA,EAAE,EAAEH,OAAO,CAAC,KAAD,CAJN;AAKLI,IAAAA,EAAE,EAAEJ,OAAO,CAAC,KAAD,CALN;AAMLK,IAAAA,IAAI,EAAEL,OAAO,CAAC,MAAD;AANR,GAzCuB;AAkD9BM,EAAAA,YAAY,EAAE;AACZC,IAAAA,IAAI,EAAE;AADM;AAlDgB,CAAjB,CAAf;AAuDA;;;;;AAIA,SAASP,OAAT,CAAiBQ,KAAjB,EAAgC;AAC9B,MAAIA,KAAK,KAAK,MAAd,EAAsB;AACpB,WAAO;AAAE3B,MAAAA,OAAO,EAAE;AAAE4B,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,CAAC,EAAE;AAApB;AAAX,KAAP;AACD;;AAED,SAAO;AACL7B,IAAAA,OAAO,EAAE;AAAE4B,MAAAA,IAAI,EAAED;AAAR;AADJ,GAAP;AAGD;;eAEc9B,M","sourcesContent":["import { mode, multiStyleConfig } from \"@chakra-ui/theme-tools\"\n\nconst drawer = multiStyleConfig({\n  parts: {\n    overlay: \"the overlay or shim\",\n    content: \"the main content wrapper\",\n    header: \"the content heading\",\n    body: \"the main content area\",\n    footer: \"the action footer\",\n  },\n  baseStyle: function (props) {\n    const { isFullHeight } = props\n    return {\n      overlay: {\n        bg: \"blackAlpha.600\",\n      },\n      content: {\n        ...(isFullHeight && { height: \"100vh\" }),\n        bg: mode(\"white\", \"gray.700\")(props),\n        color: \"inherit\",\n        boxShadow: mode(\"lg\", \"dark-lg\")(props),\n      },\n      header: {\n        px: 6,\n        py: 4,\n        fontSize: \"xl\",\n        fontWeight: \"semibold\",\n      },\n\n      body: {\n        px: 6,\n        py: 2,\n        flex: 1,\n        overflow: \"auto\",\n      },\n\n      footer: {\n        px: 6,\n        py: 4,\n      },\n    }\n  },\n\n  sizes: {\n    xs: getSize(\"xs\"),\n    sm: getSize(\"md\"),\n    md: getSize(\"lg\"),\n    lg: getSize(\"2xl\"),\n    xl: getSize(\"4xl\"),\n    full: getSize(\"full\"),\n  },\n\n  defaultProps: {\n    size: \"xs\",\n  },\n})\n\n/**\n * Since the `maxWidth` prop references theme.sizes internally,\n * we can leverage that to size our modals.\n */\nfunction getSize(value: string) {\n  if (value === \"full\") {\n    return { content: { maxW: \"100vw\", h: \"100vh\" } }\n  }\n\n  return {\n    content: { maxW: value },\n  }\n}\n\nexport default drawer\n"],"file":"drawer.js"}