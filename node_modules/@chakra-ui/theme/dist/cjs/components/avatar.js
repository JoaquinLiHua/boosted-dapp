"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _themeTools = require("@chakra-ui/theme-tools");

var _sizes = _interopRequireDefault(require("../foundations/sizes"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var avatar = (0, _themeTools.multiStyleConfig)({
  parts: {
    container: "the avatar wrapper",
    excessLabel: "for avatar group, the excess avatar label",
    badge: "the top or bottom left badge",
    label: "the avatar's name initials text"
  },
  baseStyle: function baseStyle(props) {
    var name = props.name,
        theme = props.theme;
    var bg = name ? (0, _themeTools.randomColor)({
      string: name
    }) : "gray.400";
    var color = name ? (0, _themeTools.isDark)(bg)(theme) ? "white" : "gray.800" : "white";
    var borderColor = (0, _themeTools.mode)("white", "gray.800")(props);
    return {
      badge: {
        transform: "translate(25%, 25%)",
        borderRadius: "full",
        border: "0.2em solid",
        borderColor: (0, _themeTools.mode)("white", "gray.800")(props)
      },
      excessLabel: {
        bg: (0, _themeTools.mode)("gray.200", "whiteAlpha.400")(props)
      },
      container: {
        bg: bg,
        color: color,
        borderColor: borderColor,
        verticalAlign: "top"
      }
    };
  },
  sizes: {
    "2xs": getSize("4"),
    xs: getSize("6"),
    sm: getSize("8"),
    md: getSize("12"),
    lg: getSize("16"),
    xl: getSize("24"),
    "2xl": getSize("32"),
    full: getSize("100%")
  },
  defaultProps: {
    size: "md"
  }
});

function getSize(size) {
  var themeSize = _sizes["default"][size];
  return {
    container: {
      width: size,
      height: size,
      fontSize: "calc(" + (themeSize != null ? themeSize : size) + " / 2.5)"
    },
    excessLabel: {
      width: size,
      height: size
    },
    label: {
      fontSize: "calc(" + (themeSize != null ? themeSize : size) + " / 2.5)",
      lineHeight: size !== "100%" ? themeSize != null ? themeSize : size : undefined
    }
  };
}

var _default = avatar;
exports["default"] = _default;
//# sourceMappingURL=avatar.js.map