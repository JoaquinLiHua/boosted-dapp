{"version":3,"sources":["../../../src/components/modal.ts"],"names":["modal","parts","overlay","content","header","body","footer","baseStyle","props","isCentered","scrollBehavior","bg","display","justifyContent","alignItems","overflow","borderRadius","color","my","maxH","undefined","boxShadow","px","py","fontSize","fontWeight","flex","sizes","xs","getSize","sm","md","lg","xl","full","defaultProps","size","value","maxW","h"],"mappings":"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","sourcesContent":["import { mode, multiStyleConfig } from \"@chakra-ui/theme-tools\"\n\nconst modal = multiStyleConfig({\n  parts: {\n    overlay: \"the modal overlay\",\n    content: \"the modal content wrapper\",\n    header: \"the modal content header\",\n    body: \"the modal main content area\",\n    footer: \"the modal footer action\",\n  },\n\n  baseStyle: function (props) {\n    const { isCentered, scrollBehavior } = props\n\n    return {\n      overlay: {\n        bg: \"blackAlpha.600\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: isCentered ? \"center\" : \"flex-start\",\n        overflow: scrollBehavior === \"inside\" ? \"hidden\" : \"auto\",\n      },\n\n      content: {\n        borderRadius: \"md\",\n        bg: mode(\"white\", \"gray.700\")(props),\n        color: \"inherit\",\n        my: \"3.75rem\",\n        maxH: scrollBehavior === \"inside\" ? \"calc(100vh - 7.5rem)\" : undefined,\n        boxShadow: mode(\"lg\", \"dark-lg\")(props),\n      },\n\n      header: {\n        px: 6,\n        py: 4,\n        fontSize: \"xl\",\n        fontWeight: \"semibold\",\n      },\n\n      body: {\n        px: 6,\n        py: 2,\n        flex: 1,\n        overflow: scrollBehavior === \"inside\" ? \"auto\" : undefined,\n      },\n\n      footer: {\n        px: 6,\n        py: 4,\n      },\n    }\n  },\n\n  sizes: {\n    xs: getSize(\"xs\"),\n    sm: getSize(\"sm\"),\n    md: getSize(\"md\"),\n    lg: getSize(\"lg\"),\n    xl: getSize(\"xl\"),\n    \"2xl\": getSize(\"2xl\"),\n    \"3xl\": getSize(\"3xl\"),\n    \"4xl\": getSize(\"4xl\"),\n    \"5xl\": getSize(\"5xl\"),\n    \"6xl\": getSize(\"6xl\"),\n    full: getSize(\"full\"),\n  },\n\n  defaultProps: {\n    size: \"md\",\n  },\n})\n\n/**\n * Since the `maxWidth` prop references theme.sizes internally,\n * we can leverage that to size our modals.\n */\nfunction getSize(value: string) {\n  if (value === \"full\") {\n    return { content: { maxW: \"100vw\", h: \"100vh\" } }\n  }\n\n  return {\n    content: { maxW: value },\n  }\n}\n\nexport default modal\n"],"file":"modal.js"}