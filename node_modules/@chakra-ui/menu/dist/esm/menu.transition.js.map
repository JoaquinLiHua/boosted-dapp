{"version":3,"sources":["../../src/menu.transition.tsx"],"names":["Transition","focus","__DEV__","React","useMenuContext","MenuTransition","props","children","styles","menu","defaultStyles","init","opacity","transform","transitionTimingFunction","transitionProperty","willChange","entered","transitionDuration","exiting","node","hidden","style","pointerEvents","menuEl","buttonRef","current","document","activeElement","enter","exit","isOpen","displayName"],"mappings":"AAAA,SACEA,UADF,QAIO,uBAJP;AAKA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,kBAA/B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,cAAT,QAA+B,YAA/B;AAQA,OAAO,IAAMC,cAA6C,GAAIC,KAAD,IAAW;AACtE,MAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAuBF,KAA7B;AACA,MAAMG,IAAI,GAAGL,cAAc,EAA3B;AAEA,MAAMM,aAA+B,GAAG;AACtCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,SAAS,EAAE,YAFP;AAGJC,MAAAA,wBAAwB,EAAE,0CAHtB;AAIJC,MAAAA,kBAAkB,EAAE,oBAJhB;AAKJC,MAAAA,UAAU,EAAE;AALR,KADgC;AAQtCC,IAAAA,OAAO,EAAE;AACPL,MAAAA,OAAO,EAAE,CADF;AAEPM,MAAAA,kBAAkB,EAAE,OAFb;AAGPL,MAAAA,SAAS,EAAE;AAHJ,KAR6B;AAatCM,IAAAA,OAAO,EAAE;AACPP,MAAAA,OAAO,EAAE,IADF;AAEPM,MAAAA,kBAAkB,EAAE,OAFb;AAGPL,MAAAA,SAAS,EAAE;AAHJ;AAb6B,GAAxC;AAoBA,sBACE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAGO,IAAD,IAAU;AACjBA,MAAAA,IAAI,CAACC,MAAL,GAAc,KAAd;AACD,KAHH;AAIE,IAAA,QAAQ,EAAGD,IAAD,IAAU;AAClBA,MAAAA,IAAI,CAACC,MAAL,GAAc,IAAd;AACAD,MAAAA,IAAI,CAACE,KAAL,CAAWC,aAAX,GAA2B,MAA3B;AACA,UAAMC,MAAM,GAAGf,IAAI,CAACgB,SAAL,CAAeC,OAA9B;;AACA,UAAIF,MAAM,IAAIG,QAAQ,CAACC,aAAT,KAA2BJ,MAAzC,EAAiD;AAC/CvB,QAAAA,KAAK,CAACuB,MAAD,CAAL;AACD;AACF,KAXH;AAYE,IAAA,MAAM,EAAGJ,IAAD,IAAU;AAChBA,MAAAA,IAAI,CAACC,MAAL,GAAc,KAAd;AACD,KAdH;AAeE,IAAA,SAAS,EAAGD,IAAD,IAAU;AACnBA,MAAAA,IAAI,CAACE,KAAL,CAAWC,aAAX,GAA2B,MAA3B;AACD,KAjBH;AAkBE,IAAA,OAAO,EAAE;AAAEM,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,IAAI,EAAErB,IAAI,CAACsB,MAAL,GAAc,GAAd,GAAoB;AAAtC,KAlBX;AAmBE,IAAA,EAAE,EAAEtB,IAAI,CAACsB,MAnBX;AAoBE,IAAA,MAAM,EAAEvB,MAAF,WAAEA,MAAF,GAAYE,aApBpB;AAqBE,IAAA,aAAa,EAAE,KArBjB;AAsBE,IAAA,QAAQ,EAAEH;AAtBZ,IADF;AA0BD,CAlDM;;AAoDP,IAAIL,OAAJ,EAAa;AACXG,EAAAA,cAAc,CAAC2B,WAAf,GAA6B,gBAA7B;AACD","sourcesContent":["import {\n  Transition,\n  TransitionProps,\n  TransitionStyles,\n} from \"@chakra-ui/transition\"\nimport { focus, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { useMenuContext } from \"./use-menu\"\nimport { SystemStyleObject } from \"@chakra-ui/system\"\n\nexport interface MenuTransitionProps {\n  children: (styles: SystemStyleObject) => React.ReactNode\n  styles?: TransitionProps[\"styles\"]\n}\n\nexport const MenuTransition: React.FC<MenuTransitionProps> = (props) => {\n  const { children, styles } = props\n  const menu = useMenuContext()\n\n  const defaultStyles: TransitionStyles = {\n    init: {\n      opacity: 0.01,\n      transform: \"scale(0.8)\",\n      transitionTimingFunction: \"cubic-bezier(0.175, 0.885, 0.320, 1.175)\",\n      transitionProperty: \"opacity, transform\",\n      willChange: \"opacity, transform\",\n    },\n    entered: {\n      opacity: 1,\n      transitionDuration: \"200ms\",\n      transform: \"scale(1)\",\n    },\n    exiting: {\n      opacity: 0.01,\n      transitionDuration: \"100ms\",\n      transform: \"scale(0.8)\",\n    },\n  }\n\n  return (\n    <Transition\n      onEnter={(node) => {\n        node.hidden = false\n      }}\n      onExited={(node) => {\n        node.hidden = true\n        node.style.pointerEvents = \"auto\"\n        const menuEl = menu.buttonRef.current\n        if (menuEl && document.activeElement !== menuEl) {\n          focus(menuEl)\n        }\n      }}\n      onExit={(node) => {\n        node.hidden = false\n      }}\n      onExiting={(node) => {\n        node.style.pointerEvents = \"none\"\n      }}\n      timeout={{ enter: 0, exit: menu.isOpen ? 200 : 100 }}\n      in={menu.isOpen}\n      styles={styles ?? defaultStyles}\n      unmountOnExit={false}\n      children={children}\n    />\n  )\n}\n\nif (__DEV__) {\n  MenuTransition.displayName = \"MenuTransition\"\n}\n"],"file":"menu.transition.js"}