{"version":3,"sources":["../../src/use-tooltip.ts"],"names":["useDisclosure","useEventListener","useId","usePopper","callAllHandlers","mergeRefs","useCallback","useEffect","useRef","useTooltip","props","openDelay","closeDelay","closeOnClick","closeOnMouseDown","onOpen","onOpenProp","onClose","onCloseProp","placement","id","isOpen","isOpenProp","defaultIsOpen","arrowSize","modifiers","isDisabled","popper","forceUpdate","tooltipId","ref","triggerRef","reference","enterTimeout","exitTimeout","openWithDelay","current","window","setTimeout","closeWithDelay","clearTimeout","onClick","onMouseDown","onKeyDown","event","key","getTriggerProps","onMouseLeave","onMouseEnter","onFocus","onBlur","undefined","getTooltipProps","role","style","getArrowProps","arrow","show","hide"],"mappings":"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","sourcesContent":["import { useDisclosure, useEventListener, useId } from \"@chakra-ui/hooks\"\nimport { Placement, usePopper, UsePopperProps } from \"@chakra-ui/popper\"\nimport { callAllHandlers, Dict, mergeRefs } from \"@chakra-ui/utils\"\nimport { Ref, useCallback, useEffect, useRef } from \"react\"\n\nexport interface UseTooltipProps {\n  /**\n   * Delay (in ms) before showing the tooltip\n   * @default 0ms\n   */\n  openDelay?: number\n  /**\n   * Delay (in ms) before hiding the tooltip\n   * @default 0ms\n   */\n  closeDelay?: number\n  /**\n   * If `true`, the tooltip will hide on click\n   */\n  closeOnClick?: boolean\n  /**\n   * If `true`, the tooltip will hide while the mouse\n   * is down\n   */\n  closeOnMouseDown?: boolean\n  /**\n   * Callback to run when the tooltip shows\n   */\n  onOpen?(): void\n  /**\n   * Callback to run when the tooltip hides\n   */\n  onClose?(): void\n  /**\n   * The Popper.js placement of the tooltip\n   */\n  placement?: Placement\n  /**\n   * Custom `id` to use in place of `uuid`\n   */\n  id?: string\n  /**\n   * If `true`, the tooltip will be shown (in controlled mode)\n   */\n  isOpen?: boolean\n  /**\n   * If `true`, the tooltip will be initially shown\n   */\n  defaultIsOpen?: boolean\n  /**\n   * The size of the arrow in css units (numeric)\n   * @default 10 ( = 10px )\n   */\n  arrowSize?: UsePopperProps[\"arrowSize\"]\n  /**\n   * The Popper.js modifiers to use\n   */\n  modifiers?: UsePopperProps[\"modifiers\"]\n  /**\n   * If `true`, the tooltip will not be shown on any trigger\n   */\n  isDisabled?: boolean\n}\n\nexport function useTooltip(props: UseTooltipProps = {}) {\n  const {\n    openDelay = 0,\n    closeDelay = 0,\n    closeOnClick = true,\n    closeOnMouseDown,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n    placement,\n    id,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    arrowSize = 10,\n    modifiers,\n    isDisabled,\n  } = props\n\n  const { isOpen, onOpen, onClose } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n  })\n\n  const popper = usePopper({\n    forceUpdate: isOpen,\n    placement,\n    arrowSize,\n    modifiers,\n  })\n\n  const tooltipId = useId(id, \"tooltip\")\n\n  const ref = useRef<any>(null)\n  const triggerRef = mergeRefs(ref, popper.reference.ref)\n\n  const enterTimeout = useRef<number>()\n  const exitTimeout = useRef<number>()\n\n  const openWithDelay = useCallback(() => {\n    if (!isDisabled) {\n      enterTimeout.current = window.setTimeout(onOpen, openDelay)\n    }\n  }, [isDisabled, onOpen, openDelay])\n\n  const closeWithDelay = useCallback(() => {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current)\n    }\n    exitTimeout.current = window.setTimeout(onClose, closeDelay)\n  }, [closeDelay, onClose])\n\n  const onClick = useCallback(() => {\n    if (closeOnClick) {\n      closeWithDelay()\n    }\n  }, [closeOnClick, closeWithDelay])\n\n  const onMouseDown = useCallback(() => {\n    if (closeOnMouseDown) {\n      closeWithDelay()\n    }\n  }, [closeOnMouseDown, closeWithDelay])\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    if (isOpen && event.key === \"Escape\") {\n      closeWithDelay()\n    }\n  }\n\n  useEventListener(\"keydown\", onKeyDown)\n\n  useEffect(() => {\n    return () => {\n      clearTimeout(enterTimeout.current)\n      clearTimeout(exitTimeout.current)\n    }\n  }, [])\n\n  const getTriggerProps = useCallback(\n    (props: Dict = {}, ref: Ref<any> = null) => ({\n      ...props,\n      ref: mergeRefs(ref, triggerRef),\n      onMouseLeave: callAllHandlers(props.onMouseLeave, closeWithDelay),\n      onMouseEnter: callAllHandlers(props.onMouseEnter, openWithDelay),\n      onClick: callAllHandlers(props.onClick, onClick),\n      onMouseDown: callAllHandlers(props.onMouseDown, onMouseDown),\n      onFocus: callAllHandlers(props.onFocus, openWithDelay),\n      onBlur: callAllHandlers(props.onBlur, closeWithDelay),\n      \"aria-describedby\": isOpen ? tooltipId : undefined,\n    }),\n    [\n      closeWithDelay,\n      isOpen,\n      onClick,\n      onMouseDown,\n      openWithDelay,\n      tooltipId,\n      triggerRef,\n    ],\n  )\n\n  const getTooltipProps = useCallback(\n    (props: Dict = {}, ref: Ref<any> = null) => ({\n      ...props,\n      id: tooltipId,\n      role: \"tooltip\",\n      ref: mergeRefs(ref, popper.popper.ref),\n      style: {\n        ...props.style,\n        ...popper.popper.style,\n      },\n    }),\n    [popper.popper.ref, popper.popper.style, tooltipId],\n  )\n\n  const getArrowProps = useCallback(\n    (props: Dict = {}, ref: Ref<any> = null) => ({\n      ...props,\n      ref: mergeRefs(ref, popper.arrow.ref),\n      style: { ...props.style, ...popper.arrow.style },\n    }),\n    [popper.arrow.ref, popper.arrow.style],\n  )\n\n  return {\n    isOpen,\n    show: openWithDelay,\n    hide: closeWithDelay,\n    placement: popper.placement,\n    getTriggerProps,\n    getTooltipProps,\n    getArrowProps,\n  }\n}\n\nexport type UseTooltipReturn = ReturnType<typeof useTooltip>\n"],"file":"use-tooltip.js"}