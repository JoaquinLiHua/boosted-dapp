{"version":3,"sources":["../../src/use-tooltip.ts"],"names":["useTooltip","props","openDelay","closeDelay","closeOnClick","closeOnMouseDown","onOpenProp","onOpen","onCloseProp","onClose","placement","id","isOpenProp","isOpen","defaultIsOpen","arrowSize","modifiers","isDisabled","popper","forceUpdate","tooltipId","ref","triggerRef","reference","enterTimeout","exitTimeout","openWithDelay","current","window","setTimeout","closeWithDelay","clearTimeout","onClick","onMouseDown","onKeyDown","event","key","getTriggerProps","onMouseLeave","onMouseEnter","onFocus","onBlur","undefined","getTooltipProps","role","style","getArrowProps","arrow","show","hide"],"mappings":"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","sourcesContent":["import { useDisclosure, useEventListener, useId } from \"@chakra-ui/hooks\"\nimport { Placement, usePopper, UsePopperProps } from \"@chakra-ui/popper\"\nimport { callAllHandlers, Dict, mergeRefs } from \"@chakra-ui/utils\"\nimport { Ref, useCallback, useEffect, useRef } from \"react\"\n\nexport interface UseTooltipProps {\n  /**\n   * Delay (in ms) before showing the tooltip\n   * @default 0ms\n   */\n  openDelay?: number\n  /**\n   * Delay (in ms) before hiding the tooltip\n   * @default 0ms\n   */\n  closeDelay?: number\n  /**\n   * If `true`, the tooltip will hide on click\n   */\n  closeOnClick?: boolean\n  /**\n   * If `true`, the tooltip will hide while the mouse\n   * is down\n   */\n  closeOnMouseDown?: boolean\n  /**\n   * Callback to run when the tooltip shows\n   */\n  onOpen?(): void\n  /**\n   * Callback to run when the tooltip hides\n   */\n  onClose?(): void\n  /**\n   * The Popper.js placement of the tooltip\n   */\n  placement?: Placement\n  /**\n   * Custom `id` to use in place of `uuid`\n   */\n  id?: string\n  /**\n   * If `true`, the tooltip will be shown (in controlled mode)\n   */\n  isOpen?: boolean\n  /**\n   * If `true`, the tooltip will be initially shown\n   */\n  defaultIsOpen?: boolean\n  /**\n   * The size of the arrow in css units (numeric)\n   * @default 10 ( = 10px )\n   */\n  arrowSize?: UsePopperProps[\"arrowSize\"]\n  /**\n   * The Popper.js modifiers to use\n   */\n  modifiers?: UsePopperProps[\"modifiers\"]\n  /**\n   * If `true`, the tooltip will not be shown on any trigger\n   */\n  isDisabled?: boolean\n}\n\nexport function useTooltip(props: UseTooltipProps = {}) {\n  const {\n    openDelay = 0,\n    closeDelay = 0,\n    closeOnClick = true,\n    closeOnMouseDown,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n    placement,\n    id,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    arrowSize = 10,\n    modifiers,\n    isDisabled,\n  } = props\n\n  const { isOpen, onOpen, onClose } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n  })\n\n  const popper = usePopper({\n    forceUpdate: isOpen,\n    placement,\n    arrowSize,\n    modifiers,\n  })\n\n  const tooltipId = useId(id, \"tooltip\")\n\n  const ref = useRef<any>(null)\n  const triggerRef = mergeRefs(ref, popper.reference.ref)\n\n  const enterTimeout = useRef<number>()\n  const exitTimeout = useRef<number>()\n\n  const openWithDelay = useCallback(() => {\n    if (!isDisabled) {\n      enterTimeout.current = window.setTimeout(onOpen, openDelay)\n    }\n  }, [isDisabled, onOpen, openDelay])\n\n  const closeWithDelay = useCallback(() => {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current)\n    }\n    exitTimeout.current = window.setTimeout(onClose, closeDelay)\n  }, [closeDelay, onClose])\n\n  const onClick = useCallback(() => {\n    if (closeOnClick) {\n      closeWithDelay()\n    }\n  }, [closeOnClick, closeWithDelay])\n\n  const onMouseDown = useCallback(() => {\n    if (closeOnMouseDown) {\n      closeWithDelay()\n    }\n  }, [closeOnMouseDown, closeWithDelay])\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    if (isOpen && event.key === \"Escape\") {\n      closeWithDelay()\n    }\n  }\n\n  useEventListener(\"keydown\", onKeyDown)\n\n  useEffect(() => {\n    return () => {\n      clearTimeout(enterTimeout.current)\n      clearTimeout(exitTimeout.current)\n    }\n  }, [])\n\n  const getTriggerProps = useCallback(\n    (props: Dict = {}, ref: Ref<any> = null) => ({\n      ...props,\n      ref: mergeRefs(ref, triggerRef),\n      onMouseLeave: callAllHandlers(props.onMouseLeave, closeWithDelay),\n      onMouseEnter: callAllHandlers(props.onMouseEnter, openWithDelay),\n      onClick: callAllHandlers(props.onClick, onClick),\n      onMouseDown: callAllHandlers(props.onMouseDown, onMouseDown),\n      onFocus: callAllHandlers(props.onFocus, openWithDelay),\n      onBlur: callAllHandlers(props.onBlur, closeWithDelay),\n      \"aria-describedby\": isOpen ? tooltipId : undefined,\n    }),\n    [\n      closeWithDelay,\n      isOpen,\n      onClick,\n      onMouseDown,\n      openWithDelay,\n      tooltipId,\n      triggerRef,\n    ],\n  )\n\n  const getTooltipProps = useCallback(\n    (props: Dict = {}, ref: Ref<any> = null) => ({\n      ...props,\n      id: tooltipId,\n      role: \"tooltip\",\n      ref: mergeRefs(ref, popper.popper.ref),\n      style: {\n        ...props.style,\n        ...popper.popper.style,\n      },\n    }),\n    [popper.popper.ref, popper.popper.style, tooltipId],\n  )\n\n  const getArrowProps = useCallback(\n    (props: Dict = {}, ref: Ref<any> = null) => ({\n      ...props,\n      ref: mergeRefs(ref, popper.arrow.ref),\n      style: { ...props.style, ...popper.arrow.style },\n    }),\n    [popper.arrow.ref, popper.arrow.style],\n  )\n\n  return {\n    isOpen,\n    show: openWithDelay,\n    hide: closeWithDelay,\n    placement: popper.placement,\n    getTriggerProps,\n    getTooltipProps,\n    getArrowProps,\n  }\n}\n\nexport type UseTooltipReturn = ReturnType<typeof useTooltip>\n"],"file":"use-tooltip.js"}